@echo off
chcp 65001 >nul
title EasyWeather - Startup Script

echo.
echo ====================================
echo    üå§Ô∏è  EasyWeather Startup Script
echo ====================================
echo.

:: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js
where node >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org
    pause
    exit /b 1
)

:: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python
where python >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å https://python.org
    pause
    exit /b 1
)

:: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
where docker >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop
    echo    üì• https://www.docker.com/products/docker-desktop
    pause
    exit /b 1
)

echo ‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã!
echo.

:: –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
if not exist "logs" mkdir logs

:start_menu
cls
echo.
echo ====================================
echo    üå§Ô∏è  EasyWeather Startup Script
echo ====================================
echo.
echo üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:
echo.
echo [1] –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ (–ë–î + –°–µ—Ä–≤–µ—Ä + –§—Ä–æ–Ω—Ç + –ë–æ—Ç)
echo [2] –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (–ë–î + –°–µ—Ä–≤–µ—Ä + –§—Ä–æ–Ω—Ç)
echo [3] –¢–æ–ª—å–∫–æ –ë–î + –°–µ—Ä–≤–µ—Ä
echo [4] –¢–æ–ª—å–∫–æ –§—Ä–æ–Ω—Ç
echo [5] –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo [6] –í—ã—Ö–æ–¥
echo.

:: üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º choice –≤–º–µ—Å—Ç–æ set /p
choice /c 123456 /n /m "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç (1-6): "
set choice=%errorlevel%

if %choice%==1 goto full_start
if %choice%==2 goto dev_start
if %choice%==3 goto backend_only
if %choice%==4 goto frontend_only
if %choice%==5 goto stop_services
if %choice%==6 goto exit_script

:: –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
goto start_menu

:full_start
echo.
echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫...
echo.

:: 1. –ó–∞–ø—É—Å–∫–∞–µ–º –ë–î (PostgreSQL –≤ Docker)
echo üìä –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...
start "PostgreSQL Database" cmd /k "docker-compose up postgres"
timeout /t 3 /nobreak >nul

:: 2. –ó–∞–ø—É—Å–∫–∞–µ–º Backend —Å–µ—Ä–≤–µ—Ä
echo üîß –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞...
start "Backend Server" cmd /k "cd backend && python app.py"
timeout /t 2 /nobreak >nul

:: 3. –ó–∞–ø—É—Å–∫–∞–µ–º Frontend
echo üåê –ó–∞–ø—É—Å–∫ frontend...
start "Frontend React" cmd /k "cd frontend && npm start"
timeout /t 2 /nobreak >nul

:: 4. –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞
echo ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...
start "Telegram Bot" cmd /k "cd bot && python bot.py"

echo.
echo ‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!
echo.
echo üåç Frontend: http://localhost:3000
echo üîß Backend:  http://localhost:3001
echo üìä –ë–î:       localhost:5432
echo ü§ñ Telegram Bot –∞–∫—Ç–∏–≤–µ–Ω
echo.
goto wait_exit

:dev_start
echo.
echo üíª –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...
echo.

:: 1. –ó–∞–ø—É—Å–∫–∞–µ–º –ë–î
echo üìä –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...
start "PostgreSQL Database" cmd /k "docker-compose up postgres"
timeout /t 3 /nobreak >nul

:: 2. –ó–∞–ø—É—Å–∫–∞–µ–º Backend
echo üîß –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞...
start "Backend Server" cmd /k "cd backend && python app.py"
timeout /t 2 /nobreak >nul

:: 3. –ó–∞–ø—É—Å–∫–∞–µ–º Frontend
echo üåê –ó–∞–ø—É—Å–∫ frontend...
start "Frontend React" cmd /k "cd frontend && npm start"

echo.
echo ‚úÖ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω!
echo.
echo üåç Frontend: http://localhost:3000
echo üîß Backend:  http://localhost:3001
echo üìä –ë–î:       localhost:5432
echo.
goto wait_exit

:backend_only
echo.
echo üîß –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ Backend...
echo.

:: 1. –ó–∞–ø—É—Å–∫–∞–µ–º –ë–î
echo üìä –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...
start "PostgreSQL Database" cmd /k "docker-compose up postgres"
timeout /t 3 /nobreak >nul

:: 2. –ó–∞–ø—É—Å–∫–∞–µ–º Backend
echo üîß –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞...
start "Backend Server" cmd /k "cd backend && python app.py"

echo.
echo ‚úÖ Backend –∑–∞–ø—É—â–µ–Ω!
echo.
echo üîß Backend: http://localhost:3001
echo üìä –ë–î:      localhost:5432
echo.
goto wait_exit

:frontend_only
echo.
echo üåê –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ Frontend...
echo.

:: –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if not exist "frontend\node_modules" (
    echo üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...
    cd frontend
    npm install
    cd ..
)

start "Frontend React" cmd /k "cd frontend && npm start"

echo.
echo ‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω!
echo.
echo üåç Frontend: http://localhost:3000
echo.
goto wait_exit

:stop_services
echo.
echo üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã...
echo.

:: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker-compose down >nul 2>&1

:: –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Node.js –∏ Python
taskkill /f /im node.exe >nul 2>&1
taskkill /f /im python.exe >nul 2>&1

echo ‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!
echo.
pause
goto start_menu

:wait_exit
echo.
echo üí° –°–æ–≤–µ—Ç—ã:
echo    ‚Ä¢ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 30-60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo    ‚Ä¢ Frontend –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
echo    ‚Ä¢ –í—Å–µ –ª–æ–≥–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
echo    ‚Ä¢ –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –≤ –∫–∞–∂–¥–æ–º –æ–∫–Ω–µ
echo.
echo üîß –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—É–Ω–∫—Ç 5 –≤ –º–µ–Ω—é
echo.

:: üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
echo.
choice /c MX /n /m "–ù–∞–∂–º–∏—Ç–µ [M] –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ [X] –¥–ª—è –≤—ã—Ö–æ–¥–∞: "
if %errorlevel%==1 goto start_menu
if %errorlevel%==2 goto exit_script

:exit_script
echo.
echo üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!
echo.
pause
exit /b 0