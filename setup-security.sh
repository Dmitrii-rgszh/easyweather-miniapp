#!/bin/bash

# EasyWeather - –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å—Ä–µ–¥—É –¥–ª—è EasyWeather

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ EasyWeather..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    fi
    
    success "Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p database/init
    mkdir -p database/config
    mkdir -p database/backups
    mkdir -p database/pgadmin
    mkdir -p backend/src
    mkdir -p logs
    
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–π
generate_passwords() {
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π..."
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π
    POSTGRES_PASS=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    JWT_SECRET=$(openssl rand -base64 64 | tr -d "=+/" | cut -c1-50)
    PGADMIN_PASS=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    cat > .env << EOF
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–æ–ª–∏ - –ù–ï –î–ï–õ–ò–¢–ï–°–¨ –≠–¢–ò–ú –§–ê–ô–õ–û–ú!
POSTGRES_PASSWORD=${POSTGRES_PASS}
JWT_SECRET=${JWT_SECRET}
PGADMIN_PASSWORD=${PGADMIN_PASS}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Ä—Ç–æ–≤
POSTGRES_PORT=5432
PGADMIN_PORT=8080
BACKEND_PORT=3001
FRONTEND_PORT=3000

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
NODE_ENV=production
PGADMIN_EMAIL=admin@easyweather.local
CORS_ORIGIN=http://localhost:3000

# API –∫–ª—é—á–∏ - –ó–ê–ü–û–õ–ù–ò–¢–ï –°–í–û–ò–ú–ò –ó–ù–ê–ß–ï–ù–ò–Ø–ú–ò!
REACT_APP_WEATHER_API_KEY=61e36d8b6d0a171b685c5658b023c23a
REACT_APP_UNSPLASH_KEY=9ho2EDWMLi9bQOlhqJY0s_NaZNRt_EbVqij0SUhFD7U
REACT_APP_GEO_API_KEY=your_geo_api_key_here
TELEGRAM_TOKEN=8055577633:AAGS26-wGLlMYjGlN5jotzkerULWnwWagoc
REACT_APP_API_URL=http://localhost:3001
EOF

    success "–ü–∞—Ä–æ–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .env"
    warning "–í–ê–ñ–ù–û: –ó–∞–ø–æ–ª–Ω–∏—Ç–µ API –∫–ª—é—á–∏ –≤ —Ñ–∞–π–ª–µ .env!"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PostgreSQL
create_postgres_config() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PostgreSQL..."
    
    # postgresql.conf
    cat > database/config/postgresql.conf << 'EOF'
# EasyWeather PostgreSQL Configuration

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
listen_addresses = '*'
port = 5432
max_connections = 20
password_encryption = scram-sha-256

# –ü–∞–º—è—Ç—å
shared_buffers = 128MB
effective_cache_size = 256MB
work_mem = 4MB
maintenance_work_mem = 64MB

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_destination = 'stderr'
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 10MB
log_min_messages = warning
log_min_error_statement = error
log_statement = 'mod'  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
log_duration = on
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
ssl = off  # –í–∫–ª—é—á–∏—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'
ssl_prefer_server_ciphers = on

# –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
checkpoint_timeout = 5min
checkpoint_completion_target = 0.7
wal_buffers = 16MB
default_statistics_target = 100

# –ê–≤—Ç–æ–≤–∞–∫—É—É–º
autovacuum = on
autovacuum_naptime = 1min
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
EOF

    # pg_hba.conf
    cat > database/config/pg_hba.conf << 'EOF'
# EasyWeather PostgreSQL Host-Based Authentication Configuration

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
local   all             all                                     scram-sha-256

# IPv4 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
host    all             all             127.0.0.1/32            scram-sha-256
host    all             all             172.20.0.0/16           scram-sha-256
host    easyweather     easyweather_user 172.20.0.0/16         scram-sha-256

# –ó–∞–ø—Ä–µ—Ç –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
host    all             all             0.0.0.0/0               reject
EOF

    success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PostgreSQL —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
create_backup_script() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    cat > database/backup.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è EasyWeather DB

set -e

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
source .env

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BACKUP_DIR="database/backups"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="easyweather_backup_${DATE}.sql"

echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
docker exec easyweather-postgres pg_dump \
    -U easyweather_user \
    -d easyweather \
    --verbose \
    --clean \
    --if-exists \
    --create \
    --format=plain > "${BACKUP_DIR}/${BACKUP_FILE}"

# –°–∂–∞—Ç–∏–µ
gzip "${BACKUP_DIR}/${BACKUP_FILE}"

echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${BACKUP_DIR}/${BACKUP_FILE}.gz"

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–ø–∏–π (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
find "${BACKUP_DIR}" -name "*.gz" -mtime +30 -delete

echo "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
EOF

    chmod +x database/backup.sh
    success "–°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ PgAdmin —Å–µ—Ä–≤–µ—Ä–æ–≤
create_pgadmin_config() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PgAdmin..."
    
    cat > database/pgadmin/servers.json << 'EOF'
{
    "Servers": {
        "1": {
            "Name": "EasyWeather Database",
            "Group": "EasyWeather",
            "Host": "easyweather-postgres",
            "Port": 5432,
            "MaintenanceDB": "easyweather",
            "Username": "easyweather_user",
            "SSLMode": "prefer",
            "SSLCert": "<STORAGE_DIR>/.postgresql/postgresql.crt",
            "SSLKey": "<STORAGE_DIR>/.postgresql/postgresql.key",
            "SSLCompression": 0,
            "Timeout": 10,
            "UseSSHTunnel": 0,
            "TunnelPort": "22",
            "TunnelAuthentication": 0
        }
    }
}
EOF

    success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PgAdmin —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
create_monitoring() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    cat > monitor.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ EasyWeather

echo "=== EasyWeather System Status ==="
echo

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" --filter "name=easyweather"
echo

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" --filter "name=easyweather"
echo

# –õ–æ–≥–∏ –æ—à–∏–±–æ–∫ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫)
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ PostgreSQL:"
docker logs easyweather-postgres 2>&1 | grep -i error | tail -5 || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
echo

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo "üîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:"
if docker exec easyweather-postgres pg_isready -U easyweather_user -d easyweather > /dev/null 2>&1; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
else
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi
echo

# –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üíø –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
docker exec easyweather-postgres psql -U easyweather_user -d easyweather -c "
    SELECT 
        pg_size_pretty(pg_database_size('easyweather')) as database_size,
        (SELECT count(*) FROM auth.admins) as admin_count,
        (SELECT count(*) FROM weather.weather_requests) as weather_requests_count;
" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ë–î"

echo "=== –ö–æ–Ω–µ—Ü –æ—Ç—á–µ—Ç–∞ ==="
EOF

    chmod +x monitor.sh
    success "–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
setup_firewall() {
    if command -v ufw &> /dev/null; then
        log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW —Ñ–∞–π—Ä–≤–æ–ª–∞..."
        
        # –†–∞–∑—Ä–µ—à–∏—Ç—å SSH
        sudo ufw allow ssh
        
        # –†–∞–∑—Ä–µ—à–∏—Ç—å HTTP/HTTPS
        sudo ufw allow 80
        sudo ufw allow 443
        
        # –†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ—Ä—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
        sudo ufw allow from 127.0.0.1 to any port 3000
        sudo ufw allow from 127.0.0.1 to any port 3001
        sudo ufw allow from 127.0.0.1 to any port 5432
        sudo ufw allow from 127.0.0.1 to any port 8080
        
        warning "UFW –ø—Ä–∞–≤–∏–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã. –í–∫–ª—é—á–∏—Ç–µ UFW –∫–æ–º–∞–Ω–¥–æ–π: sudo ufw enable"
    else
        warning "UFW –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª –≤—Ä—É—á–Ω—É—é!"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ EasyWeather..."
    echo
    
    check_docker
    create_directories
    generate_passwords
    create_postgres_config
    create_backup_script
    create_pgadmin_config
    create_monitoring
    setup_firewall
    
    echo
    success "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d"
    echo "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: ./monitor.sh"
    echo "5. –î–æ—Å—Ç—É–ø –∫ PgAdmin: http://localhost:8080"
    echo
    echo "üîê –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:"
    echo "   PgAdmin: admin@easyweather.local / $(grep PGADMIN_PASSWORD .env | cut -d'=' -f2)"
    echo "   DB Admin: admin / Admin2025!"
    echo
    warning "‚ö†Ô∏è  –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!"
    warning "‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å .env –≤ .gitignore!"
}

# –ó–∞–ø—É—Å–∫
main "$@"