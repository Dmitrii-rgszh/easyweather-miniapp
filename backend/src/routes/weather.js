const express = require('express');
const router = express.Router();

// API –∫–ª—é—á –¥–ª—è –ø–æ–≥–æ–¥—ã
const WEATHER_API_KEY = process.env.WEATHER_API_KEY || process.env.REACT_APP_WEATHER_API_KEY;

console.log('üå§Ô∏è Weather router –∑–∞–≥—Ä—É–∂–µ–Ω');
console.log('üîë Weather API Key:', WEATHER_API_KEY ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω ‚úÖ' : '–ù–ï –ù–ê–ô–î–ï–ù ‚ùå');

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
router.post('/current', async (req, res) => {
  try {
    console.log('üå°Ô∏è –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã –ø–æ–ª—É—á–µ–Ω:', req.body);
    
    const { city_name } = req.body;
    
    if (!city_name) {
      return res.status(400).json({
        success: false,
        error: '–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      });
    }

    if (!WEATHER_API_KEY) {
      console.error('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return res.status(500).json({
        success: false,
        error: 'API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
      });
    }

    // üåê URL —Å units=metric –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤ Celsius
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city_name)}&appid=${WEATHER_API_KEY}&units=metric&lang=ru`;
    
    console.log('üåê –ó–∞–ø—Ä–æ—Å –∫ OpenWeatherMap –¥–ª—è –≥–æ—Ä–æ–¥–∞:', city_name);
    
    const response = await fetch(url);
    
    if (!response.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ OpenWeatherMap API:', response.status);
      throw new Error(`OpenWeatherMap API error: ${response.status}`);
    }
    
    const data = await response.json();
    
    // üå°Ô∏è –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç API:', data.main.temp, '¬∞C');
    console.log('üèôÔ∏è –ì–æ—Ä–æ–¥:', data.name);
    
    res.json({
      success: true,
      data: data,
      source: 'backend'
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:', error);
    res.status(500).json({
      success: false,
      error: `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${error.message}`
    });
  }
});

// üÜï –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã (–ù–û–í–´–ô –†–û–£–¢)
router.post('/forecast', async (req, res) => {
  try {
    console.log('üîÆ –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—É—á–µ–Ω:', req.body);
    
    const { city_name, days = 5 } = req.body;
    
    if (!city_name) {
      return res.status(400).json({
        success: false,
        error: '–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      });
    }

    if (!WEATHER_API_KEY) {
      console.error('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return res.status(500).json({
        success: false,
        error: 'API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
      });
    }

    // üåê URL —Å units=metric –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(city_name)}&appid=${WEATHER_API_KEY}&units=metric&lang=ru`;
    
    console.log('üîÆ –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –∫ OpenWeatherMap –¥–ª—è –≥–æ—Ä–æ–¥–∞:', city_name);
    
    const response = await fetch(url);
    
    if (!response.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ OpenWeatherMap API –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞:', response.status);
      throw new Error(`OpenWeatherMap API error: ${response.status}`);
    }
    
    const data = await response.json();
    
    console.log('üìä –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', data.list.length);
    
    res.json({
      success: true,
      data: data,
      source: 'backend'
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞:', error);
    res.status(500).json({
      success: false,
      error: `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞: ${error.message}`
    });
  }
});

module.exports = router;