// üß™ A/B –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ê–ù–ù–ï–†–û–í - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π AdBanner.js

import analytics from './analytics';
import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

// üéØ –í–ê–†–ò–ê–ù–¢–´ –ë–ê–ù–ù–ï–†–û–í –î–õ–Ø A/B –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
const BANNER_VARIANTS = [
  {
    id: 'variant_a',
    name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π',
    title: 'üí≥ +1000‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É + –Ω–∞–≤—Å–µ–≥–¥–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
    subtitle: '‚≠ê –ê–≤—Ç–æ—Ä EasyWeather –¥–µ–ª–∏—Ç—Å—è —Å–µ–∫—Ä–µ—Ç–æ–º',
    buttonText: '–ü–æ–ª—É—á–∏—Ç—å',
    colors: {
      primary: '#0066cc',
      secondary: '#004999',
      button: 'rgba(255,255,255,0.2)'
    }
  },
  {
    id: 'variant_b', 
    name: '–¢—Ä–µ–Ω–¥–æ–≤—ã–π',
    title: 'üî• –õ—É—á—à–∞—è –∫–∞—Ä—Ç–∞ 2025 + 1000‚ÇΩ –±–æ–Ω—É—Å',
    subtitle: '‚≠ê –ê–≤—Ç–æ—Ä EasyWeather –¥–µ–ª–∏—Ç—Å—è —Å–µ–∫—Ä–µ—Ç–æ–º',
    buttonText: '–•–æ—á—É!',
    colors: {
      primary: '#ff6b35',
      secondary: '#e55a2b', 
      button: 'rgba(255,255,255,0.25)'
    }
  },
  {
    id: 'variant_c',
    name: '–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π', 
    title: '‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞ + –∫—ç—à–±—ç–∫ –¥–æ 30%',
    subtitle: '‚≠ê –ê–≤—Ç–æ—Ä EasyWeather –¥–µ–ª–∏—Ç—Å—è —Å–µ–∫—Ä–µ—Ç–æ–º',
    buttonText: '–ë—ã—Å—Ç—Ä–æ!',
    colors: {
      primary: '#10b981',
      secondary: '#059669',
      button: 'rgba(255,255,255,0.2)'
    }
  }
];

const AdBanner = () => {
  const [isVisible, setIsVisible] = useState(true);
  const [sessionId, setSessionId] = useState('');
  const [currentVariant, setCurrentVariant] = useState(null);
  const [abTestId, setAbTestId] = useState('');

  // üîß –û–¢–õ–ê–î–ö–ê - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª–∏
  useEffect(() => {
    console.log('üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã A/B —Ç–µ—Å—Ç–∞:', BANNER_VARIANTS.map(v => ({
      id: v.id,
      name: v.name,
      title: v.title
    })));
  }, []);

  // üé≤ –í–´–ë–û–† –í–ê–†–ò–ê–ù–¢–ê –î–õ–Ø A/B –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
  useEffect(() => {
    // üîß –û–¢–õ–ê–î–ö–ê - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage
    console.log('üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ A/B —Ç–µ—Å—Ç–∞:', {
      savedVariant: localStorage.getItem('abTestVariant'),
      savedTestId: localStorage.getItem('abTestId')
    });
  
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ —Å–µ—Å—Å–∏–∏
    let savedVariant = localStorage.getItem('abTestVariant');
    let savedTestId = localStorage.getItem('abTestId');
    
    if (!savedVariant || !savedTestId) {
      // –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç
      const randomIndex = Math.floor(Math.random() * BANNER_VARIANTS.length);
      const selectedVariant = BANNER_VARIANTS[randomIndex];
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ç–µ—Å—Ç–∞
      const testId = `ab_${Date.now()}_${Math.random().toString(36).substr(2, 6)}`;
      
      localStorage.setItem('abTestVariant', selectedVariant.id);
      localStorage.setItem('abTestId', testId);
      
      setCurrentVariant(selectedVariant);
      setAbTestId(testId);
      
      console.log('üß™ A/B —Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω:', {
        variant: selectedVariant.name,
        id: selectedVariant.id,
        testId: testId
      });
    } else {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
      const variant = BANNER_VARIANTS.find(v => v.id === savedVariant) || BANNER_VARIANTS[0];
      setCurrentVariant(variant);
      setAbTestId(savedTestId);
      
      console.log('üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º A/B —Ç–µ—Å—Ç:', {
        variant: variant.name,
        id: variant.id,
        testId: savedTestId
      });
    }
  }, []);
  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ window –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
      window.resetABTest = () => {
        localStorage.removeItem('abTestVariant');
        localStorage.removeItem('abTestId');
        console.log('üîÑ A/B —Ç–µ—Å—Ç —Å–±—Ä–æ—à–µ–Ω! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        window.location.reload();
      };
    
      window.forceVariant = (variantId) => {
        const variant = BANNER_VARIANTS.find(v => v.id === variantId);
        if (variant) {
          localStorage.setItem('abTestVariant', variantId);
          localStorage.setItem('abTestId', `forced_${Date.now()}`);
          console.log(`üéØ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç: ${variant.name}`);
          window.location.reload();
        } else {
          console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –≤–∞—Ä–∏–∞–Ω—Ç–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ:', BANNER_VARIANTS.map(v => v.id));
        }
      };
    
      console.log('üõ†Ô∏è –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ A/B —Ç–µ—Å—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ window:');
      console.log('‚Ä¢ window.resetABTest() - —Å–±—Ä–æ—Å–∏—Ç—å —Ç–µ—Å—Ç');
      console.log('‚Ä¢ window.forceVariant("variant_a") - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç');
    }
  }, []);
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  useEffect(() => {
    const timer = setTimeout(() => {
      setIsVisible(true);
    }, 2000);

    return () => clearTimeout(timer);
  }, []);

  // üÜï –ì–ï–ù–ï–†–ò–†–£–ï–ú SESSION ID –ü–†–ò –°–¢–ê–†–¢–ï
  useEffect(() => {
    let currentSessionId = localStorage.getItem('userSessionId');
    
    if (!currentSessionId) {
      currentSessionId = 'sess_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
      localStorage.setItem('userSessionId', currentSessionId);
    }
    
    setSessionId(currentSessionId);
  }, []);

  // üÜï –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–û–ö–ê–ó–û–í –ë–ê–ù–ù–ï–†–ê –° A/B –î–ê–ù–ù–´–ú–ò
  useEffect(() => {
    if (isVisible && sessionId && currentVariant) {
      const timer = setTimeout(() => {
        analytics.trackBannerView(currentVariant.id);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –¥–∞–Ω–Ω—ã–º–∏ A/B —Ç–µ—Å—Ç–∞
        fetch('http://localhost:3001/api/analytics/banner-click', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            banner_id: currentVariant.id,
            page_url: window.location.href,
            sessionId: sessionId,
            event_type: 'impression',
            campaign_id: `ab_test_${abTestId}`,
            user_id: window.Telegram?.WebApp?.initDataUnsafe?.user?.id || null
          })
        }).then(response => response.json())
          .then(result => {
            if (result.success) {
              console.log('‚úÖ –ü–æ–∫–∞–∑ A/B –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω:', currentVariant.name);
            }
          })
          .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ø–æ–∫–∞–∑–∞ A/B —Ç–µ—Å—Ç–∞:', error);
          });
      }, 1000);

      return () => clearTimeout(timer);
    }
  }, [isVisible, sessionId, currentVariant, abTestId]);

  // üöÄ –§–£–ù–ö–¶–ò–Ø –û–¢–ü–†–ê–í–ö–ò –ö–õ–ò–ö–ê –ù–ê –°–ï–†–í–ï–† (–°–¢–ê–†–ê–Ø –í–ï–†–°–ò–Ø –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò)
  const sendClickToServer = async (sessionId) => {
    try {
      const response = await fetch('http://localhost:3001/api/analytics/banner-click', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          sessionId: sessionId,
          timestamp: new Date().toISOString(),
        })
      });

      const result = await response.json();
      
      if (result.success) {
        console.log('‚úÖ –ö–ª–∏–∫ –ø–æ –±–∞–Ω–Ω–µ—Ä—É –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è):', result);
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–∫–∞:', result.error);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
    }
  };

  // üéØ –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò –ö–õ–ò–ö–ê –° A/B –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï–ú
  const handleBannerClick = async (event) => {
    if (!currentVariant) return;
    
    console.log('üéØ –ö–ª–∏–∫ –ø–æ A/B –≤–∞—Ä–∏–∞–Ω—Ç—É:', currentVariant.name);
    
    // üÜï –ü–û–õ–£–ß–ê–ï–ú –ö–û–û–†–î–ò–ù–ê–¢–´ –ö–õ–ò–ö–ê
    const rect = event.currentTarget.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;
    const coordinates = `${Math.round(x)},${Math.round(y)}`;
    
    // üÜï –û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú –ö–õ–ò–ö –ü–û –ë–ê–ù–ù–ï–†–£ –í –¢–ï–õ–ï–ì–†–ê–ú –ê–ù–ê–õ–ò–¢–ò–ö–ï
    analytics.trackBannerClick(currentVariant.id);
    
    // üöÄ –ù–û–í–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê –° A/B –î–ê–ù–ù–´–ú–ò
    try {
      const response = await fetch('http://localhost:3001/api/analytics/banner-click', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          banner_id: currentVariant.id,
          click_coordinates: coordinates,
          page_url: window.location.href,
          user_id: window.Telegram?.WebApp?.initDataUnsafe?.user?.id || null,
          sessionId: sessionId,
          campaign_id: `ab_test_${abTestId}`,
          variant_name: currentVariant.name
        })
      });

      const result = await response.json();
      
      if (result.success) {
        console.log('‚úÖ A/B –∫–ª–∏–∫ –∑–∞–ø–∏—Å–∞–Ω:', {
          variant: currentVariant.name,
          coordinates: coordinates,
          clickId: result.clickId || result.click_id
        });
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–æ–≤–æ–π A/B –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', result.error);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ A/B –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
    }
    
    // üîÑ –°–¢–ê–†–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê (–î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò)
    if (sessionId) {
      sendClickToServer(sessionId);
    }
    
    // üìä –î–£–ë–õ–ò–†–£–ï–ú –í LOCALSTORAGE –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò 
    const savedClicks = localStorage.getItem('bannerClicks') || '0';
    const newCount = parseInt(savedClicks) + 1;
    localStorage.setItem('bannerClicks', newCount.toString());
    localStorage.setItem('lastBannerClick', new Date().toISOString());
    
    // üéâ –ó–ê–ü–ò–°–´–í–ê–ï–ú –£–°–ü–ï–®–ù–£–Æ –ö–û–ù–í–ï–†–°–ò–Æ A/B –¢–ï–°–¢–ê
    localStorage.setItem(`abTest_${currentVariant.id}_conversions`, 
      (parseInt(localStorage.getItem(`abTest_${currentVariant.id}_conversions`) || '0') + 1).toString()
    );
    
    // üöÄ –û–¢–ö–†–´–í–ê–ï–ú –°–°–´–õ–ö–£
    window.open('https://vtb.ru/l/m6e34kae', '_blank');
  };

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–ª –∏–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω
  if (!isVisible || !currentVariant) return null;

  const handleDismiss = () => {
    setIsVisible(false);
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ —Å A/B –¥–∞–Ω–Ω—ã–º–∏
    analytics.trackAction('banner_dismiss', { 
      banner_id: currentVariant.id,
      variant_name: currentVariant.name
    });
  };

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0, y: 50 }}
        animate={{ opacity: 1, y: 0 }}
        exit={{ opacity: 0, y: 50 }}
        transition={{ duration: 0.6, delay: 0.5 }}
        style={{
          position: 'fixed',
          bottom: '20px',
          left: '0',
          right: '0',
          zIndex: 1000,
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          padding: '0 20px',
          pointerEvents: 'none'
        }}
      >
        <motion.div
          whileHover={{ scale: 1.02 }}
          whileTap={{ scale: 0.98 }}
          style={{
            background: `linear-gradient(135deg, ${currentVariant.colors.primary} 0%, ${currentVariant.colors.secondary} 100%)`,
            borderRadius: '18px',
            padding: '10px',
            color: 'white',
            boxShadow: `0 8px 32px ${currentVariant.colors.primary}40`,
            border: '1px solid rgba(255, 255, 255, 0.1)',
            cursor: 'pointer',
            position: 'relative',
            overflow: 'hidden',
            width: '100%',
            maxWidth: '380px',
            minWidth: '320px',
            pointerEvents: 'auto'
          }}
          onClick={handleBannerClick}
        >

          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
          <button
            onClick={(e) => {
              e.stopPropagation();
              handleDismiss();
            }}
            style={{
              position: 'absolute',
              top: '8px',
              right: '8px',
              background: 'rgba(255,255,255,0.2)',
              border: 'none',
              borderRadius: '50%',
              width: '24px',
              height: '24px',
              color: 'white',
              fontSize: '16px',
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              zIndex: 3
            }}
            title="–ó–∞–∫—Ä—ã—Ç—å –±–∞–Ω–Ω–µ—Ä"
          >
            √ó
          </button>

          {/* –§–æ–Ω–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç */}
          <div style={{
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%)',
            animation: 'shimmer 3s infinite'
          }} />

          <div style={{ display: 'flex', alignItems: 'center', gap: '14px', position: 'relative', zIndex: 2 }}>
            {/* –õ–æ–≥–æ—Ç–∏–ø –í–¢–ë */}
            <div style={{
              width: '54px',
              height: '54px',
              background: 'white',
              borderRadius: '14px',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              fontSize: '18px',
              fontWeight: '700',
              color: currentVariant.colors.primary,
              boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
              flexShrink: 0
            }}>
              –í–¢–ë
            </div>

            <div style={{ flex: 1, minWidth: 0 }}>
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div style={{
                fontSize: '16px',
                fontWeight: '700',
                marginBottom: '4px',
                fontFamily: 'Montserrat, Arial, sans-serif',
                lineHeight: '1.2'
              }}>
                {currentVariant.title}
              </div>
              
              {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div style={{
                fontSize: '13px',
                opacity: 0.9,
                fontFamily: 'Montserrat, Arial, sans-serif',
                lineHeight: '1.2'
              }}>
                {currentVariant.subtitle}
              </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ */}
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              style={{
                background: currentVariant.colors.button,
                borderRadius: '10px',
                padding: '10px 16px',
                fontSize: '14px',
                fontWeight: '600',
                border: '1px solid rgba(255,255,255,0.3)',
                fontFamily: 'Montserrat, Arial, sans-serif',
                flexShrink: 0,
                whiteSpace: 'nowrap'
              }}
            >
              {currentVariant.buttonText}
            </motion.div>
          </div>
        </motion.div>

        {/* CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ */}
        <style jsx>{`
          @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
          }
          
          @media (max-width: 420px) {
            .ad-banner-container {
              padding: 0 15px !important;
            }
          }
        `}</style>
      </motion.div>
    </AnimatePresence>
  );
};

export default AdBanner;

