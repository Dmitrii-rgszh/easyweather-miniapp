// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç WeatherAlerts - —Å–∏—Å—Ç–µ–º–∞ –ø–æ–≥–æ–¥–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞–ª–µ—Ä—Ç–æ–≤
function generateWeatherAlerts(weather, airQuality, uvData, forecast) {
  const alerts = [];
  
  if (!weather) return alerts;

  const temp = weather.temp;
  const desc = weather.desc.toLowerCase();
  const humidity = weather.details?.humidity || 0;
  const windSpeed = parseFloat(weather.details?.wind?.replace(' –º/—Å', '') || '0');
  const pressure = weather.details?.pressure || 760;

  // üå°Ô∏è –¢–ï–ú–ü–ï–†–ê–¢–£–†–ù–´–ï –ê–õ–ï–†–¢–´
  if (temp <= -15) {
    alerts.push({
      id: 'extreme_cold',
      type: 'critical',
      icon: 'ü•∂',
      title: '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π —Ö–æ–ª–æ–¥',
      message: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∏–∂–µ -15¬∞C. –ò–∑–±–µ–≥–∞–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –Ω–∞ —É–ª–∏—Ü–µ!',
      color: '#1e40af',
      bgColor: '#1e40af15',
      iconBgColor: '#1e40af10',
      priority: 1,
      actions: ['–¢–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞', '–û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ', '–ó–∞—â–∏—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ —É—á–∞—Å—Ç–∫–∏ –∫–æ–∂–∏']
    });
  } else if (temp >= 35) {
    alerts.push({
      id: 'extreme_heat',
      type: 'critical',
      icon: 'üî•',
      title: '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –∂–∞—Ä–∞',
      message: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 35¬∞C. –†–∏—Å–∫ —Ç–µ–ø–ª–æ–≤–æ–≥–æ —É–¥–∞—Ä–∞!',
      color: '#dc2626',
      bgColor: '#dc262615',
      iconBgColor: '#dc262610',
      priority: 1,
      actions: ['–ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã', '–ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä—è–º–æ–≥–æ —Å–æ–ª–Ω—Ü–∞', '–û–≥—Ä–∞–Ω–∏—á—å—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å']
    });
  } else if (temp >= 30) {
    alerts.push({
      id: 'high_heat',
      type: 'warning',
      icon: '‚òÄÔ∏è',
      title: '–°–∏–ª—å–Ω–∞—è –∂–∞—Ä–∞',
      message: '–í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞. –°–æ–±–ª—é–¥–∞–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å –Ω–∞ —Å–æ–ª–Ω—Ü–µ.',
      color: '#f59e0b',
      bgColor: '#f59e0b15',
      iconBgColor: '#f59e0b10',
      priority: 2,
      actions: ['–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º', '–ù–æ—Å–∏—Ç–µ –ª–µ–≥–∫—É—é –æ–¥–µ–∂–¥—É', '–ò–∑–±–µ–≥–∞–π—Ç–µ –ø–æ–ª—É–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–ª–Ω—Ü–∞']
    });
  }

  // üåßÔ∏è –û–°–ê–î–ö–ò –ò –°–¢–ò–•–ò–Ø
  if (desc.includes('–¥–æ–∂–¥') && windSpeed > 15) {
    alerts.push({
      id: 'storm',
      type: 'critical',
      icon: '‚õàÔ∏è',
      title: '–®—Ç–æ—Ä–º',
      message: '–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å –≤–µ—Ç—Ä–æ–º. –ò–∑–±–µ–≥–∞–π—Ç–µ –ø–æ–µ–∑–¥–æ–∫ –∏ –ø—Ä–æ–≥—É–ª–æ–∫!',
      color: '#7c2d12',
      bgColor: '#7c2d1215',
      iconBgColor: '#7c2d1210',
      priority: 1,
      actions: ['–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –¥–æ–º–∞', '–ò–∑–±–µ–≥–∞–π—Ç–µ –¥–µ—Ä–µ–≤—å–µ–≤', '–û—Ç–ª–æ–∂–∏—Ç–µ –ø–æ–µ–∑–¥–∫–∏']
    });
  } else if (desc.includes('–¥–æ–∂–¥')) {
    alerts.push({
      id: 'rain',
      type: 'info',
      icon: 'üåßÔ∏è',
      title: '–î–æ–∂–¥—å',
      message: '–û–∂–∏–¥–∞–µ—Ç—Å—è –¥–æ–∂–¥—å. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–æ–Ω—Ç!',
      color: '#3b82f6',
      bgColor: '#3b82f615',
      iconBgColor: '#3b82f610',
      priority: 3,
      actions: ['–í–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç', '–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è –æ–±—É–≤—å', '–ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –Ω–∞ –¥–æ—Ä–æ–≥–µ']
    });
  }

  if (desc.includes('—Å–Ω–µ–≥') && temp < -5) {
    alerts.push({
      id: 'heavy_snow',
      type: 'warning',
      icon: '‚ùÑÔ∏è',
      title: '–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥–æ–ø–∞–¥',
      message: '–°–Ω–µ–≥ –ø—Ä–∏ –Ω–∏–∑–∫–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ. –í–æ–∑–º–æ–∂–Ω–∞ –≥–æ–ª–æ–ª–µ–¥–∏—Ü–∞!',
      color: '#0891b2',
      bgColor: '#0891b215',
      iconBgColor: '#0891b210',
      priority: 2,
      actions: ['–ü—Ä–æ—Ç–∏–≤–æ—Å–∫–æ–ª—å–∑—è—â–∞—è –æ–±—É–≤—å', '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ –Ω–∞ –¥–æ—Ä–æ–≥–µ', '–ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –¥–æ—Ä–æ–≥—É']
    });
  }

  // üí® –í–ï–¢–ï–†
  if (windSpeed >= 20) {
    alerts.push({
      id: 'strong_wind',
      type: 'warning',
      icon: 'üí®',
      title: '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',
      message: `–í–µ—Ç–µ—Ä ${windSpeed} –º/—Å. –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –≤—ã—Å–æ–∫–∏–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏!`,
      color: '#6366f1',
      bgColor: '#6366f115',
      iconBgColor: '#6366f110',
      priority: 2,
      actions: ['–ò–∑–±–µ–≥–∞–π—Ç–µ –¥–µ—Ä–µ–≤—å–µ–≤', '–ó–∞–∫—Ä–µ–ø–∏—Ç–µ –ª–µ–≥–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã', '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ —Å –∑–æ–Ω—Ç–∞–º–∏']
    });
  }

  // üå´Ô∏è –¢–£–ú–ê–ù –ò –í–ò–î–ò–ú–û–°–¢–¨
  if (desc.includes('—Ç—É–º–∞–Ω') || humidity > 95) {
    alerts.push({
      id: 'fog',
      type: 'warning',
      icon: 'üå´Ô∏è',
      title: '–¢—É–º–∞–Ω',
      message: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å. –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –Ω–∞ –¥–æ—Ä–æ–≥–µ!',
      color: '#6b7280',
      bgColor: '#6b728015',
      iconBgColor: '#6b728010',
      priority: 2,
      actions: ['–í–∫–ª—é—á–∏—Ç–µ —Ñ–∞—Ä—ã', '–°–Ω–∏–∑—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å', '–£–≤–µ–ª–∏—á—å—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é']
    });
  }

  // üå¨Ô∏è –ö–ê–ß–ï–°–¢–í–û –í–û–ó–î–£–•–ê
  if (airQuality && airQuality.list && airQuality.list[0]) {
    const aqi = airQuality.list[0].main.aqi;
    if (aqi >= 4) {
      alerts.push({
        id: 'air_quality',
        type: 'warning',
        icon: 'üò∑',
        title: '–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞',
        message: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è. –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ!',
        color: '#ef4444',
        bgColor: '#ef444415',
        iconBgColor: '#ef444410',
        priority: 2,
        actions: ['–ù–æ—Å–∏—Ç–µ –º–∞—Å–∫—É', '–ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–∞', '–û–≥—Ä–∞–Ω–∏—á—å—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å']
      });
    }
  }

  // ‚òÄÔ∏è UV –ò–ù–î–ï–ö–°
  if (uvData && uvData.value >= 8) {
    alerts.push({
      id: 'uv_high',
      type: 'warning',
      icon: 'üï∂Ô∏è',
      title: '–í—ã—Å–æ–∫–∏–π UV –∏–Ω–¥–µ–∫—Å',
      message: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å UV –∏–∑–ª—É—á–µ–Ω–∏—è. –ó–∞—â–∏—Ç–∏—Ç–µ –∫–æ–∂—É!',
      color: '#f59e0b',
      bgColor: '#f59e0b15',
      iconBgColor: '#f59e0b10',
      priority: 2,
      actions: ['SPF 50+ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ', '–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏', '–ò–∑–±–µ–≥–∞–π—Ç–µ –ø–æ–ª—É–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–ª–Ω—Ü–∞']
    });
  }

  // üìä –î–ê–í–õ–ï–ù–ò–ï
  if (pressure < 720) {
    alerts.push({
      id: 'low_pressure',
      type: 'info',
      icon: 'üìâ',
      title: '–ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
      message: '–ü–æ–Ω–∏–∂–µ–Ω–Ω–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ. –ú–µ—Ç–µ–æ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ª—é–¥–∏ –º–æ–≥—É—Ç —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç.',
      color: '#8b5cf6',
      bgColor: '#8b5cf615',
      iconBgColor: '#8b5cf610',
      priority: 3,
      actions: ['–ë–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞', '–ò–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–∞', '–ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã']
    });
  }

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
  return alerts.sort((a, b) => a.priority - b.priority);
}

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±—â–µ–π —Ç–µ–º—ã –±–ª–æ–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤
function getAlertsTheme(alerts) {
  const criticalAlerts = alerts.filter(alert => alert.type === 'critical').length;
  const warningAlerts = alerts.filter(alert => alert.type === 'warning').length;
  
  if (criticalAlerts > 0) {
    return {
      mainColor: '#dc2626',
      bgColor: '#dc262615',
      iconBgColor: '#dc262610'
    };
  } else if (warningAlerts > 0) {
    return {
      mainColor: '#f59e0b',
      bgColor: '#f59e0b15',
      iconBgColor: '#f59e0b10'
    };
  } else {
    return {
      mainColor: '#3b82f6',
      bgColor: '#3b82f615',
      iconBgColor: '#3b82f610'
    };
  }
}

// SVG —Å—Ç—Ä–µ–ª–∫–∞
const ChevronIcon = ({ isOpen }) => (
  <motion.svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    animate={{ rotate: isOpen ? 180 : 0 }}
    transition={{ duration: 0.3 }}
    style={{ color: "#6b7280" }}
  >
    <path
      d="M6 9L12 15L18 9"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </motion.svg>
);

export default function WeatherAlerts({ weather, airQuality, uvData, forecast }) {
  const [isExpanded, setIsExpanded] = useState(false);
  
  const alerts = generateWeatherAlerts(weather, airQuality, uvData, forecast);
  const theme = getAlertsTheme(alerts);
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –∞–ª–µ—Ä—Ç–æ–≤, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫
  if (alerts.length === 0) {
    return null;
  }

  // –°–∞–º—ã–π –∫—Ä–∏—Ç–∏—á–Ω—ã–π –∞–ª–µ—Ä—Ç –¥–ª—è –ø—Ä–µ–≤—å—é
  const mainAlert = alerts[0];
  const criticalCount = alerts.filter(alert => alert.type === 'critical').length;
  const warningCount = alerts.filter(alert => alert.type === 'warning').length;

  return (
    <motion.div
      style={{
        background: "rgba(255, 255, 255, 0.9)",
        borderRadius: 16,
        padding: "10px",
        margin: "16px auto 0",
        maxWidth: 340,
        width: "100%",
        boxSizing: "border-box",
        backdropFilter: "blur(10px)",
        boxShadow: "0 4px 20px rgba(0,0,0,0.1)",
        cursor: "pointer"
      }}
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: 0.2 }}
      onClick={() => setIsExpanded(!isExpanded)}
      whileHover={{ scale: 1.02 }}
      whileTap={{ scale: 0.98 }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–µ–≤—å—é */}
      <div style={{
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between"
      }}>
        {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å —Å –∏–∫–æ–Ω–∫–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º */}
        <div style={{
          display: "flex",
          alignItems: "center",
          gap: 12,
          flex: 1
        }}>
          {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∫–æ–Ω–∫–∏ —Å —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º */}
          <motion.div
            style={{
              width: 48,
              height: 48,
              borderRadius: 12,
              background: `linear-gradient(135deg, ${theme.iconBgColor}, ${theme.bgColor})`,
              border: `1px solid ${theme.mainColor}30`,
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              flexShrink: 0,
              position: "relative",
              overflow: "hidden"
            }}
            whileHover={{ scale: 1.05 }}
            transition={{ duration: 0.2 }}
            animate={criticalCount > 0 ? {
              boxShadow: [
                "0 0 0 0 rgba(220, 38, 38, 0.4)",
                "0 0 0 8px rgba(220, 38, 38, 0)",
                "0 0 0 0 rgba(220, 38, 38, 0.4)"
              ]
            } : {}}
          >
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤ */}
            <motion.div 
              style={{
                position: "absolute",
                top: 0,
                left: 0,
                right: 0,
                height: 2,
                background: theme.mainColor,
                borderRadius: "12px 12px 0 0"
              }}
              animate={criticalCount > 0 ? {
                opacity: [1, 0.3, 1]
              } : {}}
              transition={criticalCount > 0 ? {
                duration: 1.5,
                repeat: Infinity
              } : {}}
            />
            
            {/* –ö—Ä—É–ø–Ω–∞—è –∏–∫–æ–Ω–∫–∞ */}
            <span style={{ 
              fontSize: 24,
              filter: "drop-shadow(0 1px 2px rgba(0,0,0,0.1))"
            }}>
              üö®
            </span>
          </motion.div>

          {/* –¢–µ–∫—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div style={{ flex: 1 }}>
            <div style={{
              fontSize: 16,
              fontWeight: 600,
              color: "#374151",
              fontFamily: "Montserrat, Arial, sans-serif",
              marginBottom: 2
            }}>
              –ü–æ–≥–æ–¥–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã
            </div>
            {!isExpanded && (
              <div style={{
                display: "flex",
                alignItems: "center",
                gap: 6,
                marginTop: 2
              }}>
                <span style={{ 
                  fontSize: 16,
                  filter: "drop-shadow(0 1px 1px rgba(0,0,0,0.1))"
                }}>
                  {mainAlert.icon}
                </span>
                <span style={{ 
                  fontSize: 12, 
                  fontWeight: 600,
                  color: mainAlert.color,
                  fontFamily: "Montserrat, Arial, sans-serif"
                }}>
                  {mainAlert.title}
                </span>
                {alerts.length > 1 && (
                  <span style={{
                    fontSize: 12,
                    color: "#6b7280",
                    fontFamily: "Montserrat, Arial, sans-serif",
                    marginLeft: 2
                  }}>
                    +{alerts.length - 1}
                  </span>
                )}
              </div>
            )}
          </div>
        </div>
        
        <ChevronIcon isOpen={isExpanded} />
      </div>

      {/* –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <AnimatePresence>
        {isExpanded && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: "auto" }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
            style={{ overflow: "hidden" }}
          >
            <div style={{ marginTop: 16 }}>
              
              {/* –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤ */}
              <div style={{
                display: "grid",
                gridTemplateColumns: "1fr",
                gap: 12
              }}>
                {alerts.map((alert, index) => (
                  <motion.div
                    key={alert.id}
                    style={{
                      background: `linear-gradient(135deg, ${alert.iconBgColor}, ${alert.bgColor})`,
                      borderRadius: 12,
                      padding: "12px",
                      border: `2px solid ${alert.color}30`,
                      position: "relative",
                      overflow: "hidden"
                    }}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.4, delay: index * 0.1 }}
                    whileHover={{ scale: 1.02 }}
                  >
                    {/* –¶–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ —Å–ª–µ–≤–∞ */}
                    <div style={{
                      position: "absolute",
                      left: 0,
                      top: 0,
                      bottom: 0,
                      width: 4,
                      background: alert.color,
                      borderRadius: "12px 0 0 12px"
                    }} />

                    <div style={{
                      display: "flex",
                      alignItems: "flex-start",
                      gap: 10
                    }}>
                      <span style={{ 
                        fontSize: 24,
                        filter: "drop-shadow(0 1px 2px rgba(0,0,0,0.1))",
                        flexShrink: 0,
                        marginTop: 2
                      }}>
                        {alert.icon}
                      </span>
                      <div style={{ flex: 1 }}>
                        <div style={{
                          fontSize: 14,
                          fontWeight: 700,
                          color: alert.color,
                          fontFamily: "Montserrat, Arial, sans-serif",
                          marginBottom: 4
                        }}>
                          {alert.title}
                        </div>
                        <div style={{
                          fontSize: 14,
                          color: "#374151",
                          fontFamily: "Montserrat, Arial, sans-serif",
                          lineHeight: 1.4,
                          marginBottom: 8
                        }}>
                          {alert.message}
                        </div>
                        
                        {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                        <div style={{
                          display: "flex",
                          flexDirection: "column",
                          gap: 4
                        }}>
                          {alert.actions.map((action, actionIndex) => (
                            <div
                              key={actionIndex}
                              style={{
                                fontSize: 14,
                                color: "#6b7280",
                                fontFamily: "Montserrat, Arial, sans-serif",
                                display: "flex",
                                alignItems: "center",
                                gap: 4
                              }}
                            >
                              <span style={{ 
                                width: 4, 
                                height: 4, 
                                borderRadius: "50%", 
                                background: alert.color,
                                flexShrink: 0
                              }} />
                              {action}
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </div>

              {/* –û–±—â–∞—è —Å–≤–æ–¥–∫–∞ */}
              <motion.div
                style={{
                  background: `linear-gradient(135deg, ${theme.iconBgColor}, ${theme.bgColor})`,
                  borderRadius: 8,
                  padding: "10px 12px",
                  marginTop: 12,
                  border: `1px solid ${theme.mainColor}20`,
                  position: "relative",
                  overflow: "hidden"
                }}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
              >
                {/* –¢–æ–Ω–∫–∞—è —Ü–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ —Å–Ω–∏–∑—É */}
                <div style={{
                  position: "absolute",
                  bottom: 0,
                  left: 0,
                  right: 0,
                  height: 2,
                  background: theme.mainColor,
                  borderRadius: "0 0 8px 8px"
                }} />
                
                <div style={{
                  fontSize: 16,
                  color: "#374151",
                  fontFamily: "Montserrat, Arial, sans-serif",
                  fontWeight: 500,
                  textAlign: "center"
                }}>
                  {criticalCount > 0 
                    ? `üö® ${criticalCount} –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è` 
                    : warningCount > 0 
                    ? `‚ö†Ô∏è ${warningCount} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π`
                    : `‚ÑπÔ∏è ${alerts.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ–≥–æ–¥–µ`
                  }
                </div>
              </motion.div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
}