// HealthAlerts.js - –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Å —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

// –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø–æ—Ä–æ–≥–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
const HEALTH_THRESHOLDS = {
  pressure: {
    very_low: 735,
    low: 745,
    normal_low: 750,
    normal_high: 760,  // ‚úÖ –ü–æ–Ω–∏–∂–∞–µ–º –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É –Ω–æ—Ä–º—ã
    high: 765,         // ‚úÖ –¢–µ–ø–µ—Ä—å 764 –ø–æ–ø–∞–¥–µ—Ç –≤ "–≤—ã—Å–æ–∫–æ–µ"
    very_high: 775     // ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–µ
  },
  humidity: {
    low: 30,
    comfortable: 60,
    high: 75,
    very_high: 85
  },
  temperature: {
    very_cold: 0,
    cold: 10,
    cool: 18,
    warm: 25,
    hot: 30,
    very_hot: 35
  },
  wind: {
    calm: 3,
    light: 8,
    moderate: 15,
    strong: 25
  }
};

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∞–ø–ø–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–¥–æ—Ä–æ–≤—å—è
function mapHealthConditions(userProfile) {
  const conditions = [];
  
  // –ó–ê–©–ò–¢–ê –û–¢ UNDEFINED - –≥–ª–∞–≤–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!
  if (!userProfile) {
    console.log('‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
    return conditions;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  let healthArray = [];
  if (userProfile.health && Array.isArray(userProfile.health)) {
    healthArray = userProfile.health;
  } else if (userProfile.medicalConditions && Array.isArray(userProfile.medicalConditions)) {
    healthArray = userProfile.medicalConditions;
  } else {
    console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ:', userProfile);
    return conditions;
  }

  healthArray.forEach(condition => {
    switch (condition) {
      case 'meteosensitive':
      case 'meteoropathy':
        conditions.push('meteoropathy', 'migraine');
        break;
      case 'pressure':
      case 'hypertension':
      case 'cardiovascular':
        const bpType = userProfile.bloodPressure?.type;
        if (bpType === 'high') conditions.push('hypertension');
        if (bpType === 'low') conditions.push('hypotension');
        if (bpType === 'variable') conditions.push('hypertension', 'hypotension');
        conditions.push('heart_disease');
        break;
      case 'asthma':
        conditions.push('asthma', 'respiratory');
        break;
      case 'allergies':
        conditions.push('allergies', 'respiratory');
        break;
      case 'arthritis':
        conditions.push('arthritis', 'joints');
        break;
    }
  });
  
  return [...new Set(conditions)]; // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
}

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è
async function analyzeHealthRisks(weather, userProfile, spaceWeatherData) {
  console.log('üè• –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è...');
  
  if (!weather || !userProfile) {
    console.log('‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
    return [];
  }
  
  const alerts = [];
  const conditions = mapHealthConditions(userProfile);
  
  if (conditions.length === 0) {
    console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–¥–æ—Ä–æ–≤ –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–ª –ø—Ä–æ–±–ª–µ–º —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º');
    return [];
  }
  
  console.log('üìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', conditions);
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç undefined
  const temp = weather.temp || weather.temperature || 20;
  const pressure = weather.pressure || weather.details?.pressure || 760;
  const humidity = weather.humidity || weather.details?.humidity || 50;
  const windSpeed = weather.wind_speed || 
                   (weather.details?.wind ? parseFloat(weather.details.wind.replace(' –º/—Å', '')) : 0) || 0;
  const weatherDesc = weather.weather || weather.description || [];

  // –ê–Ω–∞–ª–∏–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è
  if (pressure && (conditions.includes('hypertension') || conditions.includes('hypotension') || conditions.includes('meteoropathy'))) {
    if (pressure <= HEALTH_THRESHOLDS.pressure.very_low) {
      alerts.push({
        id: 'pressure_very_low',
        type: 'critical',
        icon: 'üìâ',
        title: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        description: `${Math.round(pressure)} –º–º —Ä—Ç.—Å—Ç. - –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è`,
        details: '–ú–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏, —Å–ª–∞–±–æ—Å—Ç—å –∏ —É—Ö—É–¥—à–µ–Ω–∏–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è —É –ª—é–¥–µ–π —Å –≥–∏–ø–æ—Ç–æ–Ω–∏–µ–π',
        recommendation: '–í—ã–ø–µ–π—Ç–µ –∫—Ä–µ–ø–∫–∏–π –∫–æ—Ñ–µ –∏–ª–∏ —á–∞–π, –∏–∑–±–µ–≥–∞–π—Ç–µ —Ä–µ–∑–∫–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π',
        color: '#dc2626',
        bgColor: 'rgba(220, 38, 38, 0.1)'
      });
    } else if (pressure <= HEALTH_THRESHOLDS.pressure.low) {
      alerts.push({
        id: 'pressure_low',
        type: 'warning',
        icon: 'üìâ',
        title: '–ù–∏–∑–∫–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        description: `${Math.round(pressure)} –º–º —Ä—Ç.—Å—Ç. - –≤–æ–∑–º–æ–∂–Ω–∞ —Å–ª–∞–±–æ—Å—Ç—å`,
        details: '–ü–æ–Ω–∏–∂–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ',
        recommendation: '–£—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—Ñ–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –ø–µ–π—Ç–µ –±–æ–ª—å—à–µ –∂–∏–¥–∫–æ—Å—Ç–∏',
        color: '#f59e0b',
        bgColor: 'rgba(245, 158, 11, 0.1)'
      });
    } else if (pressure >= HEALTH_THRESHOLDS.pressure.very_high) {
      alerts.push({
        id: 'pressure_very_high',
        type: 'critical',
        icon: 'üìà',
        title: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        description: `${Math.round(pressure)} –º–º —Ä—Ç.—Å—Ç. - –æ–ø–∞—Å–Ω–æ –¥–ª—è –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∫–æ–≤`,
        details: '–í—ã—Å–æ–∫–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏—é –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è',
        recommendation: '–ü—Ä–∏–º–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã, –æ–≥—Ä–∞–Ω–∏—á—å—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏',
        color: '#dc2626',
        bgColor: 'rgba(220, 38, 38, 0.1)'
      });
    } else if (pressure > HEALTH_THRESHOLDS.pressure.normal_high) {
      alerts.push({
        id: 'pressure_high',
        type: 'warning',
        icon: 'üìà',
        title: '–í—ã—Å–æ–∫–æ–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        description: `${Math.round(pressure)} –º–º —Ä—Ç.—Å—Ç. - –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –ê–î`,
        details: '–ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è —É –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∫–æ–≤',
        recommendation: '–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –ø—Ä–∏–µ–º –ª–µ–∫–∞—Ä—Å—Ç–≤, –∏–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–æ–≤',
        color: '#f59e0b',
        bgColor: 'rgba(245, 158, 11, 0.1)'
      });
    }
  }

  // –ê–Ω–∞–ª–∏–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞
  if (temp !== undefined) {
    const age = userProfile.age || 30;
    if ((temp < -15 || temp > 30) && (age <= 5 || age >= 65)) {
      alerts.push({
        id: 'temperature_extreme',
        type: 'warning',
        icon: temp < -15 ? 'ü•∂' : 'ü•µ',
        title: temp < -15 ? '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π —Ö–æ–ª–æ–¥' : '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –∂–∞—Ä–∞',
        description: `–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${Math.round(temp)}¬∞C –æ–ø–∞—Å–Ω–∞ –¥–ª—è –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã`,
        details: temp < -15 
          ? '–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –∏ –æ–±–º–æ—Ä–æ–∂–µ–Ω–∏—è' 
          : '–†–∏—Å–∫ —Ç–µ–ø–ª–æ–≤–æ–≥–æ —É–¥–∞—Ä–∞ –∏ –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏—è',
        recommendation: temp < -15
          ? '–°–æ–∫—Ä–∞—Ç–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ, —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'
          : '–ò–∑–±–µ–≥–∞–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–æ–ª–Ω—Ü–µ, –ø–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã',
        color: '#f59e0b',
        bgColor: 'rgba(245, 158, 11, 0.1)'
      });
    }
  }

  // –ê–Ω–∞–ª–∏–∑ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∞—Å—Ç–º–µ
  if (humidity !== undefined && conditions.includes('asthma')) {
    if (humidity > 80) {
      alerts.push({
        id: 'humidity_asthma',
        type: 'warning',
        icon: 'üí®',
        title: '–í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å',
        description: `–í–ª–∞–∂–Ω–æ—Å—Ç—å ${humidity}% –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å –¥—ã—Ö–∞–Ω–∏–µ`,
        details: '–í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—é –ø–ª–µ—Å–µ–Ω–∏ –∏ –ø—ã–ª–µ–≤—ã—Ö –∫–ª–µ—â–µ–π',
        recommendation: '–ò–º–µ–π—Ç–µ –ø—Ä–∏ —Å–µ–±–µ –∏–Ω–≥–∞–ª—è—Ç–æ—Ä, –∏–∑–±–µ–≥–∞–π—Ç–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫',
        color: '#3b82f6',
        bgColor: 'rgba(59, 130, 246, 0.1)'
      });
    }
  }

  // –ê–Ω–∞–ª–∏–∑ –≤–µ—Ç—Ä–∞ –ø—Ä–∏ –º–∏–≥—Ä–µ–Ω—è—Ö
  if (windSpeed > 7 && conditions.includes('migraine')) {
    alerts.push({
      id: 'wind_migraine',
      type: 'warning',
      icon: 'üå™Ô∏è',
      title: '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',
      description: `–í–µ—Ç–µ—Ä ${Math.round(windSpeed)} –º/—Å –º–æ–∂–µ—Ç —Å–ø—Ä–æ–≤–æ—Ü–∏—Ä–æ–≤–∞—Ç—å –º–∏–≥—Ä–µ–Ω—å`,
      details: '–†–µ–∑–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –≤–µ—Ç—Ä–µ —á–∞—Å—Ç–æ –≤—ã–∑—ã–≤–∞—é—Ç –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏',
      recommendation: '–ü—Ä–∏–º–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã, –∏–∑–±–µ–≥–∞–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤',
      color: '#8b5cf6',
      bgColor: 'rgba(139, 92, 246, 0.1)'
    });
  }

  // –ê–Ω–∞–ª–∏–∑ –¥–ª—è –º–µ—Ç–µ–æ–∑–∞–≤–∏—Å–∏–º—ã—Ö - –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
  if (conditions.includes('meteoropathy') || conditions.includes('migraine')) {
    const triggers = [];
    
    if (humidity >= HEALTH_THRESHOLDS.humidity.very_high) {
      triggers.push('–≤—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å');
    }
    
    if (windSpeed >= HEALTH_THRESHOLDS.wind.strong) {
      triggers.push('—Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä');
    }
    
    if (temp >= HEALTH_THRESHOLDS.temperature.very_hot) {
      triggers.push('—Å–∏–ª—å–Ω–∞—è –∂–∞—Ä–∞');
    }
    
    if (Array.isArray(weatherDesc) && weatherDesc.length > 0 && 
        weatherDesc.some(desc => desc.main && desc.main.includes('Rain'))) {
      triggers.push('–¥–æ–∂–¥—å');
    }
    
    if (triggers.length >= 2) {
      alerts.push({
        id: 'meteoropathy_high_risk',
        type: 'warning',
        icon: 'ü§ï',
        title: '–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ –¥–ª—è –º–µ—Ç–µ–æ–∑–∞–≤–∏—Å–∏–º—ã—Ö',
        description: `–ù–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤: ${triggers.join(', ')}`,
        details: '–ö–æ–º–±–∏–Ω–∞—Ü–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Ö—É–¥—à–∏—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ',
        recommendation: '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –∑–∞—Ä–∞–Ω–µ–µ, –∏–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π',
        color: '#8b5cf6',
        bgColor: 'rgba(139, 92, 246, 0.1)'
      });
    } else if (triggers.length === 1) {
      alerts.push({
        id: 'meteoropathy_moderate_risk',
        type: 'info',
        icon: 'üí°',
        title: '–í–æ–∑–º–æ–∂–µ–Ω –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç',
        description: `–í—ã—è–≤–ª–µ–Ω –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä: ${triggers[0]}`,
        details: '–û–¥–∏–Ω —Ñ–∞–∫—Ç–æ—Ä —Ä–∏—Å–∫–∞ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ª–µ–≥–∫–æ–µ –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏–µ',
        recommendation: '–ò–º–µ–π—Ç–µ –ø—Ä–∏ —Å–µ–±–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –ø–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã',
        color: '#6366f1',
        bgColor: 'rgba(99, 102, 241, 0.1)'
      });
    }
  }

  console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ ${alerts.length} —Ä–∏—Å–∫–æ–≤ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è`);
  
  // üåå –ê–ù–ê–õ–ò–ó –ú–ê–ì–ù–ò–¢–ù–´–• –ë–£–†–¨ (–¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ analyzeHealthRisks)
  if (conditions.includes('meteoropathy') || conditions.includes('migraine')) {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –±—É—Ä—è—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    try {
      console.log('üåå –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –±—É—Ä—è—Ö...');
      
      // –ü—Ä–æ—Å—Ç–æ–π fetch –∫ NOAA API
      const response = await fetch('https://services.swpc.noaa.gov/json/planetary_k_index_1m.json');
      if (response.ok) {
        const kpData = await response.json();
        const latest = kpData[kpData.length - 1];
        const currentKp = parseFloat(latest.kp_index) || 2;
        
        console.log(`üåå Kp-–∏–Ω–¥–µ–∫—Å: ${currentKp}`);
        
        if (currentKp >= 5) {
          // –ú–∞–≥–Ω–∏—Ç–Ω–∞—è –±—É—Ä—è
          alerts.push({
            id: 'magnetic_storm',
            type: 'warning',
            icon: 'üåå',
            title: '–ú–∞–≥–Ω–∏—Ç–Ω–∞—è –±—É—Ä—è',
            description: `–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (Kp=${currentKp.toFixed(1)})`,
            details: '–ú–∞–≥–Ω–∏—Ç–Ω—ã–µ –±—É—Ä–∏ –º–æ–≥—É—Ç —É—Ö—É–¥—à–∞—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –º–µ—Ç–µ–æ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ª—é–¥–µ–π',
            recommendation: '–ë–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞–π—Ç–µ, –ø–µ–π—Ç–µ –≤–æ–¥—É, –∏–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–æ–≤',
            color: '#8b5cf6',
            bgColor: 'rgba(139, 92, 246, 0.1)'
          });
        } else if (currentKp >= 3) {
          // –£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          alerts.push({
            id: 'magnetic_moderate',
            type: 'info',
            icon: 'üåå',
            title: '–£–º–µ—Ä–µ–Ω–Ω–∞—è –º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
            description: `–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (Kp=${currentKp.toFixed(1)})`,
            details: '–í–æ–∑–º–æ–∂–Ω–æ –ª–µ–≥–∫–æ–µ –Ω–µ–¥–æ–º–æ–≥–∞–Ω–∏–µ —É –æ—Å–æ–±–æ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ª—é–¥–µ–π',
            recommendation: '–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ, –ø–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã',
            color: '#6366f1',
            bgColor: 'rgba(99, 102, 241, 0.1)'
          });
        } else {
          // –°–ø–æ–∫–æ–π–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞
          alerts.push({
            id: 'magnetic_calm',
            type: 'info',
            icon: 'üåå',
            title: '–°–ø–æ–∫–æ–π–Ω–∞—è –º–∞–≥–Ω–∏—Ç–Ω–∞—è –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞',
            description: `–ù–∏–∑–∫–∞—è –≥–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (Kp=${currentKp.toFixed(1)})`,
            details: '–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –º–µ—Ç–µ–æ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ª—é–¥–µ–π',
            recommendation: '–û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ–≥—É–ª–æ–∫',
            color: '#10b981',
            bgColor: 'rgba(16, 185, 129, 0.1)'
          });
        }
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –±—É—Ä—è—Ö:', error);
      // –î–æ–±–∞–≤–ª—è–µ–º fallback –∞–ª–µ—Ä—Ç
      alerts.push({
        id: 'magnetic_unknown',
        type: 'info',
        icon: 'üåå',
        title: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π –ø–æ–≥–æ–¥—ã',
        description: '–î–∞–Ω–Ω—ã–µ –æ –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        details: '–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º –∏ –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –æ–±—ã—á–Ω—ã–µ –º–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏',
        recommendation: '–ü—Ä–∏ —É—Ö—É–¥—à–µ–Ω–∏–∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É',
        color: '#6b7280',
        bgColor: 'rgba(107, 114, 128, 0.1)'
      });
    }
  }

  return alerts;
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏
const ChevronIcon = ({ isOpen }) => (
  <motion.svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    animate={{ rotate: isOpen ? 180 : 0 }}
    transition={{ duration: 0.3 }}
    style={{ color: "#6b7280" }}
  >
    <path
      d="M6 9L12 15L18 9"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </motion.svg>
);

export default function HealthAlerts({ weather, userProfile, spaceWeatherData }) {
  const [healthAlerts, setHealthAlerts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showDetails, setShowDetails] = useState({});
  const [lastUpdate, setLastUpdate] = useState(null);

  useEffect(() => {
    if (!weather || !userProfile) {
      setHealthAlerts([]);
      return;
    }

    setLoading(true);
    setError(null);

    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –±—É—Ä—è—Ö
    // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞
    const analyzeWithSpaceWeather = async () => {
      try {
        console.log('üè• HealthAlerts: –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –∑–¥–æ—Ä–æ–≤—å—è');
        console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã:', weather);
        console.log('üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userProfile);
  
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é analyzeHealthRisks (–∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –µ—Å—Ç—å –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ)
        const alerts = await analyzeHealthRisks(weather, userProfile, spaceWeatherData);
        setHealthAlerts(alerts);
        setLastUpdate(new Date());
  
        console.log('‚úÖ HealthAlerts: –ü–æ–ª—É—á–µ–Ω–æ –∞–ª–µ—Ä—Ç–æ–≤:', alerts.length);
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–¥–æ—Ä–æ–≤—å—è:', err);
        setError('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ');
        setHealthAlerts([]);
      } finally {
        setLoading(false);
      }
    };

    analyzeWithSpaceWeather();
  }, [weather, userProfile]);

  // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (!userProfile) {
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ –≤ –ª—é–±–æ–º –∏–∑ –ø–æ–ª–µ–π
  const hasHealthData = (userProfile.health && Array.isArray(userProfile.health) && userProfile.health.length > 0) ||
                       (userProfile.medicalConditions && Array.isArray(userProfile.medicalConditions) && userProfile.medicalConditions.length > 0);

  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ
  if (!hasHealthData) {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        style={{
          background: 'rgba(255, 255, 255, 0.9)',
          borderRadius: 16,
          padding: 10,
          margin: "16px auto 0",
          maxWidth: 340,
          width: "100%",
          boxSizing: "border-box",
          backdropFilter: 'blur(10px)',
          boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
          textAlign: 'center'
        }}
      >
        <div style={{
          fontSize: 16,
          color: '#10b981',
          fontFamily: 'Montserrat, Arial, sans-serif',
          marginBottom: 4
        }}>
          ‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ!
        </div>
        <div style={{
          fontSize: 12,
          color: '#64748b',
          fontFamily: 'Montserrat, Arial, sans-serif'
        }}>
          –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–≥–æ–¥–æ–π –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        </div>
      </motion.div>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –∞–ª–µ—Ä—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω
  if (healthAlerts.length === 0 && !loading) {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        style={{
          background: 'rgba(255, 255, 255, 0.95)',
          backdropFilter: 'blur(20px)',
          borderRadius: 16,
          padding: 12,
          margin: "16px auto 0",
          maxWidth: 340,
          width: "100%",
          boxSizing: "border-box",
          boxShadow: '0 8px 32px rgba(0,0,0,0.1)',
          border: '1px solid rgba(255,255,255,0.3)',
          textAlign: 'center'
        }}
      >
        <div style={{
          fontSize: 16,
          color: '#10b981',
          fontFamily: 'Montserrat, Arial, sans-serif',
          marginBottom: 4
        }}>
          ‚úÖ –ü–æ–≥–æ–¥–∞ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è
        </div>
        <div style={{
          fontSize: 14,
          color: '#64748b',
          fontFamily: 'Montserrat, Arial, sans-serif'
        }}>
          –ú–µ—Ç–µ–æ—É—Å–ª–æ–≤–∏—è –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Ä–∏—Å–∫–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        </div>
        {error && (
          <div style={{
            fontSize: 12,
            color: '#f59e0b',
            marginTop: 8,
            fontFamily: 'Montserrat, Arial, sans-serif'
          }}>
            ‚ö†Ô∏è {error}
          </div>
        )}
      </motion.div>
    );
  }

  const toggleDetails = (alertId) => {
    setShowDetails(prev => ({
      ...prev,
      [alertId]: !prev[alertId]
    }));
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      style={{ 
        margin: "16px auto 0",
        maxWidth: 340,
        width: "100%",
        boxSizing: "border-box"
      }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
      <div style={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'space-between',
        marginBottom: 12,
        paddingLeft: 4
      }}>
        <div style={{ display: 'flex', alignItems: 'center' }}>
          <span style={{ fontSize: 20, marginRight: 8 }}>üè•</span>
          <h3 style={{
            margin: 0,
            fontSize: 20,
            fontWeight: 600,
            color: '#1e293b',
            fontFamily: 'Montserrat, Arial, sans-serif'
          }}>
            –ó–¥–æ—Ä–æ–≤—å–µ –∏ –º–µ—Ç–µ–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
          </h3>
          {loading && (
            <div style={{
              marginLeft: 8,
              width: 16,
              height: 16,
              border: '2px solid #e2e8f0',
              borderTop: '2px solid #3b82f6',
              borderRadius: '50%',
              animation: 'spin 1s linear infinite'
            }} />
          )}
        </div>
        
        {/* –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
        {lastUpdate && (
          <div style={{
            fontSize: 16,
            color: '#94a3b8',
            fontFamily: 'Montserrat, Arial, sans-serif'
          }}>
            üïê {lastUpdate.toLocaleTimeString('ru-RU', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })}
          </div>
        )}
      </div>

      {/* –û—à–∏–±–∫–∞ API */}
      {error && (
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          style={{
            background: 'rgba(251, 191, 36, 0.1)',
            border: '1px solid rgba(251, 191, 36, 0.3)',
            borderRadius: 12,
            padding: 12,
            marginBottom: 12
          }}
        >
          <div style={{
            fontSize: 14,
            color: '#f59e0b',
            fontFamily: 'Montserrat, Arial, sans-serif',
            textAlign: 'center'
          }}>
            ‚ö†Ô∏è {error}
          </div>
        </motion.div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –∞–ª–µ—Ä—Ç–æ–≤ */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr',
        gap: 12
      }}>
        <AnimatePresence>
          {healthAlerts.map((alert, index) => (
            <motion.div
              key={alert.id}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 20 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
              style={{
                background: `linear-gradient(135deg, ${alert.bgColor}, rgba(255,255,255,0.9))`,
                borderRadius: 16,
                padding: 12,
                border: `2px solid ${alert.color}30`,
                position: 'relative',
                overflow: 'hidden',
                cursor: 'pointer'
              }}
              whileHover={{ scale: 1.02 }}
              onClick={() => toggleDetails(alert.id)}
            >
              {/* –¶–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ */}
              <div style={{
                position: 'absolute',
                left: 0,
                top: 0,
                bottom: 0,
                width: 4,
                background: alert.color,
                borderRadius: '16px 0 0 16px'
              }} />

              {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div style={{
                display: 'flex',
                alignItems: 'flex-start',
                gap: 4,
                marginLeft: 8
              }}>
                {/* –ò–∫–æ–Ω–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
                <motion.span 
                  style={{ 
                    fontSize: 24,
                    display: 'block',
                    lineHeight: 1
                  }}
                  animate={{ 
                    scale: alert.type === 'critical' ? [1, 1.1, 1] : 1,
                    rotate: alert.type === 'warning' ? [0, 2, -2, 0] : 0
                  }}
                  transition={{
                    duration: alert.type === 'critical' ? 1 : 2,
                    repeat: alert.type === 'critical' ? Infinity : 0,
                    ease: "easeInOut"
                  }}
                >
                  {alert.icon}
                </motion.span>

                {/* –¢–µ–∫—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div style={{ flex: 1 }}>
                  <div style={{
                    fontSize: 16,
                    fontWeight: 600,
                    color: '#1e293b',
                    marginBottom: 2,
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    {alert.title}
                  </div>
                  
                  <div style={{
                    fontSize: 15,
                    color: '#64748b',
                    marginBottom: 8,
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    {alert.description}
                  </div>

                  {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∞—è—Å—è) */}
                  <AnimatePresence>
                    {showDetails[alert.id] && (
                      <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: 'auto' }}
                        exit={{ opacity: 0, height: 0 }}
                        transition={{ duration: 0.3 }}
                        style={{
                          borderTop: '1px solid rgba(107, 114, 128, 0.2)',
                          paddingTop: 8,
                          marginTop: 8
                        }}
                      >
                        <div style={{
                          fontSize: 14,
                          color: '#4b5563',
                          marginBottom: 6,
                          fontFamily: 'Montserrat, Arial, sans-serif'
                        }}>
                          {alert.details}
                        </div>
                        
                        <div style={{
                          fontSize: 14,
                          fontWeight: 600,
                          color: alert.color,
                          fontFamily: 'Montserrat, Arial, sans-serif'
                        }}>
                          üí° {alert.recommendation}
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                </div>

                {/* –°—Ç—Ä–µ–ª–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è */}
                <ChevronIcon isOpen={showDetails[alert.id]} />
              </div>
            </motion.div>
          ))}
        </AnimatePresence>
      </div>
    </motion.div>
  );
}