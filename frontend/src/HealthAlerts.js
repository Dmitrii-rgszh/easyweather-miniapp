// HealthAlerts.js —Å —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω–æ–π –±–ª–æ–∫–æ–≤

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∑–¥–æ—Ä–æ–≤—å—è 
function analyzeHealthRisks(weather, userProfile, spaceWeatherData) {
  const alerts = [];
  
  if (!weather || !userProfile) return alerts;
  
  const { temp, pressure, humidity, wind_speed: windSpeed, weather: weatherDesc } = weather;
  const conditions = userProfile.medicalConditions || [];
  const age = userProfile.age;
  
  // –ê–Ω–∞–ª–∏–∑ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è
  if (pressure && (pressure < 1000 || pressure > 1025)) {
    if (conditions.includes('hypertension') || conditions.includes('cardiovascular') || age >= 60) {
      alerts.push({
        id: 'pressure',
        type: pressure < 1000 ? 'critical' : 'warning',
        icon: pressure < 1000 ? 'üìâ' : 'üìà',
        title: pressure < 1000 ? '–ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ' : '–í—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        description: `–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ ${Math.round(pressure)} –º–º —Ä—Ç.—Å—Ç.`,
        details: pressure < 1000 
          ? '–ú–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏, —Å–ª–∞–±–æ—Å—Ç—å –∏ —É—Ö—É–¥—à–µ–Ω–∏–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è —É –ª—é–¥–µ–π —Å –≥–∏–ø–æ—Ç–æ–Ω–∏–µ–π'
          : '–ú–æ–∂–µ—Ç —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏—é –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è —É –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∫–æ–≤',
        recommendation: pressure < 1000
          ? '–ë–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞–π—Ç–µ, –ø–µ–π—Ç–µ –≤–æ–¥—É, –∏–∑–±–µ–≥–∞–π—Ç–µ —Ä–µ–∑–∫–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π'
          : '–û–≥—Ä–∞–Ω–∏—á—å—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        color: pressure < 1000 ? '#ef4444' : '#f59e0b',
        bgColor: pressure < 1000 ? 'rgba(239, 68, 68, 0.1)' : 'rgba(245, 158, 11, 0.1)'
      });
    }
  }

  // –ê–Ω–∞–ª–∏–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞
  if (temp !== undefined) {
    if ((temp < -15 || temp > 30) && (age <= 5 || age >= 65)) {
      alerts.push({
        id: 'temperature',
        type: 'warning',
        icon: temp < -15 ? 'ü•∂' : 'ü•µ',
        title: temp < -15 ? '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π —Ö–æ–ª–æ–¥' : '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –∂–∞—Ä–∞',
        description: `–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${Math.round(temp)}¬∞C –æ–ø–∞—Å–Ω–∞ –¥–ª—è –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã`,
        details: temp < -15 
          ? '–ü–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è –∏ –æ–±–º–æ—Ä–æ–∂–µ–Ω–∏—è' 
          : '–†–∏—Å–∫ —Ç–µ–ø–ª–æ–≤–æ–≥–æ —É–¥–∞—Ä–∞ –∏ –æ–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏—è',
        recommendation: temp < -15
          ? '–°–æ–∫—Ä–∞—Ç–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ, —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'
          : '–ò–∑–±–µ–≥–∞–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–æ–ª–Ω—Ü–µ, –ø–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã',
        color: '#f59e0b',
        bgColor: 'rgba(245, 158, 11, 0.1)'
      });
    }
  }

  // –ê–Ω–∞–ª–∏–∑ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∞—Å—Ç–º–µ
  if (humidity !== undefined && conditions.includes('asthma')) {
    if (humidity > 80) {
      alerts.push({
        id: 'humidity',
        type: 'warning',
        icon: 'üí®',
        title: '–í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å',
        description: `–í–ª–∞–∂–Ω–æ—Å—Ç—å ${humidity}% –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å –¥—ã—Ö–∞–Ω–∏–µ`,
        details: '–í—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —Ä–∞–∑–º–Ω–æ–∂–µ–Ω–∏—é –ø–ª–µ—Å–µ–Ω–∏ –∏ –ø—ã–ª–µ–≤—ã—Ö –∫–ª–µ—â–µ–π',
        recommendation: '–ò–º–µ–π—Ç–µ –ø—Ä–∏ —Å–µ–±–µ –∏–Ω–≥–∞–ª—è—Ç–æ—Ä, –∏–∑–±–µ–≥–∞–π—Ç–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫',
        color: '#3b82f6',
        bgColor: 'rgba(59, 130, 246, 0.1)'
      });
    }
  }

  // –ê–Ω–∞–ª–∏–∑ –≤–µ—Ç—Ä–∞ –ø—Ä–∏ –º–∏–≥—Ä–µ–Ω—è—Ö
  if (windSpeed > 7 && conditions.includes('migraine')) {
    alerts.push({
      id: 'wind',
      type: 'warning',
      icon: 'üå™Ô∏è',
      title: '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä',
      description: `–í–µ—Ç–µ—Ä ${Math.round(windSpeed)} –º/—Å –º–æ–∂–µ—Ç —Å–ø—Ä–æ–≤–æ—Ü–∏—Ä–æ–≤–∞—Ç—å –º–∏–≥—Ä–µ–Ω—å`,
      details: '–†–µ–∑–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –≤–µ—Ç—Ä–µ —á–∞—Å—Ç–æ –≤—ã–∑—ã–≤–∞—é—Ç –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏',
      recommendation: '–ü—Ä–∏–º–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã, –∏–∑–±–µ–≥–∞–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤',
      color: '#8b5cf6',
      bgColor: 'rgba(139, 92, 246, 0.1)'
    });
  }

  // –ê–Ω–∞–ª–∏–∑ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –±—É—Ä—å
  if (spaceWeatherData && spaceWeatherData.length > 0) {
    const currentStorm = spaceWeatherData.find(item => {
      const stormDate = new Date(item.message_issue_time);
      const today = new Date();
      return stormDate.toDateString() === today.toDateString();
    });

    if (currentStorm && (conditions.includes('cardiovascular') || conditions.includes('hypertension'))) {
      alerts.push({
        id: 'magnetic',
        type: 'warning',
        icon: 'üåå',
        title: '–ú–∞–≥–Ω–∏—Ç–Ω–∞—è –±—É—Ä—è',
        description: '–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–≤—ã—à–µ–Ω–∞',
        details: '–ú–∞–≥–Ω–∏—Ç–Ω—ã–µ –±—É—Ä–∏ –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç—É—é —Å–∏—Å—Ç–µ–º—É –∏ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ',
        recommendation: '–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ, –∏–∑–±–µ–≥–∞–π—Ç–µ —Å—Ç—Ä–µ—Å—Å–æ–≤, –±–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞–π—Ç–µ',
        color: '#ec4899',
        bgColor: 'rgba(236, 72, 153, 0.1)'
      });
    }
  }

  return alerts;
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏
const ChevronIcon = ({ isOpen }) => (
  <motion.svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    animate={{ rotate: isOpen ? 180 : 0 }}
    transition={{ duration: 0.3 }}
    style={{ color: "#6b7280" }}
  >
    <path
      d="M6 9L12 15L18 9"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </motion.svg>
);

export default function HealthAlerts({ weather, userProfile, spaceWeatherData }) {
  const [healthAlerts, setHealthAlerts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showDetails, setShowDetails] = useState({});
  const [lastUpdate, setLastUpdate] = useState(null);

  useEffect(() => {
    if (!weather || !userProfile) return;

    setLoading(true);
    setError(null);

    try {
      const alerts = analyzeHealthRisks(weather, userProfile, spaceWeatherData);
      setHealthAlerts(alerts);
      setLastUpdate(new Date());
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–¥–æ—Ä–æ–≤—å—è:', err);
      setError('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∑–¥–æ—Ä–æ–≤—å–µ');
    } finally {
      setLoading(false);
    }
  }, [weather, userProfile, spaceWeatherData]);

  // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (!userProfile) {
    return null;
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ –ø—Ä–æ—Ñ–∏–ª–µ
  if (!userProfile.medicalConditions || userProfile.medicalConditions.length === 0) {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        style={{
          background: 'rgba(255, 255, 255, 0.9)',
          borderRadius: 16,
          padding: 16,
          margin: "16px auto 0", // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: —Ç–µ–ø–µ—Ä—å –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤
          maxWidth: 340, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–ª–∏ –∫–∞–≤—ã—á–∫–∏
          width: "100%",
          boxSizing: "border-box", // ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
          backdropFilter: 'blur(10px)',
          boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
          textAlign: 'center'
        }}
      >
        <div style={{
          fontSize: 16,
          color: '#10b981',
          fontFamily: 'Montserrat, Arial, sans-serif',
          marginBottom: 4
        }}>
          ‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ!
        </div>
        <div style={{
          fontSize: 12,
          color: '#64748b',
          fontFamily: 'Montserrat, Arial, sans-serif'
        }}>
          –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–≥–æ–¥–æ–π –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        </div>
      </motion.div>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –∞–ª–µ—Ä—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω
  if (healthAlerts.length === 0 && !loading) {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        style={{
          background: 'rgba(255, 255, 255, 0.95)',
          backdropFilter: 'blur(20px)',
          borderRadius: 16,
          padding: 16,
          margin: "16px auto 0", // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: —Ç–µ–ø–µ—Ä—å –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤
          maxWidth: 340, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–ª–∏ –∫–∞–≤—ã—á–∫–∏
          width: "100%",
          boxSizing: "border-box", // ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
          boxShadow: '0 8px 32px rgba(0,0,0,0.1)',
          border: '1px solid rgba(255,255,255,0.3)',
          textAlign: 'center'
        }}
      >
        <div style={{
          fontSize: 16,
          color: '#10b981',
          fontFamily: 'Montserrat, Arial, sans-serif',
          marginBottom: 4
        }}>
          ‚úÖ –ü–æ–≥–æ–¥–∞ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è
        </div>
        <div style={{
          fontSize: 12,
          color: '#64748b',
          fontFamily: 'Montserrat, Arial, sans-serif'
        }}>
          –ú–µ—Ç–µ–æ—É—Å–ª–æ–≤–∏—è –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Ä–∏—Å–∫–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        </div>
        {error && (
          <div style={{
            fontSize: 10,
            color: '#f59e0b',
            marginTop: 8,
            fontFamily: 'Montserrat, Arial, sans-serif'
          }}>
            ‚ö†Ô∏è {error}
          </div>
        )}
      </motion.div>
    );
  }

  const toggleDetails = (alertId) => {
    setShowDetails(prev => ({
      ...prev,
      [alertId]: !prev[alertId]
    }));
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      style={{ 
        margin: "16px auto 0", // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: —Ç–µ–ø–µ—Ä—å –∫–∞–∫ —É –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤
        maxWidth: 340, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–ª–∏ –∫–∞–≤—ã—á–∫–∏
        width: "100%",
        boxSizing: "border-box" // ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
      }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
      <div style={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'space-between',
        marginBottom: 12,
        paddingLeft: 4
      }}>
        <div style={{ display: 'flex', alignItems: 'center' }}>
          <span style={{ fontSize: 20, marginRight: 8 }}>üè•</span>
          <h3 style={{
            margin: 0,
            fontSize: 18,
            fontWeight: 600,
            color: '#1e293b',
            fontFamily: 'Montserrat, Arial, sans-serif'
          }}>
            –ó–¥–æ—Ä–æ–≤—å–µ –∏ –º–µ—Ç–µ–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
          </h3>
          {loading && (
            <div style={{
              marginLeft: 8,
              width: 16,
              height: 16,
              border: '2px solid #e2e8f0',
              borderTop: '2px solid #3b82f6',
              borderRadius: '50%',
              animation: 'spin 1s linear infinite'
            }} />
          )}
        </div>
        
        {/* –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
        {lastUpdate && (
          <div style={{
            fontSize: 10,
            color: '#94a3b8',
            fontFamily: 'Montserrat, Arial, sans-serif'
          }}>
            üïê {lastUpdate.toLocaleTimeString('ru-RU', { 
              hour: '2-digit', 
              minute: '2-digit' 
            })}
          </div>
        )}
      </div>

      {/* –û—à–∏–±–∫–∞ API */}
      {error && (
        <motion.div
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          style={{
            background: 'rgba(251, 191, 36, 0.1)',
            border: '1px solid rgba(251, 191, 36, 0.3)',
            borderRadius: 12,
            padding: 12,
            marginBottom: 12
          }}
        >
          <div style={{
            fontSize: 12,
            color: '#f59e0b',
            fontFamily: 'Montserrat, Arial, sans-serif',
            textAlign: 'center'
          }}>
            ‚ö†Ô∏è {error}
          </div>
        </motion.div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –∞–ª–µ—Ä—Ç–æ–≤ */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr',
        gap: 12
      }}>
        <AnimatePresence>
          {healthAlerts.map((alert, index) => (
            <motion.div
              key={alert.id}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 20 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
              style={{
                background: `linear-gradient(135deg, ${alert.bgColor}, rgba(255,255,255,0.9))`,
                borderRadius: 16,
                padding: 16,
                border: `2px solid ${alert.color}30`,
                position: 'relative',
                overflow: 'hidden',
                cursor: 'pointer'
              }}
              whileHover={{ scale: 1.02 }}
              onClick={() => toggleDetails(alert.id)}
            >
              {/* –¶–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ */}
              <div style={{
                position: 'absolute',
                left: 0,
                top: 0,
                bottom: 0,
                width: 4,
                background: alert.color,
                borderRadius: '16px 0 0 16px'
              }} />

              {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div style={{
                display: 'flex',
                alignItems: 'flex-start',
                gap: 12,
                marginLeft: 8
              }}>
                {/* –ò–∫–æ–Ω–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
                <motion.span 
                  style={{ 
                    fontSize: 24,
                    display: 'block',
                    lineHeight: 1
                  }}
                  animate={{ 
                    scale: alert.type === 'critical' ? [1, 1.1, 1] : 1,
                    rotate: alert.type === 'warning' ? [0, 2, -2, 0] : 0
                  }}
                  transition={{
                    duration: alert.type === 'critical' ? 1 : 2,
                    repeat: alert.type === 'critical' ? Infinity : 0,
                    ease: "easeInOut"
                  }}
                >
                  {alert.icon}
                </motion.span>

                {/* –¢–µ–∫—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div style={{ flex: 1 }}>
                  <div style={{
                    fontSize: 16,
                    fontWeight: 600,
                    color: '#1e293b',
                    marginBottom: 2,
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    {alert.title}
                  </div>
                  
                  <div style={{
                    fontSize: 13,
                    color: '#64748b',
                    marginBottom: 8,
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    {alert.description}
                  </div>

                  {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∞—è—Å—è) */}
                  <AnimatePresence>
                    {showDetails[alert.id] && (
                      <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: 'auto' }}
                        exit={{ opacity: 0, height: 0 }}
                        transition={{ duration: 0.3 }}
                        style={{
                          borderTop: '1px solid rgba(107, 114, 128, 0.2)',
                          paddingTop: 8,
                          marginTop: 8
                        }}
                      >
                        <div style={{
                          fontSize: 12,
                          color: '#4b5563',
                          marginBottom: 6,
                          fontFamily: 'Montserrat, Arial, sans-serif'
                        }}>
                          {alert.details}
                        </div>
                        
                        <div style={{
                          fontSize: 12,
                          fontWeight: 600,
                          color: alert.color,
                          fontFamily: 'Montserrat, Arial, sans-serif'
                        }}>
                          üí° {alert.recommendation}
                        </div>
                      </motion.div>
                    )}
                  </AnimatePresence>
                </div>

                {/* –°—Ç—Ä–µ–ª–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è */}
                <ChevronIcon isOpen={showDetails[alert.id]} />
              </div>
            </motion.div>
          ))}
        </AnimatePresence>
      </div>
    </motion.div>
  );
}