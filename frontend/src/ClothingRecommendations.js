// –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª frontend/src/ClothingRecommendations.js

import React from "react";
import { motion } from "framer-motion";

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ–¥–µ–∂–¥—ã
function getClothingRecommendations(temp, desc, humidity, windSpeed, isNight) {
  const recommendations = [];
  
  // –ë–∞–∑–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
  if (temp < -10) {
    recommendations.push({
      icon: "üß•",
      text: "–¢–µ–ø–ª–∞—è –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞",
      color: "#1e40af",
      priority: 1
    });
    recommendations.push({
      icon: "üß§",
      text: "–ü–µ—Ä—á–∞—Ç–∫–∏ –∏ —à–∞–ø–∫–∞",
      color: "#7c3aed",
      priority: 1
    });
    recommendations.push({
      icon: "üë¢",
      text: "–¢–µ–ø–ª–∞—è –æ–±—É–≤—å",
      color: "#059669",
      priority: 1
    });
  } else if (temp < 0) {
    recommendations.push({
      icon: "üß•",
      text: "–ó–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞",
      color: "#1e40af",
      priority: 1
    });
    recommendations.push({
      icon: "üß£",
      text: "–®–∞—Ä—Ñ –∏ —à–∞–ø–∫–∞",
      color: "#7c3aed",
      priority: 2
    });
  } else if (temp < 10) {
    recommendations.push({
      icon: "üß•",
      text: "–¢–µ–ø–ª–∞—è –∫—É—Ä—Ç–∫–∞",
      color: "#2563eb",
      priority: 1
    });
    recommendations.push({
      icon: "üëñ",
      text: "–î–ª–∏–Ω–Ω—ã–µ –±—Ä—é–∫–∏",
      color: "#059669",
      priority: 2
    });
  } else if (temp < 20) {
    recommendations.push({
      icon: "üß•",
      text: "–õ–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞",
      color: "#0891b2",
      priority: 2
    });
    recommendations.push({
      icon: "üëï",
      text: "–°–≤–∏—Ç–µ—Ä –∏–ª–∏ –∫–æ—Ñ—Ç–∞",
      color: "#7c3aed",
      priority: 2
    });
  } else if (temp < 25) {
    recommendations.push({
      icon: "üëï",
      text: "–õ–µ–≥–∫–∞—è –æ–¥–µ–∂–¥–∞",
      color: "#059669",
      priority: 2
    });
    recommendations.push({
      icon: "üëü",
      text: "–£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å",
      color: "#0891b2",
      priority: 3
    });
  } else {
    recommendations.push({
      icon: "üëï",
      text: "–õ–µ–≥–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
      color: "#059669",
      priority: 2
    });
    recommendations.push({
      icon: "ü©≥",
      text: "–®–æ—Ä—Ç—ã",
      color: "#0891b2",
      priority: 2
    });
    recommendations.push({
      icon: "üï∂Ô∏è",
      text: "–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏",
      color: "#f59e0b",
      priority: 3
    });
  }

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ–≥–æ–¥–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º
  if (desc.toLowerCase().includes('–¥–æ–∂–¥') || desc.toLowerCase().includes('rain')) {
    recommendations.push({
      icon: "üåÇ",
      text: "–ó–æ–Ω—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!",
      color: "#dc2626",
      priority: 1
    });
    recommendations.push({
      icon: "ü•æ",
      text: "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è –æ–±—É–≤—å",
      color: "#7c3aed",
      priority: 2
    });
  }

  if (desc.toLowerCase().includes('—Å–Ω–µ–≥') || desc.toLowerCase().includes('snow')) {
    recommendations.push({
      icon: "‚ùÑÔ∏è",
      text: "–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–Ω–µ–≥–∞",
      color: "#0891b2",
      priority: 1
    });
  }

  if (windSpeed > 10) {
    recommendations.push({
      icon: "üå¨Ô∏è",
      text: "–í–µ—Ç—Ä–æ–∑–∞—â–∏—Ç–Ω–∞—è –æ–¥–µ–∂–¥–∞",
      color: "#6366f1",
      priority: 2
    });
  }

  if (humidity > 80) {
    recommendations.push({
      icon: "üíß",
      text: "–î—ã—à–∞—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
      color: "#0891b2",
      priority: 3
    });
  }

  if (isNight) {
    recommendations.push({
      icon: "üåô",
      text: "–°–≤–µ—Ç–æ–æ—Ç—Ä–∞–∂–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã",
      color: "#7c3aed",
      priority: 3
    });
  }

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏ –±–µ—Ä–µ–º —Ç–æ–ø-4
  return recommendations
    .sort((a, b) => a.priority - b.priority)
    .slice(0, 4);
}

export default function ClothingRecommendations({ temp, desc, humidity, windSpeed, isNight }) {
  const recommendations = getClothingRecommendations(temp, desc, humidity || 50, windSpeed || 0, isNight);

  if (recommendations.length === 0) return null;

  return (
    <motion.div
      style={{
        background: "rgba(255, 255, 255, 0.9)",
        borderRadius: 16,
        padding: "16px",
        margin: "16px auto 0",
        maxWidth: 300,
        backdropFilter: "blur(10px)",
        boxShadow: "0 4px 20px rgba(0,0,0,0.1)"
      }}
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: 0.3 }}
    >
      <div style={{
        fontSize: 16,
        fontWeight: 600,
        color: "#374151",
        marginBottom: 12,
        textAlign: "center",
        fontFamily: "Montserrat, Arial, sans-serif"
      }}>
        üëî –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ–¥–µ–∂–¥—ã
      </div>

      <div style={{
        display: "grid",
        gridTemplateColumns: "1fr 1fr",
        gap: 8
      }}>
        {recommendations.map((item, index) => (
          <motion.div
            key={index}
            style={{
              background: "rgba(255, 255, 255, 0.7)",
              borderRadius: 12,
              padding: "10px 8px",
              textAlign: "center",
              border: `2px solid ${item.color}20`,
              position: "relative",
              overflow: "hidden"
            }}
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.4, delay: index * 0.1 + 0.4 }}
            whileHover={{ scale: 1.05 }}
          >
            {/* –¶–≤–µ—Ç–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç */}
            <div style={{
              position: "absolute",
              top: 0,
              left: 0,
              right: 0,
              height: 3,
              background: item.color,
              borderRadius: "12px 12px 0 0"
            }} />
            
            <div style={{
              fontSize: 20,
              marginBottom: 4
            }}>
              {item.icon}
            </div>
            
            <div style={{
              fontSize: 16,
              fontWeight: 500,
              color: "#374151",
              lineHeight: 1.3,
              fontFamily: "Montserrat, Arial, sans-serif"
            }}>
              {item.text}
            </div>
          </motion.div>
        ))}
      </div>

      {/* –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ç–µ–∫—Å—Ç */}
      <motion.div
        style={{
          marginTop: 12,
          fontSize: 16,
          textAlign: "center",
          color: "#6b7280",
          fontStyle: "italic",
          fontFamily: "Montserrat, Arial, sans-serif"
        }}
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 1 }}
      >
        {temp < 0 ? "ü•∂ –ë–µ—Ä–µ–≥–∏ —Å–µ–±—è –≤ –º–æ—Ä–æ–∑!" : 
         temp > 25 ? "‚òÄÔ∏è –û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞!" : 
         "üå§Ô∏è –û–¥–µ–≤–∞–π—Å—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ!"}
      </motion.div>
    </motion.div>
  );
}