// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ QuickActions —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–º—ã –±–ª–æ–∫–∞
function getQuickActionsTheme() {
  return {
    mainColor: "#6366f1",
    bgColor: "#6366f115",
    iconBgColor: "#6366f110"
  };
}

// SVG —Å—Ç—Ä–µ–ª–∫–∞
const ChevronIcon = ({ isOpen }) => (
  <motion.svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    animate={{ rotate: isOpen ? 180 : 0 }}
    transition={{ duration: 0.3 }}
    style={{ color: "#6b7280" }}
  >
    <path
      d="M6 9L12 15L18 9"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </motion.svg>
);

export default function QuickActions({ weather, onShareWeather, onSaveToFavorites, onOpenAdminPanel }) {
  const [isExpanded, setIsExpanded] = useState(false);
  const theme = getQuickActionsTheme();

  if (!weather) return null;

  const quickActions = [
    {
      icon: "üì±",
      label: "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è",
      action: () => onShareWeather(weather),
      color: "#059669",
      bgColor: "#05966915",
      iconBgColor: "#05966910",
      description: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"
    },
    {
      icon: "‚≠ê",
      label: "–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
      action: () => onSaveToFavorites(weather.city),
      color: "#f59e0b",
      bgColor: "#f59e0b15",
      iconBgColor: "#f59e0b10",
      description: "–î–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
    },
    {
      icon: "üìç",
      label: "–ù–∞ –∫–∞—Ä—Ç–µ",
      action: () => window.open(`https://yandex.ru/maps/?text=${encodeURIComponent(weather.city)}`),
      color: "#3b82f6",
      bgColor: "#3b82f615",
      iconBgColor: "#3b82f610",
      description: "–û—Ç–∫—Ä—ã—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç–∞—Ö"
    },
    {
      icon: "üîÑ",
      label: "–û–±–Ω–æ–≤–∏—Ç—å",
      action: () => window.location.reload(),
      color: "#8b5cf6",
      bgColor: "#8b5cf615",
      iconBgColor: "#8b5cf610",
      description: "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
    },
    {
      icon: "üìã",
      label: "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å",
      action: () => {
        const weatherText = `üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ ${weather.city}: ${weather.temp}¬∞, ${weather.desc.toLowerCase()}`;
        navigator.clipboard.writeText(weatherText).then(() => {
          alert('–î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
        }).catch(() => {
          alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ');
        });
      },
      color: "#ef4444",
      bgColor: "#ef444415",
      iconBgColor: "#ef444410",
      description: "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"
    },
    {
      icon: "üåê",
      label: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
      action: () => window.open(`https://yandex.ru/pogoda/search?text=${encodeURIComponent(weather.city)}`),
      color: "#10b981",
      bgColor: "#10b98115",
      iconBgColor: "#10b98110",
      description: "–ü–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑"
    },
    
    {
      icon: "üîê",
      label: "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
      action: () => {
        // –ó–ê–ú–ï–ù–ò–¢–ï –≠–¢–û–¢ action –ù–ê:
        console.log('üîê –ö–Ω–æ–ø–∫–∞ –∞–¥–º–∏–Ω–∫–∏ –Ω–∞–∂–∞—Ç–∞!');
        console.log('onOpenAdminPanel —Ñ—É–Ω–∫—Ü–∏—è:', onOpenAdminPanel);
        alert('–¢–µ—Å—Ç: –∫–Ω–æ–ø–∫–∞ –∞–¥–º–∏–Ω–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    
        if (onOpenAdminPanel) {
          console.log('–í—ã–∑—ã–≤–∞–µ–º onOpenAdminPanel...');
          onOpenAdminPanel();
        } else {
          alert('‚ùå onOpenAdminPanel –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω!');
        }
      },
      color: "#dc3545",
      bgColor: "#dc354515",
      iconBgColor: "#dc354510",
      description: "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    }
  ];

  // –ü–µ—Ä–≤—ã–µ 4 –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø—Ä–µ–≤—å—é
  const previewActions = quickActions.slice(0, 4);
  const additionalActions = quickActions.slice(4);

  return (
    <motion.div
      style={{
        background: "rgba(255, 255, 255, 0.9)",
        borderRadius: 16,
        padding: "10px",
        margin: "16px auto 0",
        maxWidth: 340,
        width: "100%",
        boxSizing: "border-box",
        backdropFilter: "blur(10px)",
        boxShadow: "0 4px 20px rgba(0,0,0,0.1)",
        cursor: "pointer"
      }}
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: 0.8 }}
      onClick={() => setIsExpanded(!isExpanded)}
      whileHover={{ scale: 1.02 }}
      whileTap={{ scale: 0.98 }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–µ–≤—å—é */}
      <div style={{
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between"
      }}>
        {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å —Å –∏–∫–æ–Ω–∫–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º */}
        <div style={{
          display: "flex",
          alignItems: "center",
          gap: 12,
          flex: 1
        }}>
          {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–∫–æ–Ω–∫–∏ —Å —Ü–≤–µ—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º */}
          <motion.div
            style={{
              width: 48, // –£–≤–µ–ª–∏—á–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
              height: 48,
              borderRadius: 12,
              background: `linear-gradient(135deg, ${theme.iconBgColor}, ${theme.bgColor})`,
              border: `1px solid ${theme.mainColor}30`,
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              flexShrink: 0,
              position: "relative",
              overflow: "hidden"
            }}
            whileHover={{ scale: 1.05 }}
            transition={{ duration: 0.2 }}
          >
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ */}
            <div style={{
              position: "absolute",
              top: 0,
              left: 0,
              right: 0,
              height: 2,
              background: theme.mainColor,
              borderRadius: "12px 12px 0 0"
            }} />
            
            {/* –ö—Ä—É–ø–Ω–∞—è –∏–∫–æ–Ω–∫–∞ */}
            <span style={{ 
              fontSize: 24, // –£–≤–µ–ª–∏—á–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏
              filter: "drop-shadow(0 1px 2px rgba(0,0,0,0.1))"
            }}>
              ‚ö°
            </span>
          </motion.div>

          {/* –¢–µ–∫—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div style={{ flex: 1 }}>
            <div style={{
              fontSize: 16,
              fontWeight: 600,
              color: "#374151",
              fontFamily: "Montserrat, Arial, sans-serif",
              marginBottom: 2
            }}>
              –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            </div>
            {!isExpanded && (
              <div style={{
                display: "flex",
                gap: 4,
                marginTop: 2,
                alignItems: "center"
              }}>
                {previewActions.slice(0, 3).map((action, index) => (
                  <motion.span 
                    key={index} 
                    style={{ 
                      fontSize: 16, // –£–≤–µ–ª–∏—á–∏–ª–∏ —Ä–∞–∑–º–µ—Ä –ø—Ä–µ–≤—å—é-–∏–∫–æ–Ω–æ–∫
                      filter: "drop-shadow(0 1px 1px rgba(0,0,0,0.1))"
                    }}
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{ delay: index * 0.1 + 0.8 }}
                  >
                    {action.icon}
                  </motion.span>
                ))}
                <span style={{
                  fontSize: 12,
                  color: "#6b7280",
                  fontFamily: "Montserrat, Arial, sans-serif",
                  marginLeft: 2
                }}>
                  +{quickActions.length - 3}
                </span>
              </div>
            )}
          </div>
        </div>
        
        <ChevronIcon isOpen={isExpanded} />
      </div>

      {/* –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <AnimatePresence>
        {isExpanded && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: "auto" }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
            style={{ overflow: "hidden" }}
            onClick={(e) => e.stopPropagation()} // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏
          >
            <div style={{ marginTop: 16 }}>
              
              {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              <div style={{
                display: "grid",
                gridTemplateColumns: "repeat(2, 1fr)",
                gap: 8,
                marginBottom: 12
              }}>
                {previewActions.map((action, index) => (
                  <motion.button
                    key={index}
                    onClick={(e) => {
                      e.stopPropagation();
                      action.action();
                    }}
                    style={{
                      background: `linear-gradient(135deg, ${action.iconBgColor}, ${action.bgColor})`,
                      border: `2px solid ${action.color}30`,
                      borderRadius: 12,
                      padding: "12px 8px",
                      display: "flex",
                      flexDirection: "column",
                      alignItems: "center",
                      justifyContent: "center",
                      cursor: "pointer",
                      position: "relative",
                      overflow: "hidden",
                      minHeight: 80
                    }}
                    initial={{ opacity: 0, scale: 0.8, y: 20 }}
                    animate={{ opacity: 1, scale: 1, y: 0 }}
                    transition={{ duration: 0.4, delay: index * 0.1 }}
                    whileHover={{ scale: 1.05, y: -2 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    {/* –¶–≤–µ—Ç–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç */}
                    <div style={{
                      position: "absolute",
                      top: 0,
                      left: 0,
                      right: 0,
                      height: 3,
                      background: action.color,
                      borderRadius: "12px 12px 0 0"
                    }} />
                    
                    {/* –ò–∫–æ–Ω–∫–∞ */}
                    <div style={{
                      fontSize: 28,
                      lineHeight: 1,
                      marginBottom: 6,
                      filter: "drop-shadow(0 2px 4px rgba(0,0,0,0.1))"
                    }}>
                      {action.icon}
                    </div>
                    
                    {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                    <div style={{
                      fontSize: 14,
                      color: "#374151",
                      fontFamily: "Montserrat, Arial, sans-serif",
                      fontWeight: 600,
                      lineHeight: 1.2,
                      textAlign: "center"
                    }}>
                      {action.label}
                    </div>
                  </motion.button>
                ))}
              </div>

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              <div style={{
                display: "grid",
                gridTemplateColumns: "repeat(2, 1fr)",
                gap: 8,
                marginBottom: 12
              }}>
                {additionalActions.map((action, index) => (
                  <motion.button
                    key={index + 4}
                    onClick={(e) => {
                      e.stopPropagation();
                      action.action();
                    }}
                    style={{
                      background: `linear-gradient(135deg, ${action.iconBgColor}, ${action.bgColor})`,
                      border: `2px solid ${action.color}30`,
                      borderRadius: 12,
                      padding: "12px 8px",
                      display: "flex",
                      flexDirection: "column",
                      alignItems: "center",
                      justifyContent: "center",
                      cursor: "pointer",
                      position: "relative",
                      overflow: "hidden",
                      minHeight: 80
                    }}
                    initial={{ opacity: 0, scale: 0.8, y: 20 }}
                    animate={{ opacity: 1, scale: 1, y: 0 }}
                    transition={{ duration: 0.4, delay: (index + 4) * 0.1 }}
                    whileHover={{ scale: 1.05, y: -2 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    {/* –¶–≤–µ—Ç–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç */}
                    <div style={{
                      position: "absolute",
                      top: 0,
                      left: 0,
                      right: 0,
                      height: 3,
                      background: action.color,
                      borderRadius: "12px 12px 0 0"
                    }} />
                    
                    {/* –ò–∫–æ–Ω–∫–∞ */}
                    <div style={{
                      fontSize: 28,
                      lineHeight: 1,
                      marginBottom: 6,
                      filter: "drop-shadow(0 2px 4px rgba(0,0,0,0.1))"
                    }}>
                      {action.icon}
                    </div>
                    
                    {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                    <div style={{
                      fontSize: 14,
                      color: "#374151",
                      fontFamily: "Montserrat, Arial, sans-serif",
                      fontWeight: 600,
                      lineHeight: 1.2,
                      textAlign: "center"
                    }}>
                      {action.label}
                    </div>
                  </motion.button>
                ))}
              </div>

              {/* –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
              <motion.div
                style={{
                  background: `linear-gradient(135deg, ${theme.iconBgColor}, ${theme.bgColor})`,
                  borderRadius: 8,
                  padding: "10px 12px",
                  border: `1px solid ${theme.mainColor}20`,
                  position: "relative",
                  overflow: "hidden"
                }}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.7 }}
              >
                {/* –¢–æ–Ω–∫–∞—è —Ü–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ —Å–Ω–∏–∑—É */}
                <div style={{
                  position: "absolute",
                  bottom: 0,
                  left: 0,
                  right: 0,
                  height: 2,
                  background: theme.mainColor,
                  borderRadius: "0 0 8px 8px"
                }} />
                
                <div style={{
                  fontSize: 14,
                  color: "#374151",
                  fontFamily: "Montserrat, Arial, sans-serif",
                  fontWeight: 500,
                  textAlign: "center"
                }}>
                  ‚ö° {quickActions.length} –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ
                </div>
              </motion.div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
}