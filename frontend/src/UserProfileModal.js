import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

const UserProfileModal = ({ isVisible, onComplete, onClose }) => {
  const [currentStep, setCurrentStep] = useState(0); // 0 = –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, 1-4 = –≤–æ–ø—Ä–æ—Å—ã
  const [profile, setProfile] = useState({
    health: [],
    bloodPressure: { systolic: 120, diastolic: 80, type: 'normal' },
    activity: [], // –¢–µ–ø–µ—Ä—å –º–∞—Å—Å–∏–≤ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
    interests: [],
    age: ''
  });
  const [showPressureDetail, setShowPressureDetail] = useState(false);
  const [showCloseConfirm, setShowCloseConfirm] = useState(false);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  const updateProfile = (key, value) => {
    setProfile(prev => ({ ...prev, [key]: value }));
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
  const toggleMultiSelect = (key, value) => {
    setProfile(prev => ({
      ...prev,
      [key]: prev[key].includes(value) 
        ? prev[key].filter(item => item !== value)
        : [...prev[key], value]
    }));
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleClose = () => {
    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–∏ –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–∏, –∏ –≤–æ –≤—Ä–µ–º—è –æ–ø—Ä–æ—Å–∞)
    setShowCloseConfirm(true);
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
  const confirmClose = () => {
    setShowCloseConfirm(false);
    onClose();
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ
  const handleComplete = () => {
    const finalProfile = {
      ...profile,
      setupCompleted: true,
      setupDate: new Date().toISOString().split('T')[0]
    };
    
    try {
      localStorage.setItem('userProfile', JSON.stringify(finalProfile));
      onComplete(finalProfile);
    } catch (error) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å:', error);
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  const nextStep = () => {
    if (currentStep === 0) {
      setCurrentStep(1);
      return;
    }
    
    if (currentStep === 1 && profile.health.includes('pressure') && !showPressureDetail) {
      setShowPressureDetail(true);
      return;
    }
    
    if (currentStep < 4) {
      setCurrentStep(currentStep + 1);
      setShowPressureDetail(false);
    }
  };

  // –ù–∞–∑–∞–¥
  const prevStep = () => {
    if (showPressureDetail) {
      setShowPressureDetail(false);
      return;
    }
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    } else if (currentStep === 1) {
      setCurrentStep(0); // –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—é
    }
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
  const canProceed = () => {
    switch (currentStep) {
      case 0: return true; // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
      case 1: return profile.health.length > 0;
      case 2: return profile.activity.length > 0;
      case 3: return profile.interests.length > 0;
      case 4: return profile.age !== '';
      default: return false;
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—ã–±–æ—Ä–∞ —á–∏—Å–µ–ª (–∏–º–∏—Ç–∞—Ü–∏—è iOS –∫–∞—Ä—É—Å–µ–ª–∏)
  const NumberPicker = ({ label, value, onChange, min, max }) => (
    <div style={{ flex: 1 }}>
      <label style={{
        display: 'block',
        fontSize: '12px',
        marginBottom: '8px',
        opacity: 0.8,
        fontFamily: 'Montserrat, Arial, sans-serif'
      }}>
        {label}
      </label>
      <select
        value={value}
        onChange={(e) => onChange(parseInt(e.target.value))}
        style={{
          width: '100%',
          padding: '12px',
          border: 'none',
          borderRadius: '8px',
          background: 'rgba(255,255,255,0.1)',
          color: 'white',
          fontSize: '16px',
          fontFamily: 'Montserrat, Arial, sans-serif',
          textAlign: 'center',
          boxSizing: 'border-box',
          appearance: 'none',
          cursor: 'pointer'
        }}
      >
        {Array.from({ length: max - min + 1 }, (_, i) => min + i).map(num => (
          <option key={num} value={num} style={{ background: '#667eea', color: 'white' }}>
            {num}
          </option>
        ))}
      </select>
    </div>
  );

  if (!isVisible) return null;

  return (
    <>
      {/* –û—Å–Ω–æ–≤–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        style={{
          position: 'fixed',
          top: 0,
          left: 0,
          width: '100%',
          height: '100%',
          backgroundColor: 'rgba(0,0,0,0.8)',
          zIndex: 3000,
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          padding: '20px',
          boxSizing: 'border-box'
        }}
      >
        <motion.div
          initial={{ scale: 0.7, opacity: 0, y: 50 }}
          animate={{ scale: 1, opacity: 1, y: 0 }}
          exit={{ scale: 0.7, opacity: 0, y: 50 }}
          transition={{ type: "spring", damping: 25, stiffness: 500 }}
          style={{
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            borderRadius: '24px',
            maxWidth: '450px',
            width: '100%',
            color: 'white',
            overflow: 'hidden',
            boxShadow: '0 25px 80px rgba(0,0,0,0.4)',
            position: 'relative'
          }}
        >
          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
          <button
            onClick={handleClose}
            style={{
              position: 'absolute',
              top: '16px',
              right: '16px',
              width: '32px',
              height: '32px',
              borderRadius: '50%',
              background: 'rgba(255,255,255,0.2)',
              border: 'none',
              color: 'white',
              fontSize: '18px',
              cursor: 'pointer',
              zIndex: 10,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center'
            }}
          >
            √ó
          </button>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å */}
          <div style={{ padding: '24px 56px 0 24px' }}> {/* –£–≤–µ–ª–∏—á–∏–ª–∏ –ø—Ä–∞–≤—ã–π –æ—Ç—Å—Ç—É–ø –¥–ª—è –∫—Ä–µ—Å—Ç–∏–∫–∞ */}
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: '16px'
            }}>
              <h2 style={{
                margin: 0,
                fontSize: '20px',
                fontWeight: '700',
                fontFamily: 'Montserrat, Arial, sans-serif',
                flex: 1 // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ
              }}>
                {currentStep === 0 ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!' : '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è'}
              </h2>
              {currentStep > 0 && (
                <div style={{
                  fontSize: '14px',
                  opacity: 0.8,
                  fontFamily: 'Montserrat, Arial, sans-serif',
                  whiteSpace: 'nowrap' // –ù–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–º —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                }}>
                  {showPressureDetail ? '1' : currentStep}/4
                </div>
              )}
            </div>

            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
            {currentStep > 0 && (
              <div style={{
                width: '100%',
                height: '4px',
                background: 'rgba(255,255,255,0.2)',
                borderRadius: '2px',
                overflow: 'hidden',
                marginBottom: '24px'
              }}>
                <motion.div
                  style={{
                    height: '100%',
                    background: 'linear-gradient(90deg, #ffd700 0%, #ffed4e 100%)',
                    borderRadius: '2px'
                  }}
                  initial={{ width: '25%' }}
                  animate={{ 
                    width: showPressureDetail ? '25%' : `${(currentStep / 4) * 100}%` 
                  }}
                  transition={{ duration: 0.3 }}
                />
              </div>
            )}
          </div>

          {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
          <div style={{ 
            padding: '0 24px',
            minHeight: currentStep === 0 ? '280px' : '320px',
            paddingBottom: '20px', // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
            position: 'relative'
          }}>
            <AnimatePresence mode="wait">
              {/* –≠–ö–†–ê–ù –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø */}
              {currentStep === 0 && (
                <motion.div
                  key="welcome"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -20 }}
                  transition={{ duration: 0.4 }}
                  style={{ textAlign: 'center' }}
                >
                  <div style={{ fontSize: '64px', marginBottom: '16px' }}>
                    üå§Ô∏è
                  </div>
                  
                  <h3 style={{
                    fontSize: '24px',
                    fontWeight: '700',
                    marginBottom: '16px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –°–¥–µ–ª–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º!
                  </h3>
                  
                  <p style={{
                    fontSize: '16px',
                    lineHeight: 1.5,
                    marginBottom: '20px',
                    opacity: 0.9,
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ –º—ã –Ω–∞—Å—Ç—Ä–æ–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥ –≤–∞—à–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∑–¥–æ—Ä–æ–≤—å—è –∏ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏.
                  </p>
                  
                  <div style={{
                    background: 'rgba(255,255,255,0.1)',
                    borderRadius: '12px',
                    padding: '16px',
                    marginBottom: '24px'
                  }}>
                    <div style={{
                      fontSize: '14px',
                      opacity: 0.8,
                      fontFamily: 'Montserrat, Arial, sans-serif',
                      lineHeight: 1.4
                    }}>
                      ‚ú® –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ–¥–µ–∂–¥—ã<br/>
                      ü©∫ –ê–ª–µ—Ä—Ç—ã –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è –∏ –¥–∞–≤–ª–µ–Ω–∏—è<br/>
                      üèÉ –°–æ–≤–µ—Ç—ã –¥–ª—è —Å–ø–æ—Ä—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏<br/>
                      üë∂ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–µ—Ç–µ–π
                    </div>
                  </div>
                  
                  <motion.button
                    onClick={nextStep}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    style={{
                      width: '100%',
                      padding: '16px',
                      background: 'linear-gradient(135deg, #ffd700 0%, #ffed4e 100%)',
                      color: '#1a1a1a',
                      border: 'none',
                      borderRadius: '12px',
                      fontSize: '18px',
                      fontWeight: '700',
                      fontFamily: 'Montserrat, Arial, sans-serif',
                      cursor: 'pointer'
                    }}
                  >
                    üöÄ –ù–∞—á–∞—Ç—å!
                  </motion.button>
                </motion.div>
              )}

              {/* –í–û–ü–†–û–° 1: –ó–î–û–†–û–í–¨–ï */}
              {currentStep === 1 && !showPressureDetail && (
                <motion.div
                  key="health"
                  initial={{ opacity: 0, x: 50 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -50 }}
                  transition={{ duration: 0.3 }}
                >
                  <h3 style={{
                    fontSize: '18px',
                    fontWeight: '600',
                    marginBottom: '8px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    ü©∫ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
                  </h3>
                  <p style={{
                    fontSize: '14px',
                    opacity: 0.8,
                    marginBottom: '20px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                  </p>

                  <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                    {[
                      { id: 'meteosensitive', icon: 'ü©∫', label: '–ú–µ—Ç–µ–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å/–º–∏–≥—Ä–µ–Ω–∏' },
                      { id: 'pressure', icon: 'üíì', label: '–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∞–≤–ª–µ–Ω–∏–µ–º' },
                      { id: 'asthma', icon: 'ü´Å', label: '–ê—Å—Ç–º–∞' },
                      { id: 'allergies', icon: 'ü§ß', label: '–ê–ª–ª–µ—Ä–≥–∏–∏' },
                      { id: 'healthy', icon: 'üí™', label: '–û—Ç–ª–∏—á–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ' }
                    ].map((option) => (
                      <motion.button
                        key={option.id}
                        onClick={() => toggleMultiSelect('health', option.id)}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        style={{
                          display: 'flex',
                          alignItems: 'center',
                          gap: '12px',
                          padding: '16px',
                          border: 'none',
                          borderRadius: '12px',
                          background: profile.health.includes(option.id)
                            ? 'rgba(255, 215, 0, 0.2)'
                            : 'rgba(255,255,255,0.1)',
                          color: 'white',
                          fontSize: '16px',
                          fontFamily: 'Montserrat, Arial, sans-serif',
                          cursor: 'pointer',
                          transition: 'all 0.2s',
                          border: profile.health.includes(option.id)
                            ? '2px solid #ffd700'
                            : '2px solid transparent'
                        }}
                      >
                        <span style={{ fontSize: '20px' }}>{option.icon}</span>
                        <span style={{ flex: 1, textAlign: 'left' }}>{option.label}</span>
                        {profile.health.includes(option.id) && (
                          <span style={{ fontSize: '16px' }}>‚úì</span>
                        )}
                      </motion.button>
                    ))}
                  </div>
                </motion.div>
              )}

              {/* –î–ï–¢–ê–õ–ò –î–ê–í–õ–ï–ù–ò–Ø */}
              {currentStep === 1 && showPressureDetail && (
                <motion.div
                  key="pressure-detail"
                  initial={{ opacity: 0, x: 50 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -50 }}
                  transition={{ duration: 0.3 }}
                >
                  <h3 style={{
                    fontSize: '18px',
                    fontWeight: '600',
                    marginBottom: '8px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    üíì –ö–∞–∫–æ–µ —É –≤–∞—Å –¥–∞–≤–ª–µ–Ω–∏–µ?
                  </h3>
                  <p style={{
                    fontSize: '14px',
                    opacity: 0.8,
                    marginBottom: '20px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
                  </p>

                  {/* –¢–∏–ø –¥–∞–≤–ª–µ–Ω–∏—è */}
                  <div style={{ marginBottom: '20px' }}>
                    <div style={{ display: 'flex', gap: '12px' }}>
                      {[
                        { id: 'high', label: '–í—ã—Å–æ–∫–æ–µ (–≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—è)', icon: 'üìà' },
                        { id: 'low', label: '–ù–∏–∑–∫–æ–µ (–≥–∏–ø–æ—Ç–æ–Ω–∏—è)', icon: 'üìâ' },
                        { id: 'normal', label: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ', icon: '‚úÖ' }
                      ].map((type) => (
                        <motion.button
                          key={type.id}
                          onClick={() => updateProfile('bloodPressure', { 
                            ...profile.bloodPressure, 
                            type: type.id,
                            // –ü—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –¥–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞–≤–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
                            systolic: type.id === 'normal' ? 120 : profile.bloodPressure.systolic,
                            diastolic: type.id === 'normal' ? 80 : profile.bloodPressure.diastolic
                          })}
                          whileHover={{ scale: 1.02 }}
                          whileTap={{ scale: 0.98 }}
                          style={{
                            flex: 1,
                            padding: '12px 8px',
                            border: 'none',
                            borderRadius: '8px',
                            background: profile.bloodPressure.type === type.id
                              ? 'rgba(255, 215, 0, 0.2)'
                              : 'rgba(255,255,255,0.1)',
                            color: 'white',
                            fontSize: '12px',
                            fontFamily: 'Montserrat, Arial, sans-serif',
                            cursor: 'pointer',
                            border: profile.bloodPressure.type === type.id
                              ? '2px solid #ffd700'
                              : '2px solid transparent',
                            textAlign: 'center'
                          }}
                        >
                          <div style={{ fontSize: '16px', marginBottom: '4px' }}>
                            {type.icon}
                          </div>
                          {type.label}
                        </motion.button>
                      ))}
                    </div>
                  </div>

                  {/* –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã—Å–æ–∫–æ–≥–æ/–Ω–∏–∑–∫–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è */}
                  {(profile.bloodPressure.type === 'high' || profile.bloodPressure.type === 'low') && (
                    <motion.div 
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: 'auto' }}
                      style={{ display: 'flex', gap: '16px', alignItems: 'center' }}
                    >
                      <NumberPicker
                        label="–í–µ—Ä—Ö–Ω–µ–µ"
                        value={profile.bloodPressure.systolic}
                        onChange={(value) => updateProfile('bloodPressure', {
                          ...profile.bloodPressure,
                          systolic: value
                        })}
                        min={90}
                        max={200}
                      />
                      <div style={{
                        fontSize: '20px',
                        fontWeight: 'bold',
                        opacity: 0.6,
                        marginTop: '16px'
                      }}>
                        /
                      </div>
                      <NumberPicker
                        label="–ù–∏–∂–Ω–µ–µ"
                        value={profile.bloodPressure.diastolic}
                        onChange={(value) => updateProfile('bloodPressure', {
                          ...profile.bloodPressure,
                          diastolic: value
                        })}
                        min={50}
                        max={120}
                      />
                    </motion.div>
                  )}
                </motion.div>
              )}

              {/* –í–û–ü–†–û–° 2: –ê–ö–¢–ò–í–ù–û–°–¢–¨ */}
              {currentStep === 2 && (
                <motion.div
                  key="activity"
                  initial={{ opacity: 0, x: 50 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -50 }}
                  transition={{ duration: 0.3 }}
                >
                  <h3 style={{
                    fontSize: '18px',
                    fontWeight: '600',
                    marginBottom: '8px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    üèÉ –ö–∞–∫–∞—è —É –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å?
                  </h3>
                  <p style={{
                    fontSize: '14px',
                    opacity: 0.8,
                    marginBottom: '20px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                  </p>

                  <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                    {[
                      { id: 'outdoor_sports', icon: 'üèÉ', label: '–°–ø–æ—Ä—Ç –Ω–∞ —É–ª–∏—Ü–µ (–±–µ–≥, –≤–µ–ª–æ—Å–∏–ø–µ–¥)' },
                      { id: 'fitness', icon: 'üö∂', label: '–ü—Ä–æ–≥—É–ª–∫–∏/—Ñ–∏—Ç–Ω–µ—Å' },
                      { id: 'homebody', icon: 'üè†', label: '–î–æ–º–æ—Å–µ–¥' },
                      { id: 'with_children', icon: 'üë∂', label: '–° –¥–µ—Ç—å–º–∏' }
                    ].map((option) => (
                      <motion.button
                        key={option.id}
                        onClick={() => toggleMultiSelect('activity', option.id)}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        style={{
                          display: 'flex',
                          alignItems: 'center',
                          gap: '12px',
                          padding: '16px',
                          border: 'none',
                          borderRadius: '12px',
                          background: profile.activity.includes(option.id)
                            ? 'rgba(255, 215, 0, 0.2)'
                            : 'rgba(255,255,255,0.1)',
                          color: 'white',
                          fontSize: '16px',
                          fontFamily: 'Montserrat, Arial, sans-serif',
                          cursor: 'pointer',
                          transition: 'all 0.2s',
                          border: profile.activity.includes(option.id)
                            ? '2px solid #ffd700'
                            : '2px solid transparent'
                        }}
                      >
                        <span style={{ fontSize: '20px' }}>{option.icon}</span>
                        <span style={{ flex: 1, textAlign: 'left' }}>{option.label}</span>
                        {profile.activity.includes(option.id) && (
                          <span style={{ fontSize: '16px' }}>‚úì</span>
                        )}
                      </motion.button>
                    ))}
                  </div>
                </motion.div>
              )}

              {/* –í–û–ü–†–û–° 3: –ò–ù–¢–ï–†–ï–°–´ */}
              {currentStep === 3 && (
                <motion.div
                  key="interests"
                  initial={{ opacity: 0, x: 50 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -50 }}
                  transition={{ duration: 0.3 }}
                >
                  <h3 style={{
                    fontSize: '18px',
                    fontWeight: '600',
                    marginBottom: '8px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    üå± –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
                  </h3>
                  <p style={{
                    fontSize: '14px',
                    opacity: 0.8,
                    marginBottom: '20px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                  </p>

                  <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                    {[
                      { id: 'gardening', icon: 'üå±', label: '–î–∞—á–∞/—Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ' },
                      { id: 'travel', icon: 'üåç', label: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è' },
                      { id: 'photography', icon: 'üì∏', label: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏—Ä–æ–¥—ã' },
                      { id: 'work_only', icon: 'üè¢', label: '–¢–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏' }
                    ].map((option) => (
                      <motion.button
                        key={option.id}
                        onClick={() => toggleMultiSelect('interests', option.id)}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        style={{
                          display: 'flex',
                          alignItems: 'center',
                          gap: '12px',
                          padding: '16px',
                          border: 'none',
                          borderRadius: '12px',
                          background: profile.interests.includes(option.id)
                            ? 'rgba(255, 215, 0, 0.2)'
                            : 'rgba(255,255,255,0.1)',
                          color: 'white',
                          fontSize: '16px',
                          fontFamily: 'Montserrat, Arial, sans-serif',
                          cursor: 'pointer',
                          transition: 'all 0.2s',
                          border: profile.interests.includes(option.id)
                            ? '2px solid #ffd700'
                            : '2px solid transparent'
                        }}
                      >
                        <span style={{ fontSize: '20px' }}>{option.icon}</span>
                        <span style={{ flex: 1, textAlign: 'left' }}>{option.label}</span>
                        {profile.interests.includes(option.id) && (
                          <span style={{ fontSize: '16px' }}>‚úì</span>
                        )}
                      </motion.button>
                    ))}
                  </div>
                </motion.div>
              )}

              {/* –í–û–ü–†–û–° 4: –í–û–ó–†–ê–°–¢ */}
              {currentStep === 4 && (
                <motion.div
                  key="age"
                  initial={{ opacity: 0, x: 50 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -50 }}
                  transition={{ duration: 0.3 }}
                >
                  <h3 style={{
                    fontSize: '18px',
                    fontWeight: '600',
                    marginBottom: '8px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    üë® –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç?
                  </h3>
                  <p style={{
                    fontSize: '14px',
                    opacity: 0.8,
                    marginBottom: '20px',
                    fontFamily: 'Montserrat, Arial, sans-serif'
                  }}>
                    –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                  </p>

                  <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>
                    {[
                      { id: 'under_18', icon: 'üë∂', label: '–î–æ 18' },
                      { id: '18_35', icon: 'üë®', label: '18-35' },
                      { id: '35_55', icon: 'üë©', label: '35-55' },
                      { id: '55_plus', icon: 'üë¥', label: '55+' }
                    ].map((option) => (
                      <motion.button
                        key={option.id}
                        onClick={() => updateProfile('age', option.id)}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        style={{
                          display: 'flex',
                          flexDirection: 'column',
                          alignItems: 'center',
                          gap: '8px',
                          padding: '20px 16px',
                          border: 'none',
                          borderRadius: '12px',
                          background: profile.age === option.id
                            ? 'rgba(255, 215, 0, 0.2)'
                            : 'rgba(255,255,255,0.1)',
                          color: 'white',
                          fontSize: '14px',
                          fontFamily: 'Montserrat, Arial, sans-serif',
                          cursor: 'pointer',
                          transition: 'all 0.2s',
                          border: profile.age === option.id
                            ? '2px solid #ffd700'
                            : '2px solid transparent'
                        }}
                      >
                        <span style={{ fontSize: '24px' }}>{option.icon}</span>
                        <span>{option.label}</span>
                        {profile.age === option.id && (
                          <span style={{ fontSize: '16px' }}>‚úì</span>
                        )}
                      </motion.button>
                    ))}
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div style={{
            padding: '0 24px 24px 24px',
            display: 'flex',
            gap: '12px',
            justifyContent: 'space-between'
          }}>
            {(currentStep > 1 || showPressureDetail) && (
              <motion.button
                onClick={prevStep}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                style={{
                  padding: '12px 20px',
                  background: 'rgba(255,255,255,0.2)',
                  color: 'white',
                  border: '1px solid rgba(255,255,255,0.3)',
                  borderRadius: '12px',
                  fontSize: '14px',
                  fontFamily: 'Montserrat, Arial, sans-serif',
                  cursor: 'pointer'
                }}
              >
                ‚Üê –ù–∞–∑–∞–¥
              </motion.button>
            )}

            {currentStep > 0 && (
              <motion.button
                onClick={currentStep === 4 ? handleComplete : nextStep}
                disabled={!canProceed() && !showPressureDetail && currentStep > 0}
                whileHover={(canProceed() || showPressureDetail || currentStep === 0) ? { scale: 1.05 } : {}}
                whileTap={(canProceed() || showPressureDetail || currentStep === 0) ? { scale: 0.95 } : {}}
                style={{
                  flex: 1,
                  padding: '16px',
                  background: (canProceed() || showPressureDetail || currentStep === 0)
                    ? 'linear-gradient(135deg, #ffd700 0%, #ffed4e 100%)'
                    : 'rgba(255,255,255,0.1)',
                  color: (canProceed() || showPressureDetail || currentStep === 0) ? '#1a1a1a' : 'rgba(255,255,255,0.5)',
                  border: 'none',
                  borderRadius: '12px',
                  fontSize: '16px',
                  fontWeight: '700',
                  fontFamily: 'Montserrat, Arial, sans-serif',
                  cursor: (canProceed() || showPressureDetail || currentStep === 0) ? 'pointer' : 'not-allowed',
                  marginLeft: (currentStep === 1 && !showPressureDetail) || currentStep === 0 ? 0 : 'auto'
                }}
              >
                {currentStep === 4 ? 'üéâ –ì–æ—Ç–æ–≤–æ!' : '–î–∞–ª–µ–µ ‚Üí'}
              </motion.button>
            )}
          </div>
        </motion.div>
      </motion.div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è */}
      <AnimatePresence>
        {showCloseConfirm && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            style={{
              position: 'fixed',
              top: 0,
              left: 0,
              width: '100%',
              height: '100%',
              backgroundColor: 'rgba(0,0,0,0.9)',
              zIndex: 4000,
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              padding: '20px',
              boxSizing: 'border-box'
            }}
          >
            <motion.div
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.8, opacity: 0 }}
              style={{
                background: 'white',
                borderRadius: '16px',
                padding: '24px',
                maxWidth: '320px',
                width: '100%',
                textAlign: 'center'
              }}
            >
              <div style={{ fontSize: '48px', marginBottom: '16px' }}>
                ü§î
              </div>
              
              <h3 style={{
                fontSize: '18px',
                fontWeight: '600',
                marginBottom: '12px',
                color: '#1f2937',
                fontFamily: 'Montserrat, Arial, sans-serif'
              }}>
                –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—é?
              </h3>
              
              <p style={{
                fontSize: '14px',
                color: '#6b7280',
                lineHeight: 1.4,
                marginBottom: '20px',
                fontFamily: 'Montserrat, Arial, sans-serif'
              }}>
                –í—ã –º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ –¥–ª—è —Å–µ–±—è, –ø—Ä–æ–π–¥—è —ç—Ç–æ—Ç –æ–ø—Ä–æ—Å –ø–æ–∑–¥–Ω–µ–µ –≤ –ë—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö ‚Üí –ü—Ä–æ—Ñ–∏–ª—å ‚Üí –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å
              </p>
              
              <div style={{ display: 'flex', gap: '12px' }}>
                <button
                  onClick={() => setShowCloseConfirm(false)}
                  style={{
                    flex: 1,
                    padding: '12px',
                    background: '#f3f4f6',
                    border: 'none',
                    borderRadius: '8px',
                    fontSize: '14px',
                    fontFamily: 'Montserrat, Arial, sans-serif',
                    cursor: 'pointer'
                  }}
                >
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø—Ä–æ—Å
                </button>
                <button
                  onClick={confirmClose}
                  style={{
                    flex: 1,
                    padding: '12px',
                    background: '#ef4444',
                    color: 'white',
                    border: 'none',
                    borderRadius: '8px',
                    fontSize: '14px',
                    fontFamily: 'Montserrat, Arial, sans-serif',
                    cursor: 'pointer'
                  }}
                >
                  –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                </button>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
};

export default UserProfileModal;