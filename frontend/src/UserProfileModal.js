import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

const UserProfileModal = ({ isVisible, onComplete }) => {
  const [currentStep, setCurrentStep] = useState(1);
  const [profile, setProfile] = useState({
    health: [],
    bloodPressure: { systolic: 120, diastolic: 80, type: '' },
    activity: '',
    interests: [],
    age: ''
  });
  const [showPressureDetail, setShowPressureDetail] = useState(false);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
  const updateProfile = (key, value) => {
    setProfile(prev => ({ ...prev, [key]: value }));
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
  const toggleMultiSelect = (key, value) => {
    setProfile(prev => ({
      ...prev,
      [key]: prev[key].includes(value) 
        ? prev[key].filter(item => item !== value)
        : [...prev[key], value]
    }));
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ
  const handleComplete = () => {
    const finalProfile = {
      ...profile,
      setupCompleted: true,
      setupDate: new Date().toISOString().split('T')[0]
    };
    
    try {
      localStorage.setItem('userProfile', JSON.stringify(finalProfile));
      onComplete(finalProfile);
    } catch (error) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å:', error);
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  const nextStep = () => {
    if (currentStep === 1 && profile.health.includes('pressure') && !showPressureDetail) {
      setShowPressureDetail(true);
      return;
    }
    if (currentStep < 4) {
      setCurrentStep(currentStep + 1);
      setShowPressureDetail(false);
    }
  };

  // –ù–∞–∑–∞–¥
  const prevStep = () => {
    if (showPressureDetail) {
      setShowPressureDetail(false);
      return;
    }
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
  const canProceed = () => {
    switch (currentStep) {
      case 1: return profile.health.length > 0;
      case 2: return profile.activity !== '';
      case 3: return profile.interests.length > 0;
      case 4: return profile.age !== '';
      default: return false;
    }
  };

  if (!isVisible) return null;

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      style={{
        position: 'fixed',
        top: 0,
        left: 0,
        width: '100%',
        height: '100%',
        backgroundColor: 'rgba(0,0,0,0.8)',
        zIndex: 3000,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        padding: '20px',
        boxSizing: 'border-box'
      }}
    >
      <motion.div
        initial={{ scale: 0.7, opacity: 0, y: 50 }}
        animate={{ scale: 1, opacity: 1, y: 0 }}
        exit={{ scale: 0.7, opacity: 0, y: 50 }}
        transition={{ type: "spring", damping: 25, stiffness: 500 }}
        style={{
          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          borderRadius: '24px',
          maxWidth: '450px',
          width: '100%',
          color: 'white',
          overflow: 'hidden',
          boxShadow: '0 25px 80px rgba(0,0,0,0.4)',
          position: 'relative'
        }}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å */}
        <div style={{ padding: '24px 24px 0 24px' }}>
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginBottom: '16px'
          }}>
            <h2 style={{
              margin: 0,
              fontSize: '20px',
              fontWeight: '700',
              fontFamily: 'Montserrat, Arial, sans-serif'
            }}>
              –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
            </h2>
            <div style={{
              fontSize: '14px',
              opacity: 0.8,
              fontFamily: 'Montserrat, Arial, sans-serif'
            }}>
              {showPressureDetail ? '1' : currentStep}/4
            </div>
          </div>

          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
          <div style={{
            width: '100%',
            height: '4px',
            background: 'rgba(255,255,255,0.2)',
            borderRadius: '2px',
            overflow: 'hidden',
            marginBottom: '24px'
          }}>
            <motion.div
              style={{
                height: '100%',
                background: 'linear-gradient(90deg, #ffd700 0%, #ffed4e 100%)',
                borderRadius: '2px'
              }}
              initial={{ width: '25%' }}
              animate={{ 
                width: showPressureDetail ? '25%' : `${(currentStep / 4) * 100}%` 
              }}
              transition={{ duration: 0.3 }}
            />
          </div>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ */}
        <div style={{ 
          padding: '0 24px',
          minHeight: '320px',
          position: 'relative'
        }}>
          <AnimatePresence mode="wait">
            {/* –í–û–ü–†–û–° 1: –ó–î–û–†–û–í–¨–ï */}
            {currentStep === 1 && !showPressureDetail && (
              <motion.div
                key="health"
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.3 }}
              >
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  marginBottom: '8px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  ü©∫ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
                </h3>
                <p style={{
                  fontSize: '14px',
                  opacity: 0.8,
                  marginBottom: '20px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                </p>

                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                  {[
                    { id: 'meteosensitive', icon: 'ü©∫', label: '–ú–µ—Ç–µ–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å/–º–∏–≥—Ä–µ–Ω–∏' },
                    { id: 'pressure', icon: 'üíì', label: '–ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∞–≤–ª–µ–Ω–∏–µ–º' },
                    { id: 'asthma', icon: 'ü´Å', label: '–ê—Å—Ç–º–∞/–∞–ª–ª–µ—Ä–≥–∏–∏' },
                    { id: 'healthy', icon: 'üí™', label: '–û—Ç–ª–∏—á–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ' }
                  ].map((option) => (
                    <motion.button
                      key={option.id}
                      onClick={() => toggleMultiSelect('health', option.id)}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      style={{
                        display: 'flex',
                        alignItems: 'center',
                        gap: '12px',
                        padding: '16px',
                        border: 'none',
                        borderRadius: '12px',
                        background: profile.health.includes(option.id)
                          ? 'rgba(255, 215, 0, 0.2)'
                          : 'rgba(255,255,255,0.1)',
                        color: 'white',
                        fontSize: '16px',
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        cursor: 'pointer',
                        transition: 'all 0.2s',
                        border: profile.health.includes(option.id)
                          ? '2px solid #ffd700'
                          : '2px solid transparent'
                      }}
                    >
                      <span style={{ fontSize: '20px' }}>{option.icon}</span>
                      <span style={{ flex: 1, textAlign: 'left' }}>{option.label}</span>
                      {profile.health.includes(option.id) && (
                        <span style={{ fontSize: '16px' }}>‚úì</span>
                      )}
                    </motion.button>
                  ))}
                </div>
              </motion.div>
            )}

            {/* –î–ï–¢–ê–õ–ò –î–ê–í–õ–ï–ù–ò–Ø */}
            {currentStep === 1 && showPressureDetail && (
              <motion.div
                key="pressure-detail"
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.3 }}
              >
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  marginBottom: '8px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  üíì –ö–∞–∫–æ–µ —É –≤–∞—Å –¥–∞–≤–ª–µ–Ω–∏–µ?
                </h3>
                <p style={{
                  fontSize: '14px',
                  opacity: 0.8,
                  marginBottom: '20px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
                </p>

                {/* –¢–∏–ø –¥–∞–≤–ª–µ–Ω–∏—è */}
                <div style={{ marginBottom: '20px' }}>
                  <div style={{ display: 'flex', gap: '12px' }}>
                    {[
                      { id: 'high', label: '–í—ã—Å–æ–∫–æ–µ (–≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—è)', icon: 'üìà' },
                      { id: 'low', label: '–ù–∏–∑–∫–æ–µ (–≥–∏–ø–æ—Ç–æ–Ω–∏—è)', icon: 'üìâ' },
                      { id: 'normal', label: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ', icon: '‚úÖ' }
                    ].map((type) => (
                      <motion.button
                        key={type.id}
                        onClick={() => updateProfile('bloodPressure', { 
                          ...profile.bloodPressure, 
                          type: type.id 
                        })}
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        style={{
                          flex: 1,
                          padding: '12px 8px',
                          border: 'none',
                          borderRadius: '8px',
                          background: profile.bloodPressure.type === type.id
                            ? 'rgba(255, 215, 0, 0.2)'
                            : 'rgba(255,255,255,0.1)',
                          color: 'white',
                          fontSize: '12px',
                          fontFamily: 'Montserrat, Arial, sans-serif',
                          cursor: 'pointer',
                          border: profile.bloodPressure.type === type.id
                            ? '2px solid #ffd700'
                            : '2px solid transparent',
                          textAlign: 'center'
                        }}
                      >
                        <div style={{ fontSize: '16px', marginBottom: '4px' }}>
                          {type.icon}
                        </div>
                        {type.label}
                      </motion.button>
                    ))}
                  </div>
                </div>

                {/* –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è */}
                <div style={{ display: 'flex', gap: '16px', alignItems: 'center' }}>
                  <div style={{ flex: 1 }}>
                    <label style={{
                      display: 'block',
                      fontSize: '12px',
                      marginBottom: '8px',
                      opacity: 0.8,
                      fontFamily: 'Montserrat, Arial, sans-serif'
                    }}>
                      –í–µ—Ä—Ö–Ω–µ–µ
                    </label>
                    <input
                      type="number"
                      min="90"
                      max="200"
                      value={profile.bloodPressure.systolic}
                      onChange={(e) => updateProfile('bloodPressure', {
                        ...profile.bloodPressure,
                        systolic: parseInt(e.target.value) || 120
                      })}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: 'none',
                        borderRadius: '8px',
                        background: 'rgba(255,255,255,0.1)',
                        color: 'white',
                        fontSize: '16px',
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        textAlign: 'center',
                        boxSizing: 'border-box'
                      }}
                    />
                  </div>
                  <div style={{
                    fontSize: '20px',
                    fontWeight: 'bold',
                    opacity: 0.6
                  }}>
                    /
                  </div>
                  <div style={{ flex: 1 }}>
                    <label style={{
                      display: 'block',
                      fontSize: '12px',
                      marginBottom: '8px',
                      opacity: 0.8,
                      fontFamily: 'Montserrat, Arial, sans-serif'
                    }}>
                      –ù–∏–∂–Ω–µ–µ
                    </label>
                    <input
                      type="number"
                      min="50"
                      max="120"
                      value={profile.bloodPressure.diastolic}
                      onChange={(e) => updateProfile('bloodPressure', {
                        ...profile.bloodPressure,
                        diastolic: parseInt(e.target.value) || 80
                      })}
                      style={{
                        width: '100%',
                        padding: '12px',
                        border: 'none',
                        borderRadius: '8px',
                        background: 'rgba(255,255,255,0.1)',
                        color: 'white',
                        fontSize: '16px',
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        textAlign: 'center',
                        boxSizing: 'border-box'
                      }}
                    />
                  </div>
                </div>
              </motion.div>
            )}

            {/* –í–û–ü–†–û–° 2: –ê–ö–¢–ò–í–ù–û–°–¢–¨ */}
            {currentStep === 2 && (
              <motion.div
                key="activity"
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.3 }}
              >
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  marginBottom: '8px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  üèÉ –ö–∞–∫–∞—è —É –≤–∞—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å?
                </h3>
                <p style={{
                  fontSize: '14px',
                  opacity: 0.8,
                  marginBottom: '20px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
                </p>

                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                  {[
                    { id: 'outdoor_sports', icon: 'üèÉ', label: '–°–ø–æ—Ä—Ç –Ω–∞ —É–ª–∏—Ü–µ (–±–µ–≥, –≤–µ–ª–æ—Å–∏–ø–µ–¥)' },
                    { id: 'fitness', icon: 'üö∂', label: '–ü—Ä–æ–≥—É–ª–∫–∏/—Ñ–∏—Ç–Ω–µ—Å' },
                    { id: 'homebody', icon: 'üè†', label: '–î–æ–º–æ—Å–µ–¥' },
                    { id: 'with_children', icon: 'üë∂', label: '–° –¥–µ—Ç—å–º–∏' }
                  ].map((option) => (
                    <motion.button
                      key={option.id}
                      onClick={() => updateProfile('activity', option.id)}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      style={{
                        display: 'flex',
                        alignItems: 'center',
                        gap: '12px',
                        padding: '16px',
                        border: 'none',
                        borderRadius: '12px',
                        background: profile.activity === option.id
                          ? 'rgba(255, 215, 0, 0.2)'
                          : 'rgba(255,255,255,0.1)',
                        color: 'white',
                        fontSize: '16px',
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        cursor: 'pointer',
                        transition: 'all 0.2s',
                        border: profile.activity === option.id
                          ? '2px solid #ffd700'
                          : '2px solid transparent'
                      }}
                    >
                      <span style={{ fontSize: '20px' }}>{option.icon}</span>
                      <span style={{ flex: 1, textAlign: 'left' }}>{option.label}</span>
                      {profile.activity === option.id && (
                        <span style={{ fontSize: '16px' }}>‚úì</span>
                      )}
                    </motion.button>
                  ))}
                </div>
              </motion.div>
            )}

            {/* –í–û–ü–†–û–° 3: –ò–ù–¢–ï–†–ï–°–´ */}
            {currentStep === 3 && (
              <motion.div
                key="interests"
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.3 }}
              >
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  marginBottom: '8px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  üå± –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?
                </h3>
                <p style={{
                  fontSize: '14px',
                  opacity: 0.8,
                  marginBottom: '20px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                </p>

                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                  {[
                    { id: 'gardening', icon: 'üå±', label: '–î–∞—á–∞/—Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ' },
                    { id: 'travel', icon: 'üåç', label: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è' },
                    { id: 'photography', icon: 'üì∏', label: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏—Ä–æ–¥—ã' },
                    { id: 'work_only', icon: 'üè¢', label: '–¢–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏' }
                  ].map((option) => (
                    <motion.button
                      key={option.id}
                      onClick={() => toggleMultiSelect('interests', option.id)}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      style={{
                        display: 'flex',
                        alignItems: 'center',
                        gap: '12px',
                        padding: '16px',
                        border: 'none',
                        borderRadius: '12px',
                        background: profile.interests.includes(option.id)
                          ? 'rgba(255, 215, 0, 0.2)'
                          : 'rgba(255,255,255,0.1)',
                        color: 'white',
                        fontSize: '16px',
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        cursor: 'pointer',
                        transition: 'all 0.2s',
                        border: profile.interests.includes(option.id)
                          ? '2px solid #ffd700'
                          : '2px solid transparent'
                      }}
                    >
                      <span style={{ fontSize: '20px' }}>{option.icon}</span>
                      <span style={{ flex: 1, textAlign: 'left' }}>{option.label}</span>
                      {profile.interests.includes(option.id) && (
                        <span style={{ fontSize: '16px' }}>‚úì</span>
                      )}
                    </motion.button>
                  ))}
                </div>
              </motion.div>
            )}

            {/* –í–û–ü–†–û–° 4: –í–û–ó–†–ê–°–¢ */}
            {currentStep === 4 && (
              <motion.div
                key="age"
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -50 }}
                transition={{ duration: 0.3 }}
              >
                <h3 style={{
                  fontSize: '18px',
                  fontWeight: '600',
                  marginBottom: '8px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  üë® –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç?
                </h3>
                <p style={{
                  fontSize: '14px',
                  opacity: 0.8,
                  marginBottom: '20px',
                  fontFamily: 'Montserrat, Arial, sans-serif'
                }}>
                  –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                </p>

                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>
                  {[
                    { id: 'under_18', icon: 'üë∂', label: '–î–æ 18' },
                    { id: '18_35', icon: 'üë®', label: '18-35' },
                    { id: '35_55', icon: 'üë©', label: '35-55' },
                    { id: '55_plus', icon: 'üë¥', label: '55+' }
                  ].map((option) => (
                    <motion.button
                      key={option.id}
                      onClick={() => updateProfile('age', option.id)}
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      style={{
                        display: 'flex',
                        flexDirection: 'column',
                        alignItems: 'center',
                        gap: '8px',
                        padding: '20px 16px',
                        border: 'none',
                        borderRadius: '12px',
                        background: profile.age === option.id
                          ? 'rgba(255, 215, 0, 0.2)'
                          : 'rgba(255,255,255,0.1)',
                        color: 'white',
                        fontSize: '14px',
                        fontFamily: 'Montserrat, Arial, sans-serif',
                        cursor: 'pointer',
                        transition: 'all 0.2s',
                        border: profile.age === option.id
                          ? '2px solid #ffd700'
                          : '2px solid transparent'
                      }}
                    >
                      <span style={{ fontSize: '24px' }}>{option.icon}</span>
                      <span>{option.label}</span>
                      {profile.age === option.id && (
                        <span style={{ fontSize: '16px' }}>‚úì</span>
                      )}
                    </motion.button>
                  ))}
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div style={{
          padding: '0 24px 24px 24px',
          display: 'flex',
          gap: '12px',
          justifyContent: 'space-between'
        }}>
          {(currentStep > 1 || showPressureDetail) && (
            <motion.button
              onClick={prevStep}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              style={{
                padding: '12px 20px',
                background: 'rgba(255,255,255,0.2)',
                color: 'white',
                border: '1px solid rgba(255,255,255,0.3)',
                borderRadius: '12px',
                fontSize: '14px',
                fontFamily: 'Montserrat, Arial, sans-serif',
                cursor: 'pointer'
              }}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </motion.button>
          )}

          <motion.button
            onClick={currentStep === 4 ? handleComplete : nextStep}
            disabled={!canProceed() && !showPressureDetail}
            whileHover={canProceed() || showPressureDetail ? { scale: 1.05 } : {}}
            whileTap={canProceed() || showPressureDetail ? { scale: 0.95 } : {}}
            style={{
              flex: 1,
              padding: '16px',
              background: (canProceed() || showPressureDetail)
                ? 'linear-gradient(135deg, #ffd700 0%, #ffed4e 100%)'
                : 'rgba(255,255,255,0.1)',
              color: (canProceed() || showPressureDetail) ? '#1a1a1a' : 'rgba(255,255,255,0.5)',
              border: 'none',
              borderRadius: '12px',
              fontSize: '16px',
              fontWeight: '700',
              fontFamily: 'Montserrat, Arial, sans-serif',
              cursor: (canProceed() || showPressureDetail) ? 'pointer' : 'not-allowed',
              marginLeft: (currentStep === 1 && !showPressureDetail) ? 0 : 'auto'
            }}
          >
            {currentStep === 4 ? 'üéâ –ì–æ—Ç–æ–≤–æ!' : '–î–∞–ª–µ–µ ‚Üí'}
          </motion.button>
        </div>
      </motion.div>
    </motion.div>
  );
};

export default UserProfileModal;