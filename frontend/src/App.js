// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π App.js —Å WeatherCarousel –∏ —Å–∏—Å—Ç–µ–º–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ–º –±–ª–æ–∫–∞–º
import AdminPanel from './AdminPanel';
import React, { useState, useEffect } from "react";
import { ThemeProvider, createTheme } from "@mui/material/styles";
import CircularProgress from "@mui/material/CircularProgress";
import Button from "@mui/material/Button";
import { motion } from "framer-motion";
import AdBanner from "./AdBanner";
import WeatherCarousel from "./WeatherCarousel"; // üÜï –ù–û–í–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢
import CityDateInput from "./CityDateInput";
import ClothingRecommendations from "./ClothingRecommendations";
import QuickActions from "./QuickActions";
import AirQuality from "./AirQuality";
import UVIndex from "./UVIndex";
import WeatherAlerts from "./WeatherAlerts";
import { fetchWeather, fetchForecast, fetchAirQuality, fetchUVIndex } from "./weatherApi";
import { getCityByCoords } from "./geoApi";
import Astronomy from "./Astronomy";
import WeatherTrends from "./WeatherTrends";
import { 
  fetchWeatherFromBackend, 
  checkBackendHealth 
} from './backendApi';
import { canMakeRequest, recordRequest, getUsageStats, activatePremium } from './usageLimit';
import PremiumModal from './PremiumModal';
import UserProfileModal from "./UserProfileModal";
import HealthAlerts from "./HealthAlerts";
import ProfilePage from "./ProfilePage";
import SportAlerts from "./SportAlerts";

// –í—Å–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function CloudsEffect() {
  const getStableRandom = (index, seed = 1) => {
    return ((index * 9301 + 49297 + seed * 233280) % 233280) / 233280;
  };

  return (
    <>
      {/* –°–û–õ–ù–¶–ï –∑–∞ –≤—Å–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */}
      <motion.div
        style={{
          position: "absolute",
          right: "10%",
          top: "10%",
          width: 120,
          height: 120,
          borderRadius: "50%",
          background: "radial-gradient(circle, rgba(255, 223, 0, 0.8) 0%, rgba(255, 193, 7, 0.6) 50%, rgba(255, 235, 59, 0.3) 100%)",
          filter: "blur(15px)",
          opacity: 0.9,
          zIndex: 0, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø–æ–∑–∞–¥–∏ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
          pointerEvents: "none",
          boxShadow: "0 0 40px rgba(255, 223, 0, 0.4)"
        }}
        animate={{
          scale: [1, 1.15, 0.9, 1],
          opacity: [0.7, 1, 0.6, 0.7]
        }}
        transition={{
          duration: 6,
          repeat: Infinity,
          repeatType: "mirror",
          ease: "easeInOut"
        }}
      />

      {/* –°–æ–ª–Ω–µ—á–Ω—ã–µ –ª—É—á–∏ –∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */}
      {[...Array(12)].map((_, i) => (
        <motion.div
          key={`ray-${i}`}
          style={{
            position: "absolute",
            right: "23%",
            top: "25%",
            width: 2,
            height: 40 + getStableRandom(i, 10) * 30,
            background: "linear-gradient(180deg, rgba(255, 223, 0, 0.7) 0%, rgba(255, 235, 59, 0.4) 50%, transparent 100%)",
            transformOrigin: "bottom center",
            transform: `rotate(${i * 30}deg)`,
            filter: "blur(1px)",
            opacity: 0.8,
            zIndex: -1, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û
            pointerEvents: "none"
          }}
          animate={{
            scaleY: [0.6, 1.2, 0.8, 0.6],
            opacity: [0.5, 0.9, 0.4, 0.5]
          }}
          transition={{
            duration: 4 + i * 0.3,
            repeat: Infinity,
            delay: i * 0.2,
            repeatType: "mirror"
          }}
        />
      ))}

      {/* –û–ë–õ–ê–ö–ê –∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */}
      {[...Array(4)].map((_, i) => {
        const leftOffset = getStableRandom(i, 1) * 25;
        const topOffset = getStableRandom(i, 2) * 35;
        const widthOffset = getStableRandom(i, 3) * 60;
        const heightOffset = getStableRandom(i, 4) * 30;
        
        return (
          <motion.div
            key={i}
            style={{
              position: "absolute",
              left: `${i * 25 + leftOffset}%`,
              top: `${35 + i * 18 + topOffset}px`,
              width: 160 + i * 50 + widthOffset,
              height: 60 + i * 25 + heightOffset,
              background: "rgba(255, 255, 255, 0.95)",
              borderRadius: "50%",
              filter: "blur(10px)",
              opacity: 0.9,
              zIndex: 0, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: –º–µ–∂–¥—É —Ñ–æ–Ω–æ–º –≥–æ—Ä–æ–¥–∞ (-2) –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
              pointerEvents: "none",
              boxShadow: "inset 0 0 30px rgba(255, 255, 255, 0.5), 0 0 20px rgba(255, 255, 255, 0.3)"
            }}
            animate={{
              x: [0, 40 + i * 25, 0],
              scale: [1, 1.25, 0.85, 1],
              opacity: [0.7, 1, 0.6, 0.7]
            }}
            transition={{
              duration: 20 + i * 6,
              repeat: Infinity,
              repeatType: "mirror",
              ease: "easeInOut"
            }}
          />
        );
      })}

      {/* –ú–µ–ª–∫–∏–µ –æ–±–ª–∞—á–∫–∞ */}
      {[...Array(3)].map((_, i) => {
        const leftPos = 15 + getStableRandom(i, 6) * 65;
        const topPos = 10 + getStableRandom(i, 7) * 50;
        
        return (
          <motion.div
            key={`contrast-${i}`}
            style={{
              position: "absolute",
              left: `${leftPos}%`,
              top: `${topPos}%`,
              width: 80 + getStableRandom(i, 8) * 50,
              height: 35 + getStableRandom(i, 9) * 20,
              background: "rgba(255, 255, 255, 0.85)",
              borderRadius: "50%",
              filter: "blur(6px)",
              opacity: 0.8,
              zIndex: -1, // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û
              pointerEvents: "none",
              boxShadow: "0 0 15px rgba(255, 255, 255, 0.4)"
            }}
            animate={{
              x: [0, 25, 0],
              opacity: [0.6, 0.9, 0.5, 0.6],
              scale: [1, 1.1, 0.9, 1]
            }}
            transition={{
              duration: 12 + i * 3,
              repeat: Infinity,
              repeatType: "mirror",
              ease: "easeInOut",
              delay: i * 1.5
            }}
          />
        );
      })}
    </>
  );
}

function RainEffect() {
  return (
    <>
      {[...Array(18)].map((_, i) => {
        const isGlow = i % 3 === 0;
        return (
          <motion.div
            key={i}
            style={{
              position: "absolute",
              left: `${6 + Math.random() * 88}%`,
              top: `${-24 + Math.random() * 18}%`,
              width: 8 + Math.random() * 9,
              height: 28 + Math.random() * 20,
              background: isGlow
                ? "linear-gradient(180deg,#60a5fa88 0%,#38bdf8bb 100%)"
                : "rgba(92,160,240,0.20)",
              borderRadius: "40%",
              filter: isGlow ? "blur(3px)" : "blur(1.1px)",
              boxShadow: isGlow ? "0 0 16px 3px #38bdf8aa" : undefined,
              opacity: isGlow ? 0.5 : 0.32,
              zIndex: 99,
              pointerEvents: "none"
            }}
            animate={{
              y: ["0%", "128%"],
              opacity: [0.45, 0.63, 0]
            }}
            transition={{
              duration: 2.8 + Math.random() * 2.7,
              repeat: Infinity,
              delay: i * 0.23
            }}
          />
        );
      })}
    </>
  );
}

function SnowEffect() {
  return (
    <>
      {[...Array(20)].map((_, i) => {
        const isLight = i % 4 === 0;
        return (
          <motion.div
            key={i}
            style={{
              position: "absolute",
              left: `${2 + Math.random() * 95}%`,
              top: `${-14 + Math.random() * 14}%`,
              width: isLight ? 9 : 13 + Math.random() * 8,
              height: isLight ? 9 : 13 + Math.random() * 8,
              background: isLight
                ? "rgba(255,255,255,0.85)"
                : "rgba(255,255,255,0.65)",
              borderRadius: "50%",
              filter: isLight ? "blur(2px)" : "blur(3px)",
              opacity: isLight ? 0.7 : 0.5,
              zIndex: 99,
              pointerEvents: "none"
            }}
            animate={{
              y: ["0%", "110%"],
              x: [0, Math.random() * 40 - 20],
              opacity: [0.7, 0.9, 0]
            }}
            transition={{
              duration: 4 + Math.random() * 3,
              repeat: Infinity,
              delay: i * 0.3
            }}
          />
        );
      })}
    </>
  );
}

function SunEffect() {
  return (
    <>
      <motion.div
        style={{
          position: "absolute",
          right: "10%",
          top: "15%",
          width: 120,
          height: 120,
          borderRadius: "50%",
          background: "linear-gradient(135deg, #fbbf2488 0%, #f59e0b88 100%)",
          filter: "blur(30px)",
          opacity: 0.6,
          zIndex: 0,
          pointerEvents: "none"
        }}
        animate={{
          scale: [1, 1.09, 1.04, 1],
          opacity: [0.91, 0.99, 0.81, 0.91]
        }}
        transition={{
          duration: 5,
          repeat: Infinity,
          repeatType: "mirror"
        }}
      />
    </>
  );
}

function NightGlow() {
  return (
    <>
      <motion.div
        style={{
          position: "absolute",
          left: "9%",
          top: "-16%",
          width: "82%",
          height: 230,
          borderRadius: "50%",
          background: "linear-gradient(135deg, #29297a66 0%, #25284dbb 100%)",
          filter: "blur(40px)",
          opacity: 0.82,
          zIndex: 1,
          pointerEvents: "none"
        }}
        animate={{ scale: [1, 1.12, 0.93, 1] }}
        transition={{ duration: 17, repeat: Infinity, repeatType: "mirror" }}
      />
      <motion.div
        style={{
          position: "absolute",
          left: "62%",
          bottom: "-11%",
          width: 180,
          height: 120,
          borderRadius: "50%",
          background: "linear-gradient(135deg, #7d86c799 0%, #1a203bff 100%)",
          filter: "blur(44px)",
          opacity: 0.47,
          zIndex: 1,
          pointerEvents: "none"
        }}
        animate={{ scale: [1, 1.07, 0.98, 1] }}
        transition={{ duration: 23, repeat: Infinity, repeatType: "mirror" }}
      />
    </>
  );
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
const theme = createTheme({
  typography: { fontFamily: ['Montserrat'].join(',') },
});

async function getCityPhoto(city) {
  const ACCESS_KEY = process.env.REACT_APP_UNSPLASH_KEY;
  const url = `https://api.unsplash.com/photos/random?query=${encodeURIComponent(city)}%20landmark&orientation=landscape&client_id=${ACCESS_KEY}`;
  try {
    const res = await fetch(url);
    const data = await res.json();
    return data?.urls?.regular || null;
  } catch {
    return null;
  }
}

function isToday(date) {
  const today = new Date();
  return (
    date.getDate() === today.getDate() &&
    date.getMonth() === today.getMonth() &&
    date.getFullYear() === today.getFullYear()
  );
}

function findNearestForecast(forecastList, targetDate, targetHour) {
  const target = new Date(targetDate);
  target.setHours(targetHour, 0, 0, 0);

  const dayForecasts = forecastList.filter(item => {
    const itemDate = new Date(item.dt * 1000);
    return itemDate.getDate() === target.getDate() &&
           itemDate.getMonth() === target.getMonth() &&
           itemDate.getFullYear() === target.getFullYear();
  });

  if (dayForecasts.length === 0) {
    return null;
  }

  let minDiff = Infinity;
  let nearest = null;
  
  for (const item of dayForecasts) {
    const itemDate = new Date(item.dt * 1000);
    const diff = Math.abs(itemDate.getTime() - target.getTime());
    
    if (diff < minDiff) {
      minDiff = diff;
      nearest = item;
    }
  }

  return nearest;
}

function getBgGradient(desc, isNight) {
  if (!desc) return "linear-gradient(160deg, #7fcfff 0%, #e7e9fd 100%)";
  if (desc.toLowerCase().includes('—è—Å–Ω–æ')) return isNight 
    ? "linear-gradient(145deg, #1e293b 0%, #334155 50%, #475569 100%)"
    : "linear-gradient(160deg, #7fcfff 0%, #e7e9fd 100%)";
  if (desc.toLowerCase().match(/–æ–±–ª–∞—á|–ø–∞—Å–º—É—Ä|cloud/)) return "linear-gradient(180deg, #bfc9dc 0%, #dbe5fa 100%)";
  if (desc.toLowerCase().includes('–¥–æ–∂–¥')) return "linear-gradient(180deg, #6c7ba1 0%, #b1bfd8 100%)";
  if (desc.toLowerCase().includes('—Å–Ω–µ–≥')) return "linear-gradient(180deg, #e0f2fc 0%, #f2fafc 100%)";
  return "linear-gradient(160deg, #7fcfff 0%, #e7e9fd 100%)";
}

function App() {
  const [showAdminPanel, setShowAdminPanel] = useState(false);
  const [city, setCity] = useState("–ú–æ—Å–∫–≤–∞");
  const [date, setDate] = useState(new Date());
  const [weather, setWeather] = useState(null);
  const [forecastData, setForecastData] = useState([]); // üÜï –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –∫–∞—Ä—É—Å–µ–ª—å
  const [loading, setLoading] = useState(false);
  const [photoUrl, setPhotoUrl] = useState("");
  const [logoTop, setLogoTop] = useState(32);
  const [desc, setDesc] = useState("");
  const [isNight, setIsNight] = useState(false);
  const [favorites, setFavorites] = useState(() => {
    try {
      const saved = localStorage.getItem('weatherFavorites');
      return saved ? JSON.parse(saved) : [];
    } catch {
      return [];
    }
  });
  const [airQualityData, setAirQualityData] = useState(null);
  const [uvData, setUvData] = useState(null);
  const [coords, setCoords] = useState(null);
  const [initialDesc, setInitialDesc] = useState(""); // –î–ª—è —Ñ–æ–Ω–∞
  const [initialIsNight, setInitialIsNight] = useState(false); // –î–ª—è —Ñ–æ–Ω–∞
  const [selectedWeatherData, setSelectedWeatherData] = useState(null);
  const handleWeatherChange = (weatherData) => {
    setSelectedWeatherData(weatherData);
  };
  const [usageStats, setUsageStats] = useState(getUsageStats());
  const [showPremiumModal, setShowPremiumModal] = useState(false);
  const [premiumUser, setPremiumUser] = useState(getUsageStats().isPremium);
  const [userProfile, setUserProfile] = useState(null);
  const [showProfileModal, setShowProfileModal] = useState(false);
  const [showProfilePage, setShowProfilePage] = useState(false);

  // –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const handleShareWeather = (weather) => {
    const shareText = `üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤ ${weather.city}: ${weather.temp}¬∞, ${weather.desc.toLowerCase()}`;
    
    if (navigator.share) {
      navigator.share({
        title: 'EasyWeather',
        text: shareText,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(shareText).then(() => {
        alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
      }).catch(() => {
        alert(`${shareText}\n\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é`);
      });
    }
  };

  const handleSaveToFavorites = (cityName) => {
    const newFavorites = [...favorites];
    const index = newFavorites.indexOf(cityName);
    
    if (index > -1) {
      newFavorites.splice(index, 1);
      alert(`${cityName} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ`);
    } else {
      newFavorites.push(cityName);
      alert(`${cityName} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!`);
    }
    
    setFavorites(newFavorites);
    try {
      localStorage.setItem('weatherFavorites', JSON.stringify(newFavorites));
    } catch (e) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', e);
    }
  };

  const renderCityLabel = (
    <div style={{
      textAlign: "center",
      marginBottom: 10,
      color: "#1976d2", // Material-UI primary blue
      fontWeight: 600,
      fontSize: 18,
      letterSpacing: 0.5,
      zIndex: 50,
      fontFamily: "Montserrat, Arial, sans-serif",
    }}>
      –ì–æ—Ä–æ–¥
    </div>
  );
  
  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô DEV —Ö–æ—Ç–∫–µ–π –¥–ª—è App.js

useEffect(() => {
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ö–æ—Ç–∫–µ–π –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤ dev —Ä–µ–∂–∏–º–µ
    const handleDevReset = (e) => {
      // Ctrl + Shift + R = Full Reset (–æ–ø—Ä–æ—Å + –ø—Ä–µ–º–∏—É–º + –∏–∑–±—Ä–∞–Ω–Ω–æ–µ)
      if (e.ctrlKey && e.shiftKey && e.key === 'R') {
        e.preventDefault();
      
        if (window.confirm('üîÑ DEV RESET: –°–±—Ä–æ—Å–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ? (–æ–ø—Ä–æ—Å + –ø—Ä–µ–º–∏—É–º + –∏–∑–±—Ä–∞–Ω–Ω–æ–µ)')) {
          try {
            console.log('üõ†Ô∏è DEV: –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å...');
          
            // 1. –°–±—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            localStorage.removeItem('userProfile');
            setUserProfile(null);
            console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±—Ä–æ—à–µ–Ω');
          
            // 2. –ü–†–ê–í–ò–õ–¨–ù–´–ô —Å–±—Ä–æ—Å –ø—Ä–µ–º–∏—É–º–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á–∏ –∏–∑ usageLimit.js
            localStorage.removeItem('weatherUsage'); // –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á –ª–∏–º–∏—Ç–æ–≤
            localStorage.removeItem('weatherPremiumUser'); // –°—Ç–∞—Ä—ã–π –∫–ª—é—á (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
            localStorage.removeItem('weatherRequestCount'); // –°—Ç–∞—Ä—ã–π –∫–ª—é—á
            localStorage.removeItem('weatherLastRequestDate'); // –°—Ç–∞—Ä—ã–π –∫–ª—é—á
          
            setPremiumUser(false);
            setUsageStats(getUsageStats()); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            console.log('‚úÖ –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å —Å–±—Ä–æ—à–µ–Ω (weatherUsage —É–¥–∞–ª–µ–Ω)');
          
            // 3. –°–±—Ä–æ—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            localStorage.removeItem('weatherFavorites');
            setFavorites([]);
            console.log('‚úÖ –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ —Å–±—Ä–æ—à–µ–Ω—ã');
          
            // 4. –°–±—Ä–æ—Å –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            setWeather(null);
            setSelectedWeatherData(null);
            setForecastData([]);
            setAirQualityData(null);
            setUvData(null);
            console.log('‚úÖ –ü–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
          
            // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ä–æ—Å
            setShowProfileModal(true);
          
            console.log('üéâ DEV: –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω!');
            alert('üéâ DEV: –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω!\n\n‚úÖ –û–ø—Ä–æ—Å —Å–±—Ä–æ—à–µ–Ω\n‚úÖ –ü—Ä–µ–º–∏—É–º –æ—Ç–∫–ª—é—á–µ–Ω (5/5 –∑–∞–ø—Ä–æ—Å–æ–≤)\n‚úÖ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –æ—á–∏—â–µ–Ω–æ\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã');
          
          } catch (error) {
            console.error('‚ùå DEV: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ:', error);
            alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö');
          }
        }
      }
    
      // Ctrl + Shift + P = Reset —Ç–æ–ª—å–∫–æ Premium
      if (e.ctrlKey && e.shiftKey && e.key === 'P') {
        e.preventDefault();
      
        if (window.confirm('üíé DEV: –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å?')) {
          try {
            // –ü–†–ê–í–ò–õ–¨–ù–´–ô —Å–±—Ä–æ—Å - —É–¥–∞–ª—è–µ–º –∫–ª—é—á weatherUsage
            localStorage.removeItem('weatherUsage');
            localStorage.removeItem('weatherPremiumUser');
            localStorage.removeItem('weatherRequestCount');
            localStorage.removeItem('weatherLastRequestDate');
          
            setPremiumUser(false);
            setUsageStats(getUsageStats());
          
            console.log('üíé DEV: –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å —Å–±—Ä–æ—à–µ–Ω (weatherUsage –æ—á–∏—â–µ–Ω)');
            alert('üíé –ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å —Å–±—Ä–æ—à–µ–Ω! –¢–µ–ø–µ—Ä—å 5/5 –∑–∞–ø—Ä–æ—Å–æ–≤.');
          } catch (error) {
            console.error('‚ùå DEV: –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—Ä–µ–º–∏—É–º–∞:', error);
          }
        }
      }
    
      // Ctrl + Shift + U = Reset —Ç–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (e.ctrlKey && e.shiftKey && e.key === 'U') {
        e.preventDefault();
      
        if (window.confirm('üë§ DEV: –°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')) {
          try {
            localStorage.removeItem('userProfile');
            setUserProfile(null);
            setShowProfileModal(true);
          
            console.log('üë§ DEV: –û–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±—Ä–æ—à–µ–Ω');
            alert('üë§ –û–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±—Ä–æ—à–µ–Ω!');
          } catch (error) {
            console.error('‚ùå DEV: –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –æ–ø—Ä–æ—Å–∞:', error);
          }
        }
      }
    
      // Ctrl + Shift + L = –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–ª—é—á–∏ localStorage (debug)
      if (e.ctrlKey && e.shiftKey && e.key === 'L') {
        e.preventDefault();
      
        console.log('üîç DEV: –í—Å–µ –∫–ª—é—á–∏ localStorage:');
        for (let i = 0; i < localStorage.length; i++) {
          const key = localStorage.key(i);
          const value = localStorage.getItem(key);
          console.log(`${key}:`, value);
        }
      
        const usage = getUsageStats();
        console.log('üìä –¢–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã:', usage);
      }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Ö–æ—Ç–∫–µ–∏ —Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ
    if (process.env.NODE_ENV === 'development') {
      window.addEventListener('keydown', handleDevReset);
    
      // –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
      window.devReset = {
        all: () => {
          localStorage.clear();
          window.location.reload();
          console.log('üî• DEV: –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê + –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞');
        },
      
        user: () => {
          localStorage.removeItem('userProfile');
          setUserProfile(null);
          setShowProfileModal(true);
          console.log('üë§ DEV: –û–ø—Ä–æ—Å —Å–±—Ä–æ—à–µ–Ω');
        },
      
        premium: () => {
          localStorage.removeItem('weatherUsage'); // –ì–õ–ê–í–ù–´–ô –∫–ª—é—á!
          localStorage.removeItem('weatherPremiumUser');
          localStorage.removeItem('weatherRequestCount');
          localStorage.removeItem('weatherLastRequestDate');
          setPremiumUser(false);
          setUsageStats(getUsageStats());
          console.log('üíé DEV: –ü—Ä–µ–º–∏—É–º —Å–±—Ä–æ—à–µ–Ω (–ª–∏–º–∏—Ç 5/5)');
        },
      
        favorites: () => {
          localStorage.removeItem('weatherFavorites');
          setFavorites([]);
          console.log('‚≠ê DEV: –ò–∑–±—Ä–∞–Ω–Ω–æ–µ —Å–±—Ä–æ—à–µ–Ω–æ');
        },
      
        // –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        debug: () => {
          console.log('üîç DEV DEBUG:');
          console.log('localStorage keys:', Object.keys(localStorage));
          console.log('usageStats:', getUsageStats());
          console.log('weatherUsage:', localStorage.getItem('weatherUsage'));
          console.log('premiumUser state:', premiumUser);
        }
      };
    
      // –ö—Ä–∞—Å–∏–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
      console.log(`
  üõ†Ô∏è DEV MODE –ê–ö–¢–ò–í–ò–†–û–í–ê–ù! 
    
  üìã –•–û–¢–ö–ï–ò:
  ‚Ä¢ Ctrl+Shift+R = üîÑ –ü–û–õ–ù–´–ô –°–ë–†–û–° (–æ–ø—Ä–æ—Å + –ø—Ä–µ–º–∏—É–º + –∏–∑–±—Ä–∞–Ω–Ω–æ–µ)
  ‚Ä¢ Ctrl+Shift+P = üíé –°–±—Ä–æ—Å —Ç–æ–ª—å–∫–æ –ø—Ä–µ–º–∏—É–º–∞  
  ‚Ä¢ Ctrl+Shift+U = üë§ –°–±—Ä–æ—Å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–æ—Å–∞
  ‚Ä¢ Ctrl+Shift+L = üîç –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–ª—é—á–∏ localStorage

  üíª –ö–û–ù–°–û–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´:
  ‚Ä¢ devReset.all()       - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ + –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
  ‚Ä¢ devReset.user()      - –°–±—Ä–æ—Å –æ–ø—Ä–æ—Å–∞
  ‚Ä¢ devReset.premium()   - –°–±—Ä–æ—Å –ø—Ä–µ–º–∏—É–º–∞ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ!)
  ‚Ä¢ devReset.favorites() - –°–±—Ä–æ—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  ‚Ä¢ devReset.debug()     - –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

  üêõ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–ª—é—á 'weatherUsage'
      `);
    
      return () => window.removeEventListener('keydown', handleDevReset);
    }
  }, [setUserProfile, setShowProfileModal, setPremiumUser, setUsageStats, setFavorites, setWeather, setSelectedWeatherData, setForecastData, setAirQualityData, setUvData, premiumUser]);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º DEV —Å—Ç–∞—Ç—É—Å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      document.title = 'üõ†Ô∏è DEV | EasyWeather';
    }
  }, []);

  useEffect(() => {
    function handleResize() {
      setLogoTop(window.innerHeight < 500 ? 8 : 32);
    }
    handleResize();
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  useEffect(() => {
    if (weather?.city) { // ‚Üê –î–æ–±–∞–≤–∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É
      getCityPhoto(weather.city).then(setPhotoUrl);
    }
  }, [weather?.city]);

  useEffect(() => {
    const savedProfile = localStorage.getItem('userProfile');
    if (savedProfile) {
      setUserProfile(JSON.parse(savedProfile));
    } else {
      setShowProfileModal(true); // –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ä–æ—Å
    }
  }, []);

  // üîß –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ü–û–ì–û–î–´
  const handleShowWeather = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –ü–ï–†–ï–î –∑–∞–ø—Ä–æ—Å–æ–º
    const requestCheck = canMakeRequest();
  
    if (!requestCheck.canMake) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Premium modal –µ—Å–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω
      setShowPremiumModal(true);
      return;
    }

    setLoading(true);
    recordRequest();
    setUsageStats(getUsageStats());

    try {
      if (isToday(date)) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
        const data = await fetchWeatherFromBackend(city);
        const details = {
          feels: Math.round(data.main.feels_like),
          pressure: Math.round(data.main.pressure * 0.750062),
          humidity: data.main.humidity,
          wind: `${Math.round(data.wind.speed)} –º/—Å`
        };

        const currentWeather = {
          city: data.name,
          temp: Math.round(data.main.temp),
          desc: data.weather[0].description[0].toUpperCase() + data.weather[0].description.slice(1),
          icon: `https://openweathermap.org/img/wn/${data.weather[0].icon}@4x.png`,
          details
        };

        setWeather(currentWeather);
        setSelectedWeatherData(currentWeather); // üÜï –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        setInitialDesc(data.weather[0].description);
        setInitialIsNight(data.weather[0].icon.includes("n"));

        if (data.coord) {
          setCoords({ lat: data.coord.lat, lon: data.coord.lon });
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—á–∞—Å–æ–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑
        const { list: forecastList } = await fetchForecast(city);
        setForecastData(forecastList); // üÜï –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏

        // –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        try {
          const airData = await fetchAirQuality(city);
          setAirQualityData(airData);
        } catch (e) {
          console.error('Air quality error:', e);
          setAirQualityData(null);
        }

        try {
          const uvIndexData = await fetchUVIndex(city);
          setUvData(uvIndexData);
        } catch (e) {
          console.error('UV index error:', e);
          setUvData(null);
        }

      } else {
        // –õ–æ–≥–∏–∫–∞ –¥–ª—è –±—É–¥—É—â–∏—Ö –¥–∞—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        const { list: forecastList } = await fetchForecast(city);
        const now = new Date();
        const targetHour = now.getHours();
        const mainForecast = findNearestForecast(forecastList, date, targetHour);
        
        if (mainForecast) {
          const forecastWeather = {
            city: city,
            temp: Math.round(mainForecast.main.temp),
            desc: mainForecast.weather[0].description[0].toUpperCase() + mainForecast.weather[0].description.slice(1),
            icon: `https://openweathermap.org/img/wn/${mainForecast.weather[0].icon}@4x.png`,
            details: {
              feels: Math.round(mainForecast.main.feels_like),
              pressure: Math.round(mainForecast.main.pressure * 0.750062),
              humidity: mainForecast.main.humidity,
              wind: `${Math.round(mainForecast.wind.speed)} –º/—Å`
            }
          };
          
          setWeather(forecastWeather);
          setSelectedWeatherData(forecastWeather);
          setForecastData(forecastList);
        }
        
        setDesc(mainForecast?.weather?.[0]?.description || "");
        setIsNight(mainForecast?.weather?.[0]?.icon?.includes("n") || false);
      }
    } catch (e) {
      console.error('Weather error:', e);
      alert("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: " + e.message);
    }
    setLoading(false);
  };

  // –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ handleShowWeather)
  const handleGeoWeather = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –ü–ï–†–ï–î –∑–∞–ø—Ä–æ—Å–æ–º
    const requestCheck = canMakeRequest();

    if (!requestCheck.canMake) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º Premium modal –µ—Å–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω
      setShowPremiumModal(true);
      return;
    }

    if (!navigator.geolocation) {
      alert("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º");
      return;
    }
  
  setLoading(true);
  recordRequest();
  setUsageStats(getUsageStats());
    navigator.geolocation.getCurrentPosition(
      async (position) => {
        const lat = position.coords.latitude;
        const lon = position.coords.longitude;
        try {
          const data = await fetchWeather({ lat, lon });
          const details = {
            feels: Math.round(data.main.feels_like),
            pressure: Math.round(data.main.pressure * 0.750062),
            humidity: data.main.humidity,
            wind: `${Math.round(data.wind.speed)} –º/—Å`
          };

          setCity(data.name);

          const currentWeather = {
            city: data.name,
            temp: Math.round(data.main.temp),
            desc: data.weather[0].description[0].toUpperCase() + data.weather[0].description.slice(1),
            icon: `https://openweathermap.org/img/wn/${data.weather[0].icon}@4x.png`,
            details
          };

          setWeather(currentWeather);
          setSelectedWeatherData(currentWeather);
          setDesc(data.weather[0].description);
          setIsNight(data.weather[0].icon.includes("n"));
          setCoords({ lat, lon });

          const { list: forecastList } = await fetchForecast({ lat, lon });
          setForecastData(forecastList);

          try {
            const airData = await fetchAirQuality({ lat, lon });
            setAirQualityData(airData);
          } catch (e) {
            console.error('Air quality error:', e);
            setAirQualityData(null);
          }

          try {
            const uvIndexData = await fetchUVIndex({ lat, lon });
            setUvData(uvIndexData);
          } catch (e) {
            console.error('UV index error:', e);
            setUvData(null);
          }

        } catch (error) {
          console.error('Geo weather error:', error);
          setWeather({ 
            city: "?", 
            temp: '--', 
            desc: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏', 
            icon: '', 
            details: {} 
          });
          setForecastData([]);
          setPhotoUrl(null);
        } finally {
          setLoading(false);
        }
      },
      (error) => {
        console.error('Geolocation error:', error);
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é: " + error.message);
        setLoading(false);
      }
    );
  };

  // üÜï –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤
  const activeWeatherData = selectedWeatherData || weather;
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  const renderUsageIndicator = () => {
    if (premiumUser) {
      return (
        <motion.div
          style={{
            position: 'absolute',
            top: logoTop + 50, // –ù–∞ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ —á—Ç–æ –∏ –ª–æ–≥–æ—Ç–∏–ø
            right: '20px',
            background: 'linear-gradient(135deg, #ffd700 0%, #ffed4e 100%)',
            color: '#1a1a1a',
            padding: '8px 16px',
            borderRadius: '20px',
            fontSize: '12px',
            fontWeight: '600',
            fontFamily: 'Montserrat, Arial, sans-serif',
            zIndex: 100,
            boxShadow: '0 4px 15px rgba(255, 215, 0, 0.3)'
          }}
          initial={{ scale: 0, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          transition={{ delay: 1 }}
        >
          üíé Premium
        </motion.div>
      );
    }

    const percentage = usageStats.percentage;
    const isLow = usageStats.remaining <= 1;
  
    return (
      <motion.div
        style={{
          position: 'absolute',
          top: logoTop + 50, // –ù–∞ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ —á—Ç–æ –∏ –ª–æ–≥–æ—Ç–∏–ø
          right: '20px',
          background: isLow 
            ? 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)'
            : 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)',
          color: 'white',
          padding: '8px 16px',
          borderRadius: '20px',
          fontSize: '12px',
          fontWeight: '600',
          fontFamily: 'Montserrat, Arial, sans-serif',
          zIndex: 100,
          boxShadow: '0 4px 15px rgba(59, 130, 246, 0.3)',
          cursor: isLow ? 'pointer' : 'default'
        }}
        initial={{ scale: 0, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ delay: 1 }}
        onClick={isLow ? () => setShowPremiumModal(true) : undefined}
        whileHover={isLow ? { scale: 1.05 } : {}}
      >
        {isLow && 'üî• '}
        {usageStats.remaining}/{usageStats.limit} –∑–∞–ø—Ä–æ—Å–æ–≤
      </motion.div>
    );
  };

  return (
    <ThemeProvider theme={theme}>
      <motion.div
        key={desc + (isNight ? 'night' : 'day')}
        style={{
          minHeight: '100vh',
          paddingTop: "max(36px, env(safe-area-inset-top))",
          paddingBottom: 120,
          position: "relative",
          overflow: "hidden",
          fontFamily: 'Montserrat, Arial, sans-serif'
        }}
        animate={{ background: getBgGradient(initialDesc, initialIsNight) }}
        transition={{ duration: 1.2 }}
      >
        {/* –§–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
        {photoUrl && (
          <div
            style={{
              position: "absolute",
              zIndex: -2,
              top: 0, left: 0, width: "100vw", height: "100vh",
              backgroundImage: `url(${photoUrl})`,
              backgroundSize: "cover",
              backgroundPosition: "center",
              opacity: 0.14,
              filter: "blur(2.2px)",
              pointerEvents: "none"
            }}
          />
        )}

        {initialDesc && initialDesc.toLowerCase().match(/–æ–±–ª–∞—á|–ø–∞—Å–º—É—Ä|cloud/) && <CloudsEffect />}
        {initialDesc && initialDesc.toLowerCase().includes('–¥–æ–∂–¥') && <RainEffect />}
        {initialDesc && initialDesc.toLowerCase().includes('—Å–Ω–µ–≥') && <SnowEffect />}
        {initialDesc && initialDesc.toLowerCase().includes('—è—Å–Ω–æ') && !initialIsNight && <SunEffect />}
        {initialIsNight && <NightGlow />}

        {/* –õ–æ–≥–æ—Ç–∏–ø */}
        <motion.img
          src="/logo.png"
          alt="EasyWeather"
          style={{
            display: "block",
            position: "relative",
            margin: `${logoTop}px auto 16px`,
            width: 130,
            maxWidth: "80vw",
            zIndex: 99,
            height: "auto"
          }}
          animate={{
            scale: [1, 1.08, 0.97, 1],
            rotate: [0, 4, -2, 0],
            y: [0, -7, 0, 3, 0]
          }}
          transition={{
            duration: 3.8,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />

        {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
        <motion.div
          initial="hidden"
          animate="visible"
          variants={{
            hidden: { opacity: 0, y: 20 },
            visible: {
              opacity: 1,
              y: 0,
              transition: { staggerChildren: 0.22 }
            }
          }}
          style={{ maxWidth: 340, margin: "0px auto 0", textAlign: 'center', zIndex: 99 }}
        >
          <motion.div variants={{ hidden: { opacity: 0, y: 20 }, visible: { opacity: 1, y: 0 } }}>
            {renderCityLabel}
            <CityDateInput
              city={city}
              setCity={setCity}
              date={date}
              setDate={setDate}
              disabled={loading}
            />
          </motion.div>

          <motion.div variants={{ hidden: { opacity: 0, y: 20 }, visible: { opacity: 1, y: 0 } }}>
            <Button
              variant="contained"
              color="primary"
              fullWidth
              onClick={handleShowWeather}
              disabled={loading}
              sx={{
                marginTop: 1,
                marginBottom: 0,
                borderRadius: 3,
                height: 46,
                fontSize: 20,
                fontWeight: 500,
                textTransform: "none",
                fontFamily: "Montserrat, Arial, sans-serif"
              }}
            >
              {loading ? <CircularProgress color="inherit" size={24} /> : '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É'}
            </Button>
          </motion.div>
          <motion.div variants={{ hidden: { opacity: 0, y: 20 }, visible: { opacity: 1, y: 0 } }}>
            <Button
              variant="text"
              color="secondary"
              fullWidth
              sx={{
                mt: 1,
                color: "#fff",
                borderRadius: 3,
                fontSize: 20,
                fontWeight: 500,
                textTransform: "none",
                height: 46,
                fontFamily: "Montserrat, Arial, sans-serif",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                textShadow: "0 2px 8px rgba(0,0,0,0.37), 0 0 1px #fff",
                gap: 1,
              }}
              onClick={handleGeoWeather}
              disabled={loading}
            >
              <span>–ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏</span>
              <svg
                style={{ marginLeft: 8, minWidth: 22 }}
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <circle cx="12" cy="12" r="3.5" stroke="white" strokeWidth="1.7"/>
                <circle cx="12" cy="12" r="8" stroke="white" strokeWidth="1.7"/>
                <circle cx="12" cy="12" r="1.7" fill="#2498dc"/>
              </svg>
            </Button>
          </motion.div>
        </motion.div>
        
        {/* –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø */}
{favorites.length > 0 && (
  <motion.div
    style={{
      margin: "20px auto 0",
      maxWidth: 340,
      width: "100%"
    }}
    initial={{ opacity: 0, y: 20 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.6, delay: 0.5 }}
  >
    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
    <div style={{
      textAlign: "center",
      marginBottom: 12,
      color: "#fff",
      fontWeight: 600,
      fontSize: 16,
      letterSpacing: 0.3,
      textShadow: "0 2px 8px rgba(0,0,0,0.57), 0 0 1px #fff",
      fontFamily: "Montserrat, Arial, sans-serif",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      gap: 8
    }}>
      <span style={{ fontSize: 18 }}>‚≠ê</span>
      –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
      </div>

      {/* –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ */}
      <div style={{
        display: "flex",
        flexDirection: "column",
        gap: 8
      }}>
        {favorites.map((favCity, index) => (
          <motion.div
            key={favCity}
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: index * 0.1 + 0.6 }}
            style={{
              background: "rgba(255, 255, 255, 0.9)",
              borderRadius: 15,
              padding: "12px 16px",
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between",
              backdropFilter: "blur(10px)",
              boxShadow: "0 4px 15px rgba(0,0,0,0.1)",
              border: "1px solid rgba(255,255,255,0.2)"
            }}
          >
            {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∏–∫–æ–Ω–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ */}
            <motion.div
              style={{
                display: "flex",
                alignItems: "center",
                gap: 12,
                flex: 1,
                cursor: "pointer"
              }}
              onClick={() => {
                setCity(favCity);
                handleShowWeather();
              }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
            >
              <div style={{
                width: 36,
                height: 36,
                borderRadius: 12,
                background: "linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%)",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                fontSize: 18,
                boxShadow: "0 4px 12px rgba(251, 191, 36, 0.3)"
              }}>
                ‚≠ê
              </div>
              <div style={{
                fontFamily: "Montserrat, Arial, sans-serif",
                fontSize: 16,
                fontWeight: 600,
                color: "#374151"
              }}>
                {favCity}
              </div>
            </motion.div>

            {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div style={{
              display: "flex",
              gap: 8,
              alignItems: "center"
            }}>
              {/* –ö–Ω–æ–ø–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
              <motion.button
                onClick={(e) => {
                  e.stopPropagation();
                  setCity(favCity);
                  handleShowWeather();
                }}
                style={{
                  width: 32,
                  height: 32,
                  borderRadius: 8,
                  background: "linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%)",
                  border: "none",
                  color: "white",
                  fontSize: 14,
                  cursor: "pointer",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 8px rgba(59, 130, 246, 0.3)"
                }}
                whileHover={{ scale: 1.1 }}
                whileTap={{ scale: 0.9 }}
                title="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É"
              >
                üëÅÔ∏è
              </motion.button>

              {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
              <motion.button
                onClick={(e) => {
                  e.stopPropagation();
                  const newFavorites = favorites.filter(city => city !== favCity);
                  setFavorites(newFavorites);
                  try {
                    localStorage.setItem('weatherFavorites', JSON.stringify(newFavorites));
                  } catch (e) {
                    console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', e);
                  }
                }}
                style={{
                  width: 32,
                  height: 32,
                  borderRadius: 8,
                  background: "linear-gradient(135deg, #ef4444 0%, #dc2626 100%)",
                  border: "none",
                  color: "white",
                  fontSize: 12,
                  cursor: "pointer",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 8px rgba(239, 68, 68, 0.3)"
                }}
                whileHover={{ scale: 1.1, rotate: 5 }}
                whileTap={{ scale: 0.9 }}
                title="–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
              >
                üóëÔ∏è
              </motion.button>
            </div>
          </motion.div>
        ))}
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
      <motion.div
        style={{
          textAlign: "center",
          marginTop: 12,
          fontSize: 12,
          color: "rgba(255,255,255,0.8)",
          fontFamily: "Montserrat, Arial, sans-serif"
        }}
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 1 }}
      >
        üëÅÔ∏è –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä ‚Ä¢ üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
      </motion.div>
    </motion.div>
  )}

        <div style={{ height: 24 }} />

        {/* üÜï –ù–û–í–ê–Ø –ö–ê–†–£–°–ï–õ–¨ –ò –ë–õ–û–ö–ò –° –î–ê–ù–ù–´–ú–ò */}
        {weather && (
          <div style={{ 
            marginTop: "-15px",
            paddingBottom: "16px"
          }}>
            {/* üÜï –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ö–ê–†–£–°–ï–õ–¨ –í–ú–ï–°–¢–û WeatherCard */}
            <WeatherCarousel 
              city={weather.city}
              temp={weather.temp}
              desc={weather.desc}
              icon={weather.icon}
              details={weather.details}
              forecastData={forecastData}
              photoUrl={photoUrl}
              onWeatherChange={handleWeatherChange}
            />

            {/* –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã */}
            {activeWeatherData && (
              <HealthAlerts 
                weather={activeWeatherData}
                userProfile={userProfile}
                forecastData={forecastData}
              />
            )}
            
            {/* –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã */}
            {activeWeatherData && userProfile && (
              <SportAlerts 
                weather={activeWeatherData}
                userProfile={userProfile}
                forecastData={forecastData}
                uvData={uvData}
              />
            )}

            {/* üÜï –í–°–ï –ë–õ–û–ö–ò –ü–û–õ–£–ß–ê–Æ–¢ –î–ê–ù–ù–´–ï –ò–ó –í–´–ë–†–ê–ù–ù–û–ì–û –í–†–ï–ú–ï–ù–ò */}
            <WeatherAlerts 
              weather={activeWeatherData}
              airQuality={airQualityData}
              uvData={uvData}
              forecast={forecastData}
            />

            <ClothingRecommendations 
              temp={activeWeatherData?.temp || 0}
              desc={activeWeatherData?.desc || ""}
              humidity={activeWeatherData?.details?.humidity}
              windSpeed={parseFloat(activeWeatherData?.details?.wind?.replace(' –º/—Å', '') || '0')}
              isNight={isNight}
              forecastData={forecastData}
              userProfile={userProfile} // ‚Üê –î–û–ë–ê–í–ò–¢–¨ –≠–¢–£ –°–¢–†–û–ö–£
            />

            <AirQuality airQualityData={airQualityData} />

            <UVIndex uvData={uvData} isNight={isNight} />

            <Astronomy 
              weatherData={weather} 
              coords={coords}
              date={date}
            />
            
            <WeatherTrends weather={activeWeatherData} />

            <QuickActions 
              weather={activeWeatherData}
              onShareWeather={handleShareWeather}
              onSaveToFavorites={handleSaveToFavorites}
              onOpenAdminPanel={() => setShowAdminPanel(true)}
              onOpenProfile={() => setShowProfilePage(true)} // –ù–æ–≤—ã–π –ø—Ä–æ–ø—Å
              userProfile={userProfile} // –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            />
          </div>
        )}

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
        {renderUsageIndicator()}

        {/* Premium Modal */}
        <PremiumModal 
          isVisible={showPremiumModal}
          onClose={() => setShowPremiumModal(false)}
          onUpgrade={() => {
            activatePremium();
            setPremiumUser(true);
            setUsageStats(getUsageStats());
            setShowPremiumModal(false);
            alert('üéâ Premium –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–π –ø–æ–≥–æ–¥—ã!');
          }}
          usageStats={usageStats}
        />

        {/* Premium Modal */}
        <PremiumModal 
          isVisible={showPremiumModal}
          onClose={() => setShowPremiumModal(false)}
          onUpgrade={() => {
            activatePremium();
            setPremiumUser(true);
            setUsageStats(getUsageStats());
            setShowPremiumModal(false);
            alert('üéâ Premium –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–π –ø–æ–≥–æ–¥—ã!');
          }}
          usageStats={usageStats}
        />

        {/* üÜï –î–û–ë–ê–í–¨–¢–ï –≠–¢–û–¢ –ë–õ–û–ö: */}
        <UserProfileModal 
          isVisible={showProfileModal}
          onComplete={(profile) => {
            setUserProfile(profile);
            setShowProfileModal(false);
            console.log('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', profile);
          }}
          onClose={() => {
            setShowProfileModal(false);
            console.log('–û–ø—Ä–æ—Å –ø—Ä–æ–ø—É—â–µ–Ω - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–π—Ç–∏ –µ–≥–æ –ø–æ–∑–∂–µ');
          }}
        />

        <AdBanner isPremium={premiumUser} />
        {/* –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
        <AdminPanel 
          isVisible={showAdminPanel} 
          onClose={() => setShowAdminPanel(false)} 
        />
        {/* Profile Page */}
        {showProfilePage && (
          <ProfilePage 
            userProfile={userProfile}
            onStartSurvey={() => {
              setShowProfilePage(false);
              setShowProfileModal(true);
            }}
            onClose={() => setShowProfilePage(false)}
          />
        )}
        
      </motion.div>
    </ThemeProvider>
  );
}

export default App;















