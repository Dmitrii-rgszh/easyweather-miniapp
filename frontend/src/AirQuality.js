// –ó–∞–º–µ–Ω–∏—Ç–µ –≤–µ—Å—å —Ñ–∞–π–ª frontend/src/AirQuality.js –Ω–∞ —ç—Ç–æ—Ç –∫–æ–¥:

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞
function getAirQualityInfo(aqi) {
  switch (aqi) {
    case 1:
      return {
        level: "–û—Ç–ª–∏—á–Ω–æ–µ",
        color: "#10b981",
        bgColor: "#10b98120",
        icon: "üü¢",
        description: "–í–æ–∑–¥—É—Ö —á–∏—Å—Ç—ã–π –∏ —Å–≤–µ–∂–∏–π",
        advice: "–ò–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫ –∏ —Å–ø–æ—Ä—Ç–∞ –Ω–∞ —É–ª–∏—Ü–µ!"
      };
    case 2:
      return {
        level: "–•–æ—Ä–æ—à–µ–µ",
        color: "#84cc16",
        bgColor: "#84cc1620",
        icon: "üü¢",
        description: "–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ –ø—Ä–∏–µ–º–ª–µ–º–æ–µ",
        advice: "–ú–æ–∂–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
      };
    case 3:
      return {
        level: "–£–º–µ—Ä–µ–Ω–Ω–æ–µ",
        color: "#f59e0b",
        bgColor: "#f59e0b20",
        icon: "üü°",
        description: "–£–º–µ—Ä–µ–Ω–Ω–æ–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ",
        advice: "–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –ª—é–¥—è–º —Å—Ç–æ–∏—Ç –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ"
      };
    case 4:
      return {
        level: "–ü–ª–æ—Ö–æ–µ",
        color: "#ef4444",
        bgColor: "#ef444420",
        icon: "üü†",
        description: "–ù–µ–∑–¥–æ—Ä–æ–≤—ã–π –≤–æ–∑–¥—É—Ö",
        advice: "–ò–∑–±–µ–≥–∞–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—É–ª–æ–∫, –æ—Å–æ–±–µ–Ω–Ω–æ –¥–µ—Ç—è–º –∏ –ø–æ–∂–∏–ª—ã–º"
      };
    case 5:
      return {
        level: "–û—á–µ–Ω—å –ø–ª–æ—Ö–æ–µ",
        color: "#dc2626",
        bgColor: "#dc262620",
        icon: "üî¥",
        description: "–û–ø–∞—Å–Ω–æ–µ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ",
        advice: "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –¥–æ–º–∞, –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–µ–ª–∏ –≤–æ–∑–¥—É—Ö–∞"
      };
    default:
      return {
        level: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        color: "#6b7280",
        bgColor: "#6b728020",
        icon: "‚ùì",
        description: "–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
        advice: ""
      };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≥—Ä—è–∑–Ω–∏—Ç–µ–ª–µ–π
function getPollutantsInfo(components) {
  const pollutants = [
    { 
      name: "CO", 
      value: components.co, 
      unit: "Œºg/m¬≥", 
      description: "–£–≥–∞—Ä–Ω—ã–π –≥–∞–∑",
      dangerous: components.co > 10000
    },
    { 
      name: "NO‚ÇÇ", 
      value: components.no2, 
      unit: "Œºg/m¬≥", 
      description: "–î–∏–æ–∫—Å–∏–¥ –∞–∑–æ—Ç–∞",
      dangerous: components.no2 > 200
    },
    { 
      name: "O‚ÇÉ", 
      value: components.o3, 
      unit: "Œºg/m¬≥", 
      description: "–û–∑–æ–Ω",
      dangerous: components.o3 > 180
    },
    { 
      name: "PM2.5", 
      value: components.pm2_5, 
      unit: "Œºg/m¬≥", 
      description: "–ú–µ–ª–∫–∏–µ —á–∞—Å—Ç–∏—Ü—ã",
      dangerous: components.pm2_5 > 25
    }
  ];

  return pollutants.filter(p => p.value > 0);
}

// SVG —Å—Ç—Ä–µ–ª–∫–∞
const ChevronIcon = ({ isOpen }) => (
  <motion.svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    animate={{ rotate: isOpen ? 180 : 0 }}
    transition={{ duration: 0.3 }}
    style={{ color: "#6b7280" }}
  >
    <path
      d="M6 9L12 15L18 9"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </motion.svg>
);

export default function AirQuality({ airQualityData }) {
  const [isExpanded, setIsExpanded] = useState(false);

  if (!airQualityData || !airQualityData.list || airQualityData.list.length === 0) {
    return null;
  }

  const currentAir = airQualityData.list[0];
  const aqi = currentAir.main.aqi;
  const components = currentAir.components;
  
  const airInfo = getAirQualityInfo(aqi);
  const pollutants = getPollutantsInfo(components);

  return (
    <motion.div
      style={{
        background: "rgba(255, 255, 255, 0.9)",
        borderRadius: 16,
        padding: "10px",
        margin: "16px auto 0",
        maxWidth: 340,
        width: "100%",        // üëà –î–û–ë–ê–í–ò–¢–¨
        boxSizing: "border-box", // üëà –î–û–ë–ê–í–ò–¢–¨
        backdropFilter: "blur(10px)",
        boxShadow: "0 4px 20px rgba(0,0,0,0.1)",
        cursor: "pointer"
      }}
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: 0.4 }}
      onClick={() => setIsExpanded(!isExpanded)}
      whileHover={{ scale: 1.02 }}
      whileTap={{ scale: 0.98 }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–µ–≤—å—é */}
      <div style={{
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between"
      }}>
        <div style={{
          display: "flex",
          alignItems: "center",
          gap: 8
        }}>
          <span style={{ fontSize: 16 }}>üå¨Ô∏è</span>
          <div>
            <div style={{
              fontSize: 16,
              fontWeight: 600,
              color: "#374151",
              fontFamily: "Montserrat, Arial, sans-serif"
            }}>
              –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞
            </div>
            {!isExpanded && (
              <div style={{
                display: "flex",
                alignItems: "center",
                gap: 6,
                marginTop: 2
              }}>
                <span style={{ fontSize: 14 }}>{airInfo.icon}</span>
                <span style={{ 
                  fontSize: 14, 
                  fontWeight: 600,
                  color: airInfo.color,
                  fontFamily: "Montserrat, Arial, sans-serif"
                }}>
                  {airInfo.level}
                </span>
              </div>
            )}
          </div>
        </div>
        
        <ChevronIcon isOpen={isExpanded} />
      </div>

      {/* –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <AnimatePresence>
        {isExpanded && (
          <motion.div
            initial={{ opacity: 0, height: 0 }}
            animate={{ opacity: 1, height: "auto" }}
            exit={{ opacity: 0, height: 0 }}
            transition={{ duration: 0.3 }}
            style={{ overflow: "hidden" }}
          >
            <div style={{ marginTop: 16 }}>
              {/* –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
              <motion.div
                style={{
                  background: airInfo.bgColor,
                  borderRadius: 12,
                  padding: "12px",
                  marginBottom: 12,
                  border: `2px solid ${airInfo.color}30`,
                  position: "relative",
                  overflow: "hidden"
                }}
                initial={{ opacity: 0, scale: 0.9 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.4, delay: 0.1 }}
              >
                {/* –¶–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∫–∞ —Å–≤–µ—Ä—Ö—É */}
                <div style={{
                  position: "absolute",
                  top: 0,
                  left: 0,
                  right: 0,
                  height: 3,
                  background: airInfo.color,
                  borderRadius: "12px 12px 0 0"
                }} />

                <div style={{
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "space-between",
                  marginBottom: 8
                }}>
                  <div style={{
                    display: "flex",
                    alignItems: "center",
                    gap: 8
                  }}>
                    <span style={{ fontSize: 20 }}>{airInfo.icon}</span>
                    <div>
                      <div style={{
                        fontSize: 16,
                        fontWeight: 700,
                        color: airInfo.color,
                        fontFamily: "Montserrat, Arial, sans-serif"
                      }}>
                        {airInfo.level}
                      </div>
                      <div style={{
                        fontSize: 11,
                        color: "#6b7280",
                        fontFamily: "Montserrat, Arial, sans-serif"
                      }}>
                        AQI: {aqi}/5
                      </div>
                    </div>
                  </div>
                  
                  {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Ä–æ–≤–Ω—è */}
                  <div style={{
                    width: 60,
                    height: 8,
                    background: "#f3f4f6",
                    borderRadius: 4,
                    position: "relative",
                    overflow: "hidden"
                  }}>
                    <motion.div
                      style={{
                        height: "100%",
                        background: airInfo.color,
                        borderRadius: 4
                      }}
                      initial={{ width: 0 }}
                      animate={{ width: `${(aqi / 5) * 100}%` }}
                      transition={{ duration: 1, delay: 0.3 }}
                    />
                  </div>
                </div>

                <div style={{
                  fontSize: 14,
                  color: "#374151",
                  fontFamily: "Montserrat, Arial, sans-serif",
                  lineHeight: 1.4
                }}>
                  {airInfo.description}
                </div>
              </motion.div>

              {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è */}
              {airInfo.advice && (
                <motion.div
                  style={{
                    background: "#f8fafc",
                    borderRadius: 8,
                    padding: "8px 10px",
                    marginBottom: 12,
                    borderLeft: `3px solid ${airInfo.color}`
                  }}
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.4, delay: 0.4 }}
                >
                  <div style={{
                    fontSize: 13,
                    color: "#374151",
                    fontFamily: "Montserrat, Arial, sans-serif",
                    lineHeight: 1.4
                  }}>
                    üí° {airInfo.advice}
                  </div>
                </motion.div>
              )}

              {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≥—Ä—è–∑–Ω–∏—Ç–µ–ª–∏ */}
              {pollutants.length > 0 && (
                <div style={{
                  display: "grid",
                  gridTemplateColumns: "1fr 1fr",
                  gap: 8
                }}>
                  {pollutants.slice(0, 4).map((pollutant, index) => (
                    <motion.div
                      key={pollutant.name}
                      style={{
                        background: pollutant.dangerous ? "#fef2f2" : "#f9fafb",
                        borderRadius: 8,
                        padding: "6px 8px",
                        textAlign: "center",
                        border: `1px solid ${pollutant.dangerous ? "#fecaca" : "#e5e7eb"}`
                      }}
                      initial={{ opacity: 0, y: 10 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.3, delay: index * 0.1 + 0.5 }}
                    >
                      <div style={{
                        fontSize: 12,
                        fontWeight: 600,
                        color: pollutant.dangerous ? "#dc2626" : "#374151",
                        fontFamily: "Montserrat, Arial, sans-serif"
                      }}>
                        {pollutant.name}
                      </div>
                      <div style={{
                        fontSize: 12,
                        color: "#6b7280",
                        fontFamily: "Montserrat, Arial, sans-serif"
                      }}>
                        {Math.round(pollutant.value)} {pollutant.unit}
                      </div>
                    </motion.div>
                  ))}
                </div>
              )}
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  );
}